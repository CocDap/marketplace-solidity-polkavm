{"id":"316c274a823baf5fb542af221b684cb6","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title ERC-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC-721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {IERC4906-MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/NftMarketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n\ncontract NFTMarketplace is ERC721URIStorage {\n\n    uint256 private _tokenIds;\n    uint256 private _itemsSold;\n\n    uint256 listingPrice = 0.00025 ether;\n\n    address payable owner; \n\n    mapping(uint256 => MarketItem) private idToMarketItem;\n\n    struct MarketItem {\n      uint256 tokenId;\n      address payable seller;\n      address payable owner;\n      uint256 price;\n      bool sold;\n    }\n\n\n    event MarketItemCreated (\n      uint256 indexed tokenId,\n      address seller,\n      address owner,\n      uint256 price,\n      bool sold\n    );\n\n    event NFTPurchased (\n      uint256 indexed tokenId,\n      address indexed buyer,\n      address indexed seller,\n      uint256 price\n    );\n\n\n\n    constructor() ERC721(\"DOT's NFT\", \"DOTNFT\") {\n      owner = payable(msg.sender);\n    }\n\n    function updateListingPrice(uint _listingPrice) public payable {\n      require(owner == msg.sender, \"Only marketplace owner can update listing price.\");\n      listingPrice = _listingPrice;\n    }\n\n    function getListingPrice() public view returns (uint256) {\n      return listingPrice;\n    }\n\n\n    function createToken(string memory tokenURI, uint256 price) public payable returns (uint) {\n      _tokenIds++;\n\n      uint256 newTokenId = _tokenIds;\n\n      _mint(msg.sender, newTokenId);\n      _setTokenURI(newTokenId, tokenURI);\n      createMarketItem(newTokenId, price);\n\n      return newTokenId;\n    }\n\n    function createMarketItem(uint256 tokenId, uint256 price) private {\n\n      require(price > 0, \"Price must be at least 1 wei\");\n\n      require(msg.value == listingPrice, \"Price must be equal to listing price\");\n\n\n      idToMarketItem[tokenId] =  MarketItem(\n        tokenId,\n        payable(msg.sender),\n        payable(address(this)),\n        price,\n        false\n      );\n\n\n      _transfer(msg.sender, address(this), tokenId);\n      emit MarketItemCreated(\n        tokenId,\n        msg.sender,\n        address(this),\n        price,\n        false\n      );\n    }\n\n\n    function resellToken(uint256 tokenId, uint256 price) public payable {\n      require(idToMarketItem[tokenId].owner == msg.sender, \"Only item owner can perform this operation\");\n      require(msg.value == price, \"Price must be equal by sender.value\");\n      idToMarketItem[tokenId].sold = false;\n      idToMarketItem[tokenId].price = price;\n      idToMarketItem[tokenId].seller = payable(msg.sender);\n      idToMarketItem[tokenId].owner = payable(address(this));\n      _itemsSold--;\n\n      _transfer(msg.sender, address(this), tokenId);\n    }\n\n    function buy(uint256 tokenId) public payable {\n      uint price = idToMarketItem[tokenId].price;\n      address payable seller = idToMarketItem[tokenId].seller;\n      require(msg.value == price, \"Please submit the asking price in order to complete the purchase\");\n      idToMarketItem[tokenId].owner = payable(msg.sender);\n      idToMarketItem[tokenId].sold = true;\n      idToMarketItem[tokenId].seller = payable(address(0));\n      _itemsSold++;\n      \n      _transfer(address(this), msg.sender, tokenId);\n      payable(owner).transfer(listingPrice);\n      payable(seller).transfer(msg.value);\n      emit NFTPurchased(tokenId, msg.sender, seller, price);\n    \n    }\n\n\n    function fetchMarketItems() public view returns (MarketItem[] memory) {\n      uint itemCount = _tokenIds;\n      uint unsoldItemCount = _tokenIds - _itemsSold;\n      uint currentIndex = 0;\n\n      MarketItem[] memory items = new MarketItem[](unsoldItemCount);\n      for (uint i = 0; i < itemCount; i++) {\n\n        if (idToMarketItem[i + 1].owner == address(this)) {\n\n          uint currentId = i + 1;\n\n          MarketItem storage currentItem = idToMarketItem[currentId];\n\n          items[currentIndex] = currentItem;\n\n          currentIndex += 1;\n        }\n      }\n\n      return items;\n    }\n\n\n    function fetchMyNFTs() public view returns (MarketItem[] memory) {\n      uint totalItemCount = _tokenIds;\n      uint itemCount = 0;\n      uint currentIndex = 0;\n\n\n      for (uint i = 0; i < totalItemCount; i++) {\n        // check if nft is mine\n        if (idToMarketItem[i + 1].owner == msg.sender) {\n          itemCount += 1;\n        }\n      }\n\n      MarketItem[] memory items = new MarketItem[](itemCount);\n      for (uint i = 0; i < totalItemCount; i++) {\n\n        if (idToMarketItem[i + 1].owner == msg.sender) {\n          uint currentId = i + 1;\n          MarketItem storage currentItem = idToMarketItem[currentId];\n          items[currentIndex] = currentItem;\n          currentIndex += 1;\n        }\n      }\n      return items;\n    }\n\n    function fetchItemsListed() public view returns (MarketItem[] memory) {\n      uint totalItemCount = _tokenIds;\n      uint itemCount = 0;\n      uint currentIndex = 0;\n\n      for (uint i = 0; i < totalItemCount; i++) {\n        if (idToMarketItem[i + 1].seller == msg.sender) {\n          itemCount += 1;\n        }\n      }\n\n      MarketItem[] memory items = new MarketItem[](itemCount);\n      for (uint i = 0; i < totalItemCount; i++) {\n        if (idToMarketItem[i + 1].seller == msg.sender) {\n          uint currentId = i + 1;\n          MarketItem storage currentItem = idToMarketItem[currentId];\n          items[currentIndex] = currentItem;\n          currentIndex += 1;\n        }\n      }\n      \n      return items;\n    }\n}\n\n"}},"settings":{"optimizer":{"enabled":true,"parameters":"z"},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/NftMarketplace.sol\n","message":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n","severity":"warning","sourceLocation":{"file":"18","start":3215,"end":3252},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/NftMarketplace.sol\n","message":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n","severity":"warning","sourceLocation":{"file":"18","start":3260,"end":3295},"type":"Warning"}],"version":"0.8.26","long_version":"0.8.26+commit.8a97fa7a.Emscripten.clang","revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","sources":{"@openzeppelin/contracts/interfaces/IERC165.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3011]},"id":4,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4,"sourceUnit":3012,"src":"132:59:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"140:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:0"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3011],"IERC4906":[27],"IERC721":[1242]},"id":28,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":28,"sourceUnit":4,"src":"133:38:1","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":28,"sourceUnit":32,"src":"172:38:1","symbolAliases":[{"foreign":{"id":8,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"180:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11,"name":"IERC165","nameLocations":["279:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":3011,"src":"279:7:1"},"id":12,"nodeType":"InheritanceSpecifier","src":"279:7:1"},{"baseName":{"id":13,"name":"IERC721","nameLocations":["288:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"288:7:1"},"id":14,"nodeType":"InheritanceSpecifier","src":"288:7:1"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"212:45:1","text":"@title ERC-721 Metadata Update Extension"},"fullyImplemented":false,"id":27,"linearizedBaseContracts":[27,1242,3011],"name":"IERC4906","nameLocation":"267:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"302:201:1","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":19,"name":"MetadataUpdate","nameLocation":"514:14:1","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"537:8:1","nodeType":"VariableDeclaration","scope":19,"src":"529:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"528:18:1"},"src":"508:39:1"},{"anonymous":false,"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"553:212:1","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":26,"name":"BatchMetadataUpdate","nameLocation":"776:19:1","nodeType":"EventDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"804:12:1","nodeType":"VariableDeclaration","scope":26,"src":"796:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":21,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":24,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"826:10:1","nodeType":"VariableDeclaration","scope":26,"src":"818:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"795:42:1"},"src":"770:68:1"}],"scope":28,"src":"257:583:1","usedErrors":[],"usedEvents":[19,26,1141,1150,1159]}],"src":"107:734:1"}},"@openzeppelin/contracts/interfaces/IERC721.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC721":[1242]},"id":32,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":29,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":31,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":32,"sourceUnit":1243,"src":"132:52:2","symbolAliases":[{"foreign":{"id":30,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:79:2"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[168],"IERC20Errors":[73],"IERC721Errors":[121]},"id":169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":33,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":73,"linearizedBaseContracts":[73],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":43,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":43,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":43,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":43,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":48,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":48,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":53,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":53,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":62,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":62,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":62,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":62,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":67,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":67,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":72,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":72,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":169,"src":"280:1764:3","usedErrors":[43,48,53,62,67,72],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":121,"linearizedBaseContracts":[121],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":75,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":79,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":79,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":84,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":84,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":93,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":87,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":93,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":86,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":93,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":93,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":98,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":98,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":103,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":103,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":104,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":110,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":110,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":110,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":115,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":115,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":120,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":120,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":169,"src":"2190:2092:3","usedErrors":[79,84,93,98,103,110,115,120],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":168,"linearizedBaseContracts":[168],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":133,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":133,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":133,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":133,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":133,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":138,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":138,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":143,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":143,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":150,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":150,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":150,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":155,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":155,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":160,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":160,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":157,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":161,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":167,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":167,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":167,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":169,"src":"4430:2107:3","usedErrors":[133,138,143,150,155,160,167],"usedEvents":[]}],"src":"112:6426:3"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1521],"ERC165":[2999],"ERC721":[1125],"ERC721Utils":[1491],"IERC165":[3011],"IERC721":[1242],"IERC721Errors":[121],"IERC721Metadata":[1414],"Strings":[2975]},"id":1126,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":170,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":1243,"src":"133:38:4","symbolAliases":[{"foreign":{"id":171,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"141:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":1415,"src":"172:65:4","symbolAliases":[{"foreign":{"id":173,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"180:15:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":1492,"src":"238:52:4","symbolAliases":[{"foreign":{"id":175,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"246:11:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":1522,"src":"291:48:4","symbolAliases":[{"foreign":{"id":177,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"299:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":2976,"src":"340:48:4","symbolAliases":[{"foreign":{"id":179,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"348:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":3000,"src":"389:69:4","symbolAliases":[{"foreign":{"id":181,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"397:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":182,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"406:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1126,"sourceUnit":169,"src":"459:66:4","symbolAliases":[{"foreign":{"id":184,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"467:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":187,"name":"Context","nameLocations":["803:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1521,"src":"803:7:4"},"id":188,"nodeType":"InheritanceSpecifier","src":"803:7:4"},{"baseName":{"id":189,"name":"ERC165","nameLocations":["812:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2999,"src":"812:6:4"},"id":190,"nodeType":"InheritanceSpecifier","src":"812:6:4"},{"baseName":{"id":191,"name":"IERC721","nameLocations":["820:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"820:7:4"},"id":192,"nodeType":"InheritanceSpecifier","src":"820:7:4"},{"baseName":{"id":193,"name":"IERC721Metadata","nameLocations":["829:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":1414,"src":"829:15:4"},"id":194,"nodeType":"InheritanceSpecifier","src":"829:15:4"},{"baseName":{"id":195,"name":"IERC721Errors","nameLocations":["846:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":121,"src":"846:13:4"},"id":196,"nodeType":"InheritanceSpecifier","src":"846:13:4"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"527:247:4","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1125,"linearizedBaseContracts":[1125,121,1414,1242,2999,3011,1521],"name":"ERC721","nameLocation":"793:6:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":199,"libraryName":{"id":197,"name":"Strings","nameLocations":["872:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"872:7:4"},"nodeType":"UsingForDirective","src":"866:26:4","typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":201,"mutability":"mutable","name":"_name","nameLocation":"931:5:4","nodeType":"VariableDeclaration","scope":1125,"src":"916:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":203,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:4","nodeType":"VariableDeclaration","scope":1125,"src":"963:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":202,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":207,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":1125,"src":"992:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":206,"keyName":"tokenId","keyNameLocation":"1008:7:4","keyType":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":211,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:4","nodeType":"VariableDeclaration","scope":1125,"src":"1050:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":210,"keyName":"owner","keyNameLocation":"1066:5:4","keyType":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":215,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:4","nodeType":"VariableDeclaration","scope":1125,"src":"1108:59:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":214,"keyName":"tokenId","keyNameLocation":"1124:7:4","keyType":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":221,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:4","nodeType":"VariableDeclaration","scope":1125,"src":"1174:86:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":220,"keyName":"owner","keyNameLocation":"1190:5:4","keyType":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":219,"keyName":"operator","keyNameLocation":"1215:8:4","keyType":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":218,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":237,"nodeType":"Block","src":"1436:57:4","statements":[{"expression":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":229,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"1446:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":230,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"1454:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":232,"nodeType":"ExpressionStatement","src":"1446:13:4"},{"expression":{"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":233,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1469:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":234,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":236,"nodeType":"ExpressionStatement","src":"1469:17:4"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1267:108:4","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":238,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"name_","nameLocation":"1406:5:4","nodeType":"VariableDeclaration","scope":238,"src":"1392:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":223,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:4","nodeType":"VariableDeclaration","scope":238,"src":"1413:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":225,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:4"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"1436:0:4"},"scope":1125,"src":"1380:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2998,3010],"body":{"id":268,"nodeType":"Block","src":"1668:192:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1697:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":251,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"1717:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1242_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1242_$","typeString":"type(contract IERC721)"}],"id":250,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1712:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1242","typeString":"type(contract IERC721)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1753:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":257,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1773:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1414_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1414_$","typeString":"type(contract IERC721Metadata)"}],"id":256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1768:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1414","typeString":"type(contract IERC721Metadata)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":264,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"1841:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":262,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1817:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1125_$","typeString":"type(contract super ERC721)"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2998,"src":"1817:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":248,"id":267,"nodeType":"Return","src":"1678:175:4"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"1499:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":269,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:4","nodeType":"FunctionDefinition","overrides":{"id":245,"nodeType":"OverrideSpecifier","overrides":[{"id":243,"name":"ERC165","nameLocations":["1636:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2999,"src":"1636:6:4"},{"id":244,"name":"IERC165","nameLocations":["1644:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3011,"src":"1644:7:4"}],"src":"1627:25:4"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:4","nodeType":"VariableDeclaration","scope":269,"src":"1587:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":240,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:4"},"returnParameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"1662:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":246,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:4"},"scope":1125,"src":"1560:300:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1167],"body":{"id":296,"nodeType":"Block","src":"1991:136:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":277,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2005:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:4","typeDescriptions":{}}},"id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":291,"nodeType":"IfStatement","src":"2001:87:4","trueBody":{"id":290,"nodeType":"Block","src":"2026:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:4","typeDescriptions":{}}},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":283,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2047:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":289,"nodeType":"RevertStatement","src":"2040:37:4"}]}},{"expression":{"baseExpression":{"id":292,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"2104:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":294,"indexExpression":{"id":293,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2114:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":276,"id":295,"nodeType":"Return","src":"2097:23:4"}]},"documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"1866:48:4","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":297,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:4","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"owner","nameLocation":"1946:5:4","nodeType":"VariableDeclaration","scope":297,"src":"1938:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:4"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"1982:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:4"},"scope":1125,"src":"1919:208:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1175],"body":{"id":309,"nodeType":"Block","src":"2256:46:4","statements":[{"expression":{"arguments":[{"id":306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":305,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2273:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":304,"id":308,"nodeType":"Return","src":"2266:29:4"}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"2133:46:4","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":310,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:4","nodeType":"FunctionDefinition","parameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:4","nodeType":"VariableDeclaration","scope":310,"src":"2201:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:4"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"2247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:4"},"scope":1125,"src":"2184:118:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1399],"body":{"id":318,"nodeType":"Block","src":"2424:29:4","statements":[{"expression":{"id":316,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"2441:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":315,"id":317,"nodeType":"Return","src":"2434:12:4"}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"2308:51:4","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:4","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[],"src":"2377:2:4"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"2409:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":313,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:4"},"scope":1125,"src":"2364:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1405],"body":{"id":327,"nodeType":"Block","src":"2579:31:4","statements":[{"expression":{"id":325,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2596:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":324,"id":326,"nodeType":"Return","src":"2589:14:4"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"2459:53:4","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":328,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:4","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"2532:2:4"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":328,"src":"2564:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":322,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:4"},"scope":1125,"src":"2517:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1413],"body":{"id":363,"nodeType":"Block","src":"2755:176:4","statements":[{"expression":{"arguments":[{"id":337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":336,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2765:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":339,"nodeType":"ExpressionStatement","src":"2765:22:4"},{"assignments":[341],"declarations":[{"constant":false,"id":341,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:4","nodeType":"VariableDeclaration","scope":363,"src":"2798:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":340,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":344,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":342,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"2822:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:4"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":347,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2855:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":345,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:4","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:4","memberName":"length","nodeType":"MemberAccess","src":"2849:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:4","trueExpression":{"arguments":[{"id":355,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2891:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":356,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"2900:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:4","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1687,"src":"2900:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":352,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:4","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:4","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:4","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":335,"id":362,"nodeType":"Return","src":"2842:82:4"}]},"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"2616:55:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":364,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:4","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:4","nodeType":"VariableDeclaration","scope":364,"src":"2694:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:4"},"returnParameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":364,"src":"2740:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:4"},"scope":1125,"src":"2676:255:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":372,"nodeType":"Block","src":"3239:26:4","statements":[{"expression":{"hexValue":"","id":370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":369,"id":371,"nodeType":"Return","src":"3249:9:4"}]},"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"2937:231:4","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":373,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:4","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"3190:2:4"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":373,"src":"3224:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":367,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:4"},"scope":1125,"src":"3173:92:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1215],"body":{"id":388,"nodeType":"Block","src":"3383:52:4","statements":[{"expression":{"arguments":[{"id":382,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"3402:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":383,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"3406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3415:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":381,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[992,1058],"referencedDeclaration":992,"src":"3393:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"3393:35:4"}]},"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"3271:46:4","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":389,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:4","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"to","nameLocation":"3347:2:4","nodeType":"VariableDeclaration","scope":389,"src":"3339:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:4","nodeType":"VariableDeclaration","scope":389,"src":"3351:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:4"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"3383:0:4"},"scope":1125,"src":"3322:113:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1231],"body":{"id":405,"nodeType":"Block","src":"3572:78:4","statements":[{"expression":{"arguments":[{"id":398,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"3596:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":397,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3582:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":400,"nodeType":"ExpressionStatement","src":"3582:22:4"},{"expression":{"arguments":[{"id":402,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"3635:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":401,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"3622:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":396,"id":404,"nodeType":"Return","src":"3615:28:4"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3441:50:4","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":406,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:4","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:4","nodeType":"VariableDeclaration","scope":406,"src":"3517:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:4"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"3563:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:4"},"scope":1125,"src":"3496:154:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1223],"body":{"id":421,"nodeType":"Block","src":"3792:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"3821:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":417,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"3835:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":418,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3845:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":414,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"3802:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":420,"nodeType":"ExpressionStatement","src":"3802:52:4"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"3656:56:4","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:4","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"operator","nameLocation":"3752:8:4","nodeType":"VariableDeclaration","scope":422,"src":"3744:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"approved","nameLocation":"3767:8:4","nodeType":"VariableDeclaration","scope":422,"src":"3762:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":410,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:4"},"returnParameters":{"id":413,"nodeType":"ParameterList","parameters":[],"src":"3792:0:4"},"scope":1125,"src":"3717:144:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1241],"body":{"id":438,"nodeType":"Block","src":"4021:59:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":432,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"4038:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":434,"indexExpression":{"id":433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"4057:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":436,"indexExpression":{"id":435,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4064:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":431,"id":437,"nodeType":"Return","src":"4031:42:4"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"3867:55:4","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":439,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:4","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"owner","nameLocation":"3961:5:4","nodeType":"VariableDeclaration","scope":439,"src":"3953:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"operator","nameLocation":"3976:8:4","nodeType":"VariableDeclaration","scope":439,"src":"3968:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:4"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":439,"src":"4015:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":429,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:4"},"scope":1125,"src":"3927:153:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1207],"body":{"id":484,"nodeType":"Block","src":"4222:498:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4236:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:4","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":463,"nodeType":"IfStatement","src":"4232:87:4","trueBody":{"id":462,"nodeType":"Block","src":"4254:65:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:4","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":455,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"4275:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":461,"nodeType":"RevertStatement","src":"4268:40:4"}]}},{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:4","nodeType":"VariableDeclaration","scope":484,"src":"4537:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":472,"initialValue":{"arguments":[{"id":467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"4569:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4573:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":469,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"4582:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":466,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4561:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":473,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4609:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4626:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":483,"nodeType":"IfStatement","src":"4605:109:4","trueBody":{"id":482,"nodeType":"Block","src":"4632:82:4","statements":[{"errorCall":{"arguments":[{"id":477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4674:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":478,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"4680:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":479,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4689:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"4653:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":481,"nodeType":"RevertStatement","src":"4646:57:4"}]}}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"4086:51:4","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":485,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:4","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"from","nameLocation":"4172:4:4","nodeType":"VariableDeclaration","scope":485,"src":"4164:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"to","nameLocation":"4186:2:4","nodeType":"VariableDeclaration","scope":485,"src":"4178:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:4","nodeType":"VariableDeclaration","scope":485,"src":"4190:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:4"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"4222:0:4"},"scope":1125,"src":"4142:578:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1197],"body":{"id":502,"nodeType":"Block","src":"4862:56:4","statements":[{"expression":{"arguments":[{"id":496,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"4889:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":497,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"4895:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":498,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"4899:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":495,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[503,533],"referencedDeclaration":533,"src":"4872:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"4872:39:4"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"4726:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":503,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:4","nodeType":"FunctionDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"from","nameLocation":"4820:4:4","nodeType":"VariableDeclaration","scope":503,"src":"4812:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":490,"mutability":"mutable","name":"to","nameLocation":"4834:2:4","nodeType":"VariableDeclaration","scope":503,"src":"4826:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":492,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:4","nodeType":"VariableDeclaration","scope":503,"src":"4838:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":491,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:4"},"returnParameters":{"id":494,"nodeType":"ParameterList","parameters":[],"src":"4862:0:4"},"scope":1125,"src":"4786:132:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1187],"body":{"id":532,"nodeType":"Block","src":"5087:130:4","statements":[{"expression":{"arguments":[{"id":516,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5110:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5116:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5120:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":515,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5097:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":520,"nodeType":"ExpressionStatement","src":"5097:31:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":524,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"5172:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":506,"src":"5186:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":527,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5192:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"5196:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":529,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"5205:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":521,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"5138:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1491_$","typeString":"type(library ERC721Utils)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:4","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1490,"src":"5138:33:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"5138:72:4"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"4924:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":533,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:4","nodeType":"FunctionDefinition","parameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"from","nameLocation":"5018:4:4","nodeType":"VariableDeclaration","scope":533,"src":"5010:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"to","nameLocation":"5032:2:4","nodeType":"VariableDeclaration","scope":533,"src":"5024:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:4","nodeType":"VariableDeclaration","scope":533,"src":"5036:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"data","nameLocation":"5066:4:4","nodeType":"VariableDeclaration","scope":533,"src":"5053:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":511,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:4"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"5087:0:4"},"scope":1125,"src":"4984:233:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":545,"nodeType":"Block","src":"5807:40:4","statements":[{"expression":{"baseExpression":{"id":541,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"5824:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":543,"indexExpression":{"id":542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"5832:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":540,"id":544,"nodeType":"Return","src":"5817:23:4"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"5223:504:4","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:4","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:4","nodeType":"VariableDeclaration","scope":546,"src":"5750:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:4"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":546,"src":"5798:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:4"},"scope":1125,"src":"5732:115:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"6042:48:4","statements":[{"expression":{"baseExpression":{"id":554,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"6059:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":556,"indexExpression":{"id":555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"6075:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":553,"id":557,"nodeType":"Return","src":"6052:31:4"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"5853:105:4","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:4","nodeType":"FunctionDefinition","parameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:4","nodeType":"VariableDeclaration","scope":559,"src":"5985:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:4"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"6033:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:4"},"scope":1125,"src":"5963:127:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"6510:163:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":571,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6539:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:4","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":577,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"6577:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":578,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6586:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":581,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"6614:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6621:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":580,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"6597:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":586,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6633:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6658:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":570,"id":593,"nodeType":"Return","src":"6520:146:4"}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"6096:300:4","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:4","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"owner","nameLocation":"6432:5:4","nodeType":"VariableDeclaration","scope":595,"src":"6424:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"spender","nameLocation":"6447:7:4","nodeType":"VariableDeclaration","scope":595,"src":"6439:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:4","nodeType":"VariableDeclaration","scope":595,"src":"6456:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:4"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"6504:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":568,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:4"},"scope":1125,"src":"6401:272:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":631,"nodeType":"Block","src":"7202:271:4","statements":[{"condition":{"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:4","subExpression":{"arguments":[{"id":606,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7231:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7238:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"7247:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":605,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"7217:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":630,"nodeType":"IfStatement","src":"7212:255:4","trueBody":{"id":629,"nodeType":"Block","src":"7257:210:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":611,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"7275:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":612,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:4","typeDescriptions":{}}},"id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":627,"nodeType":"Block","src":"7373:84:4","statements":[{"errorCall":{"arguments":[{"id":623,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7425:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":624,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"7434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":622,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"7398:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":626,"nodeType":"RevertStatement","src":"7391:51:4"}]},"id":628,"nodeType":"IfStatement","src":"7271:186:4","trueBody":{"id":621,"nodeType":"Block","src":"7296:71:4","statements":[{"errorCall":{"arguments":[{"id":618,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"7344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":617,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"7321:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":620,"nodeType":"RevertStatement","src":"7314:38:4"}]}}]}}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"6679:421:4","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":632,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:4","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"owner","nameLocation":"7139:5:4","nodeType":"VariableDeclaration","scope":632,"src":"7131:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"spender","nameLocation":"7154:7:4","nodeType":"VariableDeclaration","scope":632,"src":"7146:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:4","nodeType":"VariableDeclaration","scope":632,"src":"7163:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:4"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"7202:0:4"},"scope":1125,"src":"7105:368:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"8190:78:4","statements":[{"id":646,"nodeType":"UncheckedBlock","src":"8200:62:4","statements":[{"expression":{"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":640,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"8224:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":642,"indexExpression":{"id":641,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"8234:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"8246:5:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":645,"nodeType":"ExpressionStatement","src":"8224:27:4"}]}]},"documentation":{"id":633,"nodeType":"StructuredDocumentation","src":"7479:631:4","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:4","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"account","nameLocation":"8149:7:4","nodeType":"VariableDeclaration","scope":648,"src":"8141:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"value","nameLocation":"8166:5:4","nodeType":"VariableDeclaration","scope":648,"src":"8158:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":636,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:4"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"8190:0:4"},"scope":1125,"src":"8115:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":737,"nodeType":"Block","src":"8956:700:4","statements":[{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"from","nameLocation":"8974:4:4","nodeType":"VariableDeclaration","scope":737,"src":"8966:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":665,"initialValue":{"arguments":[{"id":663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"8990:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8981:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":666,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"9058:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:4","typeDescriptions":{}}},"id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":679,"nodeType":"IfStatement","src":"9054:86:4","trueBody":{"id":678,"nodeType":"Block","src":"9078:62:4","statements":[{"expression":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9109:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"9115:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"9121:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"9092:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"9092:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9184:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:4","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":707,"nodeType":"IfStatement","src":"9180:256:4","trueBody":{"id":706,"nodeType":"Block","src":"9204:232:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":687,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:4","typeDescriptions":{}}},"id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"9321:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:4","typeDescriptions":{}}},"id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":686,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[992,1058],"referencedDeclaration":1058,"src":"9300:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":698,"nodeType":"ExpressionStatement","src":"9300:48:4"},{"id":705,"nodeType":"UncheckedBlock","src":"9363:63:4","statements":[{"expression":{"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":699,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"9391:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":701,"indexExpression":{"id":700,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9401:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":704,"nodeType":"ExpressionStatement","src":"9391:20:4"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":708,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"9450:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:4","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":722,"nodeType":"IfStatement","src":"9446:107:4","trueBody":{"id":721,"nodeType":"Block","src":"9468:85:4","statements":[{"id":720,"nodeType":"UncheckedBlock","src":"9482:61:4","statements":[{"expression":{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":714,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"9510:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":716,"indexExpression":{"id":715,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"9520:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":719,"nodeType":"ExpressionStatement","src":"9510:18:4"}]}]}},{"expression":{"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":723,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"9563:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":725,"indexExpression":{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"9571:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"9582:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":728,"nodeType":"ExpressionStatement","src":"9563:21:4"},{"eventCall":{"arguments":[{"id":730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9609:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"9615:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":653,"src":"9619:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"9600:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"EmitStatement","src":"9595:32:4"},{"expression":{"id":735,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"9645:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":659,"id":736,"nodeType":"Return","src":"9638:11:4"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"8274:582:4","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":738,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:4","nodeType":"FunctionDefinition","parameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"to","nameLocation":"8886:2:4","nodeType":"VariableDeclaration","scope":738,"src":"8878:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:4","nodeType":"VariableDeclaration","scope":738,"src":"8890:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"auth","nameLocation":"8915:4:4","nodeType":"VariableDeclaration","scope":738,"src":"8907:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:4"},"returnParameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"8947:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:4"},"scope":1125,"src":"8861:795:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":787,"nodeType":"Block","src":"10031:274:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"10045:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:4","typeDescriptions":{}}},"id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"10041:87:4","trueBody":{"id":759,"nodeType":"Block","src":"10063:65:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:4","typeDescriptions":{}}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":752,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"10084:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":758,"nodeType":"RevertStatement","src":"10077:40:4"}]}},{"assignments":[762],"declarations":[{"constant":false,"id":762,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:4","nodeType":"VariableDeclaration","scope":787,"src":"10137:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[{"id":764,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"10169:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"10173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:4","typeDescriptions":{}}},"id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":763,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"10161:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":772,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"10207:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:4","typeDescriptions":{}}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":786,"nodeType":"IfStatement","src":"10203:96:4","trueBody":{"id":785,"nodeType":"Block","src":"10236:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:4","typeDescriptions":{}}},"id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"10257:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":784,"nodeType":"RevertStatement","src":"10250:38:4"}]}}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"9662:311:4","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":788,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:4","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"to","nameLocation":"10001:2:4","nodeType":"VariableDeclaration","scope":788,"src":"9993:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:4","nodeType":"VariableDeclaration","scope":788,"src":"10005:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:4"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[],"src":"10031:0:4"},"scope":1125,"src":"9978:327:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"10713:43:4","statements":[{"expression":{"arguments":[{"id":797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"10733:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"10737:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":796,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[803,833],"referencedDeclaration":833,"src":"10723:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"10723:26:4"}]},"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"10311:340:4","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:4","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"to","nameLocation":"10683:2:4","nodeType":"VariableDeclaration","scope":803,"src":"10675:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:4","nodeType":"VariableDeclaration","scope":803,"src":"10687:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:4"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"10713:0:4"},"scope":1125,"src":"10656:100:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":832,"nodeType":"Block","src":"11061:123:4","statements":[{"expression":{"arguments":[{"id":814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"11077:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"11081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":813,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"11071:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"11071:18:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":821,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"11133:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:4","typeDescriptions":{}}},"id":826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":827,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"11159:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"11163:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":829,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"11172:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":818,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"11099:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1491_$","typeString":"type(library ERC721Utils)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:4","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1490,"src":"11099:33:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":831,"nodeType":"ExpressionStatement","src":"11099:78:4"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"10762:210:4","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":833,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:4","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"11004:2:4","nodeType":"VariableDeclaration","scope":833,"src":"10996:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:4","nodeType":"VariableDeclaration","scope":833,"src":"11008:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"data","nameLocation":"11038:4:4","nodeType":"VariableDeclaration","scope":833,"src":"11025:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":809,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:4"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"11061:0:4"},"scope":1125,"src":"10977:207:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":865,"nodeType":"Block","src":"11551:186:4","statements":[{"assignments":[840],"declarations":[{"constant":false,"id":840,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:4","nodeType":"VariableDeclaration","scope":865,"src":"11561:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":852,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:4","typeDescriptions":{}}},"id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"11605:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:4","typeDescriptions":{}}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":841,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"11585:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":853,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"11639:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:4","typeDescriptions":{}}},"id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":864,"nodeType":"IfStatement","src":"11635:96:4","trueBody":{"id":863,"nodeType":"Block","src":"11668:63:4","statements":[{"errorCall":{"arguments":[{"id":860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"11712:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"11689:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":862,"nodeType":"RevertStatement","src":"11682:38:4"}]}}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"11190:315:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:4","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:4","nodeType":"VariableDeclaration","scope":866,"src":"11525:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:4"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"11551:0:4"},"scope":1125,"src":"11510:227:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":925,"nodeType":"Block","src":"12132:389:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"12146:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:4","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":890,"nodeType":"IfStatement","src":"12142:87:4","trueBody":{"id":889,"nodeType":"Block","src":"12164:65:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":883,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:4","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":882,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"12185:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":888,"nodeType":"RevertStatement","src":"12178:40:4"}]}},{"assignments":[892],"declarations":[{"constant":false,"id":892,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:4","nodeType":"VariableDeclaration","scope":925,"src":"12238:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":901,"initialValue":{"arguments":[{"id":894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"12270:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"12274:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:4","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":893,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"12262:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":902,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"12308:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:4","typeDescriptions":{}}},"id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":913,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"12410:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":914,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"12427:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":923,"nodeType":"IfStatement","src":"12406:109:4","trueBody":{"id":922,"nodeType":"Block","src":"12433:82:4","statements":[{"errorCall":{"arguments":[{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"12475:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"12481:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":919,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"12490:13:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":916,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"12454:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":921,"nodeType":"RevertStatement","src":"12447:57:4"}]}},"id":924,"nodeType":"IfStatement","src":"12304:211:4","trueBody":{"id":912,"nodeType":"Block","src":"12337:63:4","statements":[{"errorCall":{"arguments":[{"id":909,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"12381:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":908,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"12358:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":911,"nodeType":"RevertStatement","src":"12351:38:4"}]}}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"11743:313:4","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":926,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:4","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"from","nameLocation":"12088:4:4","nodeType":"VariableDeclaration","scope":926,"src":"12080:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"to","nameLocation":"12102:2:4","nodeType":"VariableDeclaration","scope":926,"src":"12094:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:4","nodeType":"VariableDeclaration","scope":926,"src":"12106:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:4"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"12132:0:4"},"scope":1125,"src":"12061:460:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":943,"nodeType":"Block","src":"13530:53:4","statements":[{"expression":{"arguments":[{"id":937,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"13554:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"13560:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"13564:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":936,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[944,974],"referencedDeclaration":974,"src":"13540:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":942,"nodeType":"ExpressionStatement","src":"13540:36:4"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"12527:923:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":944,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:4","nodeType":"FunctionDefinition","parameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"from","nameLocation":"13486:4:4","nodeType":"VariableDeclaration","scope":944,"src":"13478:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":931,"mutability":"mutable","name":"to","nameLocation":"13500:2:4","nodeType":"VariableDeclaration","scope":944,"src":"13492:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:4","nodeType":"VariableDeclaration","scope":944,"src":"13504:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:4"},"returnParameters":{"id":935,"nodeType":"ParameterList","parameters":[],"src":"13530:0:4"},"scope":1125,"src":"13455:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":973,"nodeType":"Block","src":"13922:127:4","statements":[{"expression":{"arguments":[{"id":957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"13942:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"13948:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"13952:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":956,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"13932:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"13932:28:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":965,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"14004:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"14018:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"14024:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":969,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"14028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":970,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"14037:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":962,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"13970:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1491_$","typeString":"type(library ERC721Utils)"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:4","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1490,"src":"13970:33:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":972,"nodeType":"ExpressionStatement","src":"13970:72:4"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"13589:226:4","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":974,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:4","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"from","nameLocation":"13851:4:4","nodeType":"VariableDeclaration","scope":974,"src":"13843:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"to","nameLocation":"13865:2:4","nodeType":"VariableDeclaration","scope":974,"src":"13857:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:4","nodeType":"VariableDeclaration","scope":974,"src":"13869:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"data","nameLocation":"13899:4:4","nodeType":"VariableDeclaration","scope":974,"src":"13886:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:4"},"returnParameters":{"id":955,"nodeType":"ParameterList","parameters":[],"src":"13922:0:4"},"scope":1125,"src":"13820:229:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":991,"nodeType":"Block","src":"14562:50:4","statements":[{"expression":{"arguments":[{"id":985,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"14581:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"14585:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":987,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"14594:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":984,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[992,1058],"referencedDeclaration":1058,"src":"14572:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":990,"nodeType":"ExpressionStatement","src":"14572:33:4"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"14055:432:4","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":992,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:4","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"to","nameLocation":"14518:2:4","nodeType":"VariableDeclaration","scope":992,"src":"14510:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:4","nodeType":"VariableDeclaration","scope":992,"src":"14522:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"auth","nameLocation":"14547:4:4","nodeType":"VariableDeclaration","scope":992,"src":"14539:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:4"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"14562:0:4"},"scope":1125,"src":"14492:120:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1057,"nodeType":"Block","src":"14888:568:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"14954:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1005,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"14967:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:4","typeDescriptions":{}}},"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1050,"nodeType":"IfStatement","src":"14950:460:4","trueBody":{"id":1049,"nodeType":"Block","src":"14987:423:4","statements":[{"assignments":[1013],"declarations":[{"constant":false,"id":1013,"mutability":"mutable","name":"owner","nameLocation":"15009:5:4","nodeType":"VariableDeclaration","scope":1049,"src":"15001:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"id":1015,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"15031:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1014,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"15017:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"15167:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:4","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"15189:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1025,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"15198:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:4","subExpression":{"arguments":[{"id":1029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"15224:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"15231:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1028,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"15207:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1039,"nodeType":"IfStatement","src":"15163:142:4","trueBody":{"id":1038,"nodeType":"Block","src":"15238:67:4","statements":[{"errorCall":{"arguments":[{"id":1035,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"15285:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"15263:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1037,"nodeType":"RevertStatement","src":"15256:34:4"}]}},{"condition":{"id":1040,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"15323:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1048,"nodeType":"IfStatement","src":"15319:81:4","trueBody":{"id":1047,"nodeType":"Block","src":"15334:66:4","statements":[{"eventCall":{"arguments":[{"id":1042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"15366:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"15373:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"15377:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"15357:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"EmitStatement","src":"15352:33:4"}]}}]}},{"expression":{"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1051,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"15420:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1053,"indexExpression":{"id":1052,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"15436:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"15447:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1056,"nodeType":"ExpressionStatement","src":"15420:29:4"}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"14618:171:4","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1058,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:4","nodeType":"FunctionDefinition","parameters":{"id":1002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"to","nameLocation":"14820:2:4","nodeType":"VariableDeclaration","scope":1058,"src":"14812:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:4","nodeType":"VariableDeclaration","scope":1058,"src":"14824:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"auth","nameLocation":"14849:4:4","nodeType":"VariableDeclaration","scope":1058,"src":"14841:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:4","nodeType":"VariableDeclaration","scope":1058,"src":"14855:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1000,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:4"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"14888:0:4"},"scope":1125,"src":"14794:662:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1094,"nodeType":"Block","src":"15758:219:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"15772:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:4","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"15768:91:4","trueBody":{"id":1078,"nodeType":"Block","src":"15796:63:4","statements":[{"errorCall":{"arguments":[{"id":1075,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"15839:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1074,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"15817:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1077,"nodeType":"RevertStatement","src":"15810:38:4"}]}},{"expression":{"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1080,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"15868:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1083,"indexExpression":{"id":1081,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"15887:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1084,"indexExpression":{"id":1082,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"15894:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1085,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"15906:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"ExpressionStatement","src":"15868:46:4"},{"eventCall":{"arguments":[{"id":1089,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"15944:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"15951:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1091,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"15961:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1088,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"15929:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"EmitStatement","src":"15924:46:4"}]},"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"15462:198:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:4","nodeType":"FunctionDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"owner","nameLocation":"15701:5:4","nodeType":"VariableDeclaration","scope":1095,"src":"15693:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"operator","nameLocation":"15716:8:4","nodeType":"VariableDeclaration","scope":1095,"src":"15708:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"approved","nameLocation":"15731:8:4","nodeType":"VariableDeclaration","scope":1095,"src":"15726:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1064,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:4"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[],"src":"15758:0:4"},"scope":1125,"src":"15665:312:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1123,"nodeType":"Block","src":"16284:169:4","statements":[{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"owner","nameLocation":"16302:5:4","nodeType":"VariableDeclaration","scope":1123,"src":"16294:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1108,"initialValue":{"arguments":[{"id":1106,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"16319:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1105,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"16310:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"16341:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:4","typeDescriptions":{}}},"id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1120,"nodeType":"IfStatement","src":"16337:88:4","trueBody":{"id":1119,"nodeType":"Block","src":"16362:63:4","statements":[{"errorCall":{"arguments":[{"id":1116,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"16406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1115,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"16383:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1118,"nodeType":"RevertStatement","src":"16376:38:4"}]}},{"expression":{"id":1121,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"16441:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1102,"id":1122,"nodeType":"Return","src":"16434:12:4"}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"15983:224:4","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1124,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:4","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:4","nodeType":"VariableDeclaration","scope":1124,"src":"16235:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:4"},"returnParameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1124,"src":"16275:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1100,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:4"},"scope":1125,"src":"16212:241:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1126,"src":"775:15680:4","usedErrors":[79,84,93,98,103,110,115,120],"usedEvents":[1141,1150,1159]}],"src":"107:16349:4"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3011],"IERC721":[1242]},"id":1243,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1127,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1129,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1243,"sourceUnit":3012,"src":"134:62:5","symbolAliases":[{"foreign":{"id":1128,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"142:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1131,"name":"IERC165","nameLocations":["288:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3011,"src":"288:7:5"},"id":1132,"nodeType":"InheritanceSpecifier","src":"288:7:5"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"198:68:5","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1242,"linearizedBaseContracts":[1242,3011],"name":"IERC721","nameLocation":"277:7:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1133,"nodeType":"StructuredDocumentation","src":"302:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1141,"name":"Transfer","nameLocation":"401:8:5","nodeType":"EventDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:5","nodeType":"VariableDeclaration","scope":1141,"src":"410:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:5","nodeType":"VariableDeclaration","scope":1141,"src":"432:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:5","nodeType":"VariableDeclaration","scope":1141,"src":"452:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:5"},"src":"395:82:5"},{"anonymous":false,"documentation":{"id":1142,"nodeType":"StructuredDocumentation","src":"483:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1150,"name":"Approval","nameLocation":"588:8:5","nodeType":"EventDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1144,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:5","nodeType":"VariableDeclaration","scope":1150,"src":"597:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:5","nodeType":"VariableDeclaration","scope":1150,"src":"620:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:5","nodeType":"VariableDeclaration","scope":1150,"src":"646:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:5"},"src":"582:89:5"},{"anonymous":false,"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"677:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1159,"name":"ApprovalForAll","nameLocation":"805:14:5","nodeType":"EventDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:5","nodeType":"VariableDeclaration","scope":1159,"src":"820:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:5","nodeType":"VariableDeclaration","scope":1159,"src":"843:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:5","nodeType":"VariableDeclaration","scope":1159,"src":"869:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1156,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:5"},"src":"799:85:5"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"890:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1167,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:5","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"owner","nameLocation":"998:5:5","nodeType":"VariableDeclaration","scope":1167,"src":"990:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:5"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"balance","nameLocation":"1036:7:5","nodeType":"VariableDeclaration","scope":1167,"src":"1028:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:5"},"scope":1242,"src":"971:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"1051:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:5","nodeType":"FunctionDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:5","nodeType":"VariableDeclaration","scope":1175,"src":"1204:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:5"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1173,"mutability":"mutable","name":"owner","nameLocation":"1252:5:5","nodeType":"VariableDeclaration","scope":1175,"src":"1244:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:5"},"scope":1242,"src":"1187:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"1265:565:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1187,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:5","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"from","nameLocation":"1869:4:5","nodeType":"VariableDeclaration","scope":1187,"src":"1861:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"to","nameLocation":"1883:2:5","nodeType":"VariableDeclaration","scope":1187,"src":"1875:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1182,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:5","nodeType":"VariableDeclaration","scope":1187,"src":"1887:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1184,"mutability":"mutable","name":"data","nameLocation":"1919:4:5","nodeType":"VariableDeclaration","scope":1187,"src":"1904:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1183,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:5"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"1933:0:5"},"scope":1242,"src":"1835:99:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"1940:706:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1197,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:5","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"from","nameLocation":"2685:4:5","nodeType":"VariableDeclaration","scope":1197,"src":"2677:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"to","nameLocation":"2699:2:5","nodeType":"VariableDeclaration","scope":1197,"src":"2691:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1191,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1194,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:5","nodeType":"VariableDeclaration","scope":1197,"src":"2703:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:5"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[],"src":"2728:0:5"},"scope":1242,"src":"2651:78:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2735:733:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1207,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:5","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"from","nameLocation":"3503:4:5","nodeType":"VariableDeclaration","scope":1207,"src":"3495:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"to","nameLocation":"3517:2:5","nodeType":"VariableDeclaration","scope":1207,"src":"3509:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:5","nodeType":"VariableDeclaration","scope":1207,"src":"3521:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:5"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[],"src":"3546:0:5"},"scope":1242,"src":"3473:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"3553:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1215,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:5","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"to","nameLocation":"4035:2:5","nodeType":"VariableDeclaration","scope":1215,"src":"4027:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:5","nodeType":"VariableDeclaration","scope":1215,"src":"4039:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:5"},"returnParameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"4064:0:5"},"scope":1242,"src":"4010:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"4071:315:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1223,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:5","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"operator","nameLocation":"4426:8:5","nodeType":"VariableDeclaration","scope":1223,"src":"4418:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"approved","nameLocation":"4441:8:5","nodeType":"VariableDeclaration","scope":1223,"src":"4436:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1219,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:5"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"4459:0:5"},"scope":1242,"src":"4391:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"4466:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1231,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:5","nodeType":"FunctionDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:5","nodeType":"VariableDeclaration","scope":1231,"src":"4631:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:5"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"operator","nameLocation":"4679:8:5","nodeType":"VariableDeclaration","scope":1231,"src":"4671:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:5"},"scope":1242,"src":"4610:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"4695:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1241,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:5","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"owner","nameLocation":"4872:5:5","nodeType":"VariableDeclaration","scope":1241,"src":"4864:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"operator","nameLocation":"4887:8:5","nodeType":"VariableDeclaration","scope":1241,"src":"4879:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:5"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"4920:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1238,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:5"},"scope":1242,"src":"4838:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1243,"src":"267:4661:5","usedErrors":[],"usedEvents":[1141,1150,1159]}],"src":"108:4821:5"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1260]},"id":1261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1244,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"142:154:6","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1260,"linearizedBaseContracts":[1260],"name":"IERC721Receiver","nameLocation":"307:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"329:500:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1259,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:6","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"operator","nameLocation":"877:8:6","nodeType":"VariableDeclaration","scope":1259,"src":"869:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"from","nameLocation":"903:4:6","nodeType":"VariableDeclaration","scope":1259,"src":"895:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:6","nodeType":"VariableDeclaration","scope":1259,"src":"917:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"data","nameLocation":"957:4:6","nodeType":"VariableDeclaration","scope":1259,"src":"942:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1253,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:6"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"986:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1256,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:6"},"scope":1260,"src":"834:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1261,"src":"297:699:6","usedErrors":[],"usedEvents":[]}],"src":"116:881:6"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"ERC721":[1125],"ERC721URIStorage":[1386],"IERC165":[3011],"IERC4906":[27],"Strings":[2975]},"id":1387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1262,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1387,"sourceUnit":1126,"src":"154:37:7","symbolAliases":[{"foreign":{"id":1263,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"162:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../../utils/Strings.sol","id":1266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1387,"sourceUnit":2976,"src":"192:51:7","symbolAliases":[{"foreign":{"id":1265,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"200:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1268,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1387,"sourceUnit":28,"src":"244:58:7","symbolAliases":[{"foreign":{"id":1267,"name":"IERC4906","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"252:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"../../../interfaces/IERC165.sol","id":1270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1387,"sourceUnit":4,"src":"303:56:7","symbolAliases":[{"foreign":{"id":1269,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"311:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1272,"name":"IERC4906","nameLocations":["470:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"470:8:7"},"id":1273,"nodeType":"InheritanceSpecifier","src":"470:8:7"},{"baseName":{"id":1274,"name":"ERC721","nameLocations":["480:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"480:6:7"},"id":1275,"nodeType":"InheritanceSpecifier","src":"480:6:7"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"361:70:7","text":" @dev ERC-721 token with storage based token URI management."},"fullyImplemented":true,"id":1386,"linearizedBaseContracts":[1386,1125,121,1414,27,1242,2999,3011,1521],"name":"ERC721URIStorage","nameLocation":"450:16:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1278,"libraryName":{"id":1276,"name":"Strings","nameLocations":["499:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2975,"src":"499:7:7"},"nodeType":"UsingForDirective","src":"493:26:7","typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"511:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":1284,"mutability":"constant","name":"ERC4906_INTERFACE_ID","nameLocation":"731:20:7","nodeType":"VariableDeclaration","scope":1386,"src":"707:65:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1279,"name":"bytes4","nodeType":"ElementaryTypeName","src":"707:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"arguments":[{"hexValue":"30783439303634393036","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"761:10:7","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"754:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1280,"name":"bytes4","nodeType":"ElementaryTypeName","src":"754:6:7","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"754:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"private"},{"constant":false,"id":1288,"mutability":"mutable","name":"_tokenURIs","nameLocation":"861:10:7","nodeType":"VariableDeclaration","scope":1386,"src":"818:53:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1287,"keyName":"tokenId","keyNameLocation":"834:7:7","keyType":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"826:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"818:34:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"845:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[269,3010],"body":{"id":1308,"nodeType":"Block","src":"1046:99:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1299,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1063:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1300,"name":"ERC4906_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"1078:20:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1063:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1304,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1126:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1302,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1102:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1386_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1108:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":269,"src":"1102:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1102:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1063:75:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1298,"id":1307,"nodeType":"Return","src":"1056:82:7"}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"878:55:7","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"947:17:7","nodeType":"FunctionDefinition","overrides":{"id":1295,"nodeType":"OverrideSpecifier","overrides":[{"id":1293,"name":"ERC721","nameLocations":["1014:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"1014:6:7"},{"id":1294,"name":"IERC165","nameLocations":["1022:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3011,"src":"1022:7:7"}],"src":"1005:25:7"},"parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"interfaceId","nameLocation":"972:11:7","nodeType":"VariableDeclaration","scope":1309,"src":"965:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1290,"name":"bytes4","nodeType":"ElementaryTypeName","src":"965:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"964:20:7"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1309,"src":"1040:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1296,"name":"bool","nodeType":"ElementaryTypeName","src":"1040:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1039:6:7"},"scope":1386,"src":"938:207:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[364],"body":{"id":1365,"nodeType":"Block","src":"1299:505:7","statements":[{"expression":{"arguments":[{"id":1319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"1323:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1318,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"1309:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1309:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1321,"nodeType":"ExpressionStatement","src":"1309:22:7"},{"assignments":[1323],"declarations":[{"constant":false,"id":1323,"mutability":"mutable","name":"_tokenURI","nameLocation":"1356:9:7","nodeType":"VariableDeclaration","scope":1365,"src":"1342:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1322,"name":"string","nodeType":"ElementaryTypeName","src":"1342:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1327,"initialValue":{"baseExpression":{"id":1324,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"1368:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1326,"indexExpression":{"id":1325,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"1379:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1368:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1342:45:7"},{"assignments":[1329],"declarations":[{"constant":false,"id":1329,"mutability":"mutable","name":"base","nameLocation":"1411:4:7","nodeType":"VariableDeclaration","scope":1365,"src":"1397:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1328,"name":"string","nodeType":"ElementaryTypeName","src":"1397:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1330,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"1418:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1418:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1397:31:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1335,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1507:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1501:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1333,"name":"bytes","nodeType":"ElementaryTypeName","src":"1501:5:7","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1501:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:7","memberName":"length","nodeType":"MemberAccess","src":"1501:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1501:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"IfStatement","src":"1497:70:7","trueBody":{"id":1342,"nodeType":"Block","src":"1526:41:7","statements":[{"expression":{"id":1340,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1547:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1317,"id":1341,"nodeType":"Return","src":"1540:16:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1346,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1672:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1666:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1344,"name":"bytes","nodeType":"ElementaryTypeName","src":"1666:5:7","typeDescriptions":{}}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1666:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1683:6:7","memberName":"length","nodeType":"MemberAccess","src":"1666:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1666:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1359,"nodeType":"IfStatement","src":"1662:95:7","trueBody":{"id":1358,"nodeType":"Block","src":"1695:62:7","statements":[{"expression":{"arguments":[{"id":1354,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"1730:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1355,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1736:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1716:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1351,"name":"string","nodeType":"ElementaryTypeName","src":"1716:6:7","typeDescriptions":{}}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1723:6:7","memberName":"concat","nodeType":"MemberAccess","src":"1716:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1716:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1317,"id":1357,"nodeType":"Return","src":"1709:37:7"}]}},{"expression":{"arguments":[{"id":1362,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"1789:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1360,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967271,"src":"1774:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1386_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1780:8:7","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":364,"src":"1774:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1774:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1317,"id":1364,"nodeType":"Return","src":"1767:30:7"}]},"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"1151:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1220:8:7","nodeType":"FunctionDefinition","overrides":{"id":1314,"nodeType":"OverrideSpecifier","overrides":[],"src":"1266:8:7"},"parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"tokenId","nameLocation":"1237:7:7","nodeType":"VariableDeclaration","scope":1366,"src":"1229:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1229:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1228:17:7"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"1284:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1315,"name":"string","nodeType":"ElementaryTypeName","src":"1284:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1283:15:7"},"scope":1386,"src":"1211:593:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1384,"nodeType":"Block","src":"2013:86:7","statements":[{"expression":{"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1374,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"2023:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1376,"indexExpression":{"id":1375,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2034:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2023:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1377,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"2045:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2023:31:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1379,"nodeType":"ExpressionStatement","src":"2023:31:7"},{"eventCall":{"arguments":[{"id":1381,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"2084:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1380,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"2069:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2069:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"EmitStatement","src":"2064:28:7"}]},"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"1810:117:7","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {IERC4906-MetadataUpdate}."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1941:12:7","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"tokenId","nameLocation":"1962:7:7","nodeType":"VariableDeclaration","scope":1385,"src":"1954:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"_tokenURI","nameLocation":"1985:9:7","nodeType":"VariableDeclaration","scope":1385,"src":"1971:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1370,"name":"string","nodeType":"ElementaryTypeName","src":"1971:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1953:42:7"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"2013:0:7"},"scope":1386,"src":"1932:167:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1387,"src":"432:1669:7","usedErrors":[79,84,93,98,103,110,115,120],"usedEvents":[19,26,1141,1150,1159]}],"src":"128:1974:7"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1242],"IERC721Metadata":[1414]},"id":1415,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1388,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1390,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1415,"sourceUnit":1243,"src":"153:39:8","symbolAliases":[{"foreign":{"id":1389,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"161:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1392,"name":"IERC721","nameLocations":["357:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1242,"src":"357:7:8"},"id":1393,"nodeType":"InheritanceSpecifier","src":"357:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"194:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1414,"linearizedBaseContracts":[1414,1242,3011],"name":"IERC721Metadata","nameLocation":"338:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"371:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1399,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:8","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"447:2:8"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1399,"src":"473:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1396,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:8"},"scope":1414,"src":"434:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"494:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1405,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:8","nodeType":"FunctionDefinition","parameters":{"id":1401,"nodeType":"ParameterList","parameters":[],"src":"574:2:8"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1405,"src":"600:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1402,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:8"},"scope":1414,"src":"559:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"621:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1413,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:8","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:8","nodeType":"VariableDeclaration","scope":1413,"src":"734:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:8"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1413,"src":"774:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1410,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:8"},"scope":1414,"src":"716:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1415,"src":"328:463:8","usedErrors":[],"usedEvents":[1141,1150,1159]}],"src":"127:665:8"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1491],"IERC721Errors":[121],"IERC721Receiver":[1260]},"id":1492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1416,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":1261,"src":"144:55:9","symbolAliases":[{"foreign":{"id":1417,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"152:15:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1492,"sourceUnit":169,"src":"200:69:9","symbolAliases":[{"foreign":{"id":1419,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"208:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"271:159:9","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1491,"linearizedBaseContracts":[1491],"name":"ERC721Utils","nameLocation":"439:11:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1489,"nodeType":"Block","src":"1159:758:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1173:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:9","memberName":"code","nodeType":"MemberAccess","src":"1173:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:9","memberName":"length","nodeType":"MemberAccess","src":"1173:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"1169:742:9","trueBody":{"id":1487,"nodeType":"Block","src":"1193:718:9","statements":[{"clauses":[{"block":{"id":1465,"nodeType":"Block","src":"1303:214:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1452,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"1325:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1453,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"1335:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1260_$","typeString":"type(contract IERC721Receiver)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"1335:32:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1464,"nodeType":"IfStatement","src":"1321:182:9","trueBody":{"id":1463,"nodeType":"Block","src":"1378:125:9","statements":[{"errorCall":{"arguments":[{"id":1460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1481:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1457,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1445:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$121_$","typeString":"type(contract IERC721Errors)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:9","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":103,"src":"1445:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1462,"nodeType":"RevertStatement","src":"1438:46:9"}]}}]},"errorName":"","id":1466,"nodeType":"TryCatchClause","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"retval","nameLocation":"1295:6:9","nodeType":"VariableDeclaration","scope":1466,"src":"1288:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1449,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:9"},"src":"1279:238:9"},{"block":{"id":1484,"nodeType":"Block","src":"1546:355:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1470,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"1568:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:9","memberName":"length","nodeType":"MemberAccess","src":"1568:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1482,"nodeType":"Block","src":"1736:151:9","statements":[{"AST":{"nativeSrc":"1783:86:9","nodeType":"YulBlock","src":"1783:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1820:2:9","nodeType":"YulLiteral","src":"1820:2:9","type":"","value":"32"},{"name":"reason","nativeSrc":"1824:6:9","nodeType":"YulIdentifier","src":"1824:6:9"}],"functionName":{"name":"add","nativeSrc":"1816:3:9","nodeType":"YulIdentifier","src":"1816:3:9"},"nativeSrc":"1816:15:9","nodeType":"YulFunctionCall","src":"1816:15:9"},{"arguments":[{"name":"reason","nativeSrc":"1839:6:9","nodeType":"YulIdentifier","src":"1839:6:9"}],"functionName":{"name":"mload","nativeSrc":"1833:5:9","nodeType":"YulIdentifier","src":"1833:5:9"},"nativeSrc":"1833:13:9","nodeType":"YulFunctionCall","src":"1833:13:9"}],"functionName":{"name":"revert","nativeSrc":"1809:6:9","nodeType":"YulIdentifier","src":"1809:6:9"},"nativeSrc":"1809:38:9","nodeType":"YulFunctionCall","src":"1809:38:9"},"nativeSrc":"1809:38:9","nodeType":"YulExpressionStatement","src":"1809:38:9"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1468,"isOffset":false,"isSlot":false,"src":"1824:6:9","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"1839:6:9","valueSize":1}],"flags":["memory-safe"],"id":1481,"nodeType":"InlineAssembly","src":"1758:111:9"}]},"id":1483,"nodeType":"IfStatement","src":"1564:323:9","trueBody":{"id":1480,"nodeType":"Block","src":"1588:142:9","statements":[{"errorCall":{"arguments":[{"id":1477,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1708:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1474,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"1672:13:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$121_$","typeString":"type(contract IERC721Errors)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:9","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":103,"src":"1672:35:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1479,"nodeType":"RevertStatement","src":"1665:46:9"}]}}]},"errorName":"","id":1485,"nodeType":"TryCatchClause","parameters":{"id":1469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"reason","nameLocation":"1538:6:9","nodeType":"VariableDeclaration","scope":1485,"src":"1525:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1467,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:9"},"src":"1518:383:9"}],"externalCall":{"arguments":[{"id":1444,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1248:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"1258:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1447,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"1273:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1441,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1227:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1440,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"1211:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1260_$","typeString":"type(contract IERC721Receiver)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1260","typeString":"contract IERC721Receiver"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:9","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1259,"src":"1211:36:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1486,"nodeType":"TryStatement","src":"1207:694:9"}]}}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"457:531:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:9","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"operator","nameLocation":"1041:8:9","nodeType":"VariableDeclaration","scope":1490,"src":"1033:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"from","nameLocation":"1067:4:9","nodeType":"VariableDeclaration","scope":1490,"src":"1059:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"to","nameLocation":"1089:2:9","nodeType":"VariableDeclaration","scope":1490,"src":"1081:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:9","nodeType":"VariableDeclaration","scope":1490,"src":"1101:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"data","nameLocation":"1139:4:9","nodeType":"VariableDeclaration","scope":1490,"src":"1126:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1431,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:9"},"returnParameters":{"id":1434,"nodeType":"ParameterList","parameters":[],"src":"1159:0:9"},"scope":1491,"src":"993:924:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1492,"src":"431:1488:9","usedErrors":[],"usedEvents":[]}],"src":"118:1802:9"}},"@openzeppelin/contracts/utils/Context.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1521]},"id":1522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1493,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1521,"linearizedBaseContracts":[1521],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1502,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1499,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1498,"id":1501,"nodeType":"Return","src":"728:17:10"}]},"id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1521,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1511,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1507,"id":1510,"nodeType":"Return","src":"835:15:10"}]},"id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1521,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1516,"id":1518,"nodeType":"Return","src":"945:8:10"}]},"id":1520,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1520,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1521,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1522,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"}},"@openzeppelin/contracts/utils/Panic.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1573]},"id":1574,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1523,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"125:489:11","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1573,"linearizedBaseContracts":[1573],"name":"Panic","nameLocation":"665:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"677:36:11","text":"@dev generic / unspecified error"},"id":1528,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:11","nodeType":"VariableDeclaration","scope":1573,"src":"718:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"764:37:11","text":"@dev used by the assert() builtin"},"id":1532,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:11","nodeType":"VariableDeclaration","scope":1573,"src":"806:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"851:41:11","text":"@dev arithmetic underflow or overflow"},"id":1536,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:11","nodeType":"VariableDeclaration","scope":1573,"src":"897:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:11","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"950:35:11","text":"@dev division or modulo by zero"},"id":1540,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:11","nodeType":"VariableDeclaration","scope":1573,"src":"990:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1538,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"1045:30:11","text":"@dev enum conversion error"},"id":1544,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:11","nodeType":"VariableDeclaration","scope":1573,"src":"1080:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:11","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"1140:36:11","text":"@dev invalid encoding in storage"},"id":1548,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:11","nodeType":"VariableDeclaration","scope":1573,"src":"1181:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"1242:24:11","text":"@dev empty array pop"},"id":1552,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:11","nodeType":"VariableDeclaration","scope":1573,"src":"1271:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"1325:35:11","text":"@dev array out of bounds access"},"id":1556,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:11","nodeType":"VariableDeclaration","scope":1573,"src":"1365:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"1423:65:11","text":"@dev resource error (too large allocation or too large array)"},"id":1560,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:11","nodeType":"VariableDeclaration","scope":1573,"src":"1493:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1561,"nodeType":"StructuredDocumentation","src":"1546:42:11","text":"@dev calling invalid internal function"},"id":1564,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:11","nodeType":"VariableDeclaration","scope":1573,"src":"1593:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:11","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"1819:151:11","statements":[{"AST":{"nativeSrc":"1854:110:11","nodeType":"YulBlock","src":"1854:110:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:11","nodeType":"YulLiteral","src":"1875:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:11","nodeType":"YulLiteral","src":"1881:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:11","nodeType":"YulIdentifier","src":"1868:6:11"},"nativeSrc":"1868:24:11","nodeType":"YulFunctionCall","src":"1868:24:11"},"nativeSrc":"1868:24:11","nodeType":"YulExpressionStatement","src":"1868:24:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:11","nodeType":"YulLiteral","src":"1912:4:11","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:11","nodeType":"YulIdentifier","src":"1918:4:11"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:11","nodeType":"YulIdentifier","src":"1905:6:11"},"nativeSrc":"1905:18:11","nodeType":"YulFunctionCall","src":"1905:18:11"},"nativeSrc":"1905:18:11","nodeType":"YulExpressionStatement","src":"1905:18:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:11","nodeType":"YulLiteral","src":"1943:4:11","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:11","nodeType":"YulLiteral","src":"1949:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:11","nodeType":"YulIdentifier","src":"1936:6:11"},"nativeSrc":"1936:18:11","nodeType":"YulFunctionCall","src":"1936:18:11"},"nativeSrc":"1936:18:11","nodeType":"YulExpressionStatement","src":"1936:18:11"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1567,"isOffset":false,"isSlot":false,"src":"1918:4:11","valueSize":1}],"flags":["memory-safe"],"id":1570,"nodeType":"InlineAssembly","src":"1829:135:11"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"1658:113:11","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:11","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"code","nameLocation":"1799:4:11","nodeType":"VariableDeclaration","scope":1572,"src":"1791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:11"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"1819:0:11"},"scope":1573,"src":"1776:194:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1574,"src":"657:1315:11","usedErrors":[],"usedEvents":[]}],"src":"99:1874:11"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4632],"SafeCast":[6397],"SignedMath":[6541],"Strings":[2975]},"id":2976,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1575,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2976,"sourceUnit":4633,"src":"127:37:12","symbolAliases":[{"foreign":{"id":1576,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"135:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1579,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2976,"sourceUnit":6398,"src":"165:45:12","symbolAliases":[{"foreign":{"id":1578,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2976,"sourceUnit":6542,"src":"211:49:12","symbolAliases":[{"foreign":{"id":1580,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"219:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"262:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":2975,"linearizedBaseContracts":[2975],"name":"Strings","nameLocation":"305:7:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1584,"libraryName":{"id":1583,"name":"SafeCast","nameLocations":["325:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":6397,"src":"325:8:12"},"nodeType":"UsingForDirective","src":"319:21:12"},{"constant":true,"id":1587,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:12","nodeType":"VariableDeclaration","scope":2975,"src":"346:56:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1585,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1590,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:12","nodeType":"VariableDeclaration","scope":2975,"src":"408:42:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1588,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1626,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:12","nodeType":"VariableDeclaration","scope":2975,"src":"456:302:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:12","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:12","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:12","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:12","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:12","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:12","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:12","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:12","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:12","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:12","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:12","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:12","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:12","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:12","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:12","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:12","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:12","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:12","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"778:81:12","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1633,"name":"StringsInsufficientHexLength","nameLocation":"870:28:12","nodeType":"ErrorDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"value","nameLocation":"907:5:12","nodeType":"VariableDeclaration","scope":1633,"src":"899:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1628,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"length","nameLocation":"922:6:12","nodeType":"VariableDeclaration","scope":1633,"src":"914:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1630,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:12"},"src":"864:66:12"},{"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"936:108:12","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1636,"name":"StringsInvalidChar","nameLocation":"1055:18:12","nodeType":"ErrorDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[],"src":"1073:2:12"},"src":"1049:27:12"},{"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"1082:84:12","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1639,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:12","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"1204:2:12"},"src":"1171:36:12"},{"body":{"id":1686,"nodeType":"Block","src":"1379:561:12","statements":[{"id":1685,"nodeType":"UncheckedBlock","src":"1389:545:12","statements":[{"assignments":[1648],"declarations":[{"constant":false,"id":1648,"mutability":"mutable","name":"length","nameLocation":"1421:6:12","nodeType":"VariableDeclaration","scope":1685,"src":"1413:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1441:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1649,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"1430:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4632_$","typeString":"type(library Math)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4464,"src":"1430:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:12"},{"assignments":[1657],"declarations":[{"constant":false,"id":1657,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:12","nodeType":"VariableDeclaration","scope":1685,"src":"1465:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1656,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1662,"initialValue":{"arguments":[{"id":1660,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"1499:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:12"},{"assignments":[1664],"declarations":[{"constant":false,"id":1664,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:12","nodeType":"VariableDeclaration","scope":1685,"src":"1520:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1665,"nodeType":"VariableDeclarationStatement","src":"1520:11:12"},{"AST":{"nativeSrc":"1570:67:12","nodeType":"YulBlock","src":"1570:67:12","statements":[{"nativeSrc":"1588:35:12","nodeType":"YulAssignment","src":"1588:35:12","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:12","nodeType":"YulIdentifier","src":"1599:6:12"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:12","nodeType":"YulLiteral","src":"1611:2:12","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:12","nodeType":"YulIdentifier","src":"1615:6:12"}],"functionName":{"name":"add","nativeSrc":"1607:3:12","nodeType":"YulIdentifier","src":"1607:3:12"},"nativeSrc":"1607:15:12","nodeType":"YulFunctionCall","src":"1607:15:12"}],"functionName":{"name":"add","nativeSrc":"1595:3:12","nodeType":"YulIdentifier","src":"1595:3:12"},"nativeSrc":"1595:28:12","nodeType":"YulFunctionCall","src":"1595:28:12"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:12","nodeType":"YulIdentifier","src":"1588:3:12"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1657,"isOffset":false,"isSlot":false,"src":"1599:6:12","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"1615:6:12","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"1588:3:12","valueSize":1}],"flags":["memory-safe"],"id":1666,"nodeType":"InlineAssembly","src":"1545:92:12"},{"body":{"id":1681,"nodeType":"Block","src":"1663:234:12","statements":[{"expression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:12","subExpression":{"id":1668,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"1681:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1670,"nodeType":"ExpressionStatement","src":"1681:5:12"},{"AST":{"nativeSrc":"1729:86:12","nodeType":"YulBlock","src":"1729:86:12","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:12","nodeType":"YulIdentifier","src":"1759:3:12"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:12","nodeType":"YulIdentifier","src":"1773:5:12"},{"kind":"number","nativeSrc":"1780:2:12","nodeType":"YulLiteral","src":"1780:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:12","nodeType":"YulIdentifier","src":"1769:3:12"},"nativeSrc":"1769:14:12","nodeType":"YulFunctionCall","src":"1769:14:12"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:12","nodeType":"YulIdentifier","src":"1785:10:12"}],"functionName":{"name":"byte","nativeSrc":"1764:4:12","nodeType":"YulIdentifier","src":"1764:4:12"},"nativeSrc":"1764:32:12","nodeType":"YulFunctionCall","src":"1764:32:12"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:12","nodeType":"YulIdentifier","src":"1751:7:12"},"nativeSrc":"1751:46:12","nodeType":"YulFunctionCall","src":"1751:46:12"},"nativeSrc":"1751:46:12","nodeType":"YulExpressionStatement","src":"1751:46:12"}]},"evmVersion":"cancun","externalReferences":[{"declaration":1587,"isOffset":false,"isSlot":false,"src":"1785:10:12","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"1759:3:12","valueSize":1},{"declaration":1642,"isOffset":false,"isSlot":false,"src":"1773:5:12","valueSize":1}],"flags":["memory-safe"],"id":1671,"nodeType":"InlineAssembly","src":"1704:111:12"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1832:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"1832:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"1865:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1680,"nodeType":"IfStatement","src":"1861:21:12","trueBody":{"id":1679,"nodeType":"Break","src":"1877:5:12"}}]},"condition":{"hexValue":"74727565","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1682,"nodeType":"WhileStatement","src":"1650:247:12"},{"expression":{"id":1683,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"1917:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1646,"id":1684,"nodeType":"Return","src":"1910:13:12"}]}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"1213:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:12","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"value","nameLocation":"1334:5:12","nodeType":"VariableDeclaration","scope":1687,"src":"1326:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:12"},"returnParameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"1364:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1644,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:12"},"scope":2975,"src":"1308:632:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"2116:92:12","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2147:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:12","trueExpression":{"hexValue":"2d","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"2193:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1705,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"2178:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6541_$","typeString":"type(library SignedMath)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6540,"src":"2178:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"2169:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1695,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:12","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:12","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:12","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1694,"id":1711,"nodeType":"Return","src":"2126:75:12"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1946:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:12","nodeType":"FunctionDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"2071:5:12","nodeType":"VariableDeclaration","scope":1713,"src":"2064:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1689,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:12"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"2101:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1692,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:12"},"scope":2975,"src":"2040:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1732,"nodeType":"Block","src":"2387:100:12","statements":[{"id":1731,"nodeType":"UncheckedBlock","src":"2397:84:12","statements":[{"expression":{"arguments":[{"id":1722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2440:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2459:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1723,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"2447:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4632_$","typeString":"type(library Math)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4575,"src":"2447:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1721,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1816,"src":"2428:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1720,"id":1730,"nodeType":"Return","src":"2421:49:12"}]}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"2214:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:12","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"value","nameLocation":"2342:5:12","nodeType":"VariableDeclaration","scope":1733,"src":"2334:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:12"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1733,"src":"2372:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1718,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:12"},"scope":2975,"src":"2313:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"2700:435:12","statements":[{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:12","nodeType":"VariableDeclaration","scope":1815,"src":"2710:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1746,"initialValue":{"id":1745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2731:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:12"},{"assignments":[1748],"declarations":[{"constant":false,"id":1748,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:12","nodeType":"VariableDeclaration","scope":1815,"src":"2746:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1757,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1752,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2782:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1749,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:12"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1758,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2803:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1760,"indexExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1763,"nodeType":"ExpressionStatement","src":"2803:15:12"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1764,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2828:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1766,"indexExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1769,"nodeType":"ExpressionStatement","src":"2828:15:12"},{"body":{"id":1798,"nodeType":"Block","src":"2898:95:12","statements":[{"expression":{"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1784,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"2912:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1786,"indexExpression":{"id":1785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2919:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1787,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"2924:10:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1791,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2935:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1793,"nodeType":"ExpressionStatement","src":"2912:40:12"},{"expression":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1794,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2966:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1797,"nodeType":"ExpressionStatement","src":"2966:16:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2886:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"initializationExpression":{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"i","nameLocation":"2866:1:12","nodeType":"VariableDeclaration","scope":1799,"src":"2858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1777,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1773,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2874:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:12","subExpression":{"id":1781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"2895:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"2893:3:12"},"nodeType":"ForStatement","src":"2853:140:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1800,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3006:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1809,"nodeType":"IfStatement","src":"3002:96:12","trueBody":{"id":1808,"nodeType":"Block","src":"3023:75:12","statements":[{"errorCall":{"arguments":[{"id":1804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"3073:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1805,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"3080:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"3044:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1807,"nodeType":"RevertStatement","src":"3037:50:12"}]}},{"expression":{"arguments":[{"id":1812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3121:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:12","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1742,"id":1814,"nodeType":"Return","src":"3107:21:12"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"2493:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:12","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"value","nameLocation":"2639:5:12","nodeType":"VariableDeclaration","scope":1816,"src":"2631:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"length","nameLocation":"2654:6:12","nodeType":"VariableDeclaration","scope":1816,"src":"2646:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:12"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"2685:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1740,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:12"},"scope":2975,"src":"2610:525:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1835,"nodeType":"Block","src":"3367:75:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1829,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"3412:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1827,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:12","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:12","typeDescriptions":{}}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1832,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"3420:14:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1824,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1816,"src":"3384:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1823,"id":1834,"nodeType":"Return","src":"3377:58:12"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"3141:148:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1836,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:12","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"addr","nameLocation":"3323:4:12","nodeType":"VariableDeclaration","scope":1836,"src":"3315:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:12"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1836,"src":"3352:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1821,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:12"},"scope":2975,"src":"3294:148:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3699:642:12","statements":[{"assignments":[1845],"declarations":[{"constant":false,"id":1845,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:12","nodeType":"VariableDeclaration","scope":1900,"src":"3709:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1844,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1852,"initialValue":{"arguments":[{"arguments":[{"id":1849,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"3749:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1733,1816,1836],"referencedDeclaration":1836,"src":"3737:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:12","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:12"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:12","nodeType":"VariableDeclaration","scope":1900,"src":"3840:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"nodeType":"VariableDeclarationStatement","src":"3840:17:12"},{"AST":{"nativeSrc":"3892:78:12","nodeType":"YulBlock","src":"3892:78:12","statements":[{"nativeSrc":"3906:54:12","nodeType":"YulAssignment","src":"3906:54:12","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:12","nodeType":"YulLiteral","src":"3923:2:12","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:12","nodeType":"YulIdentifier","src":"3941:6:12"},{"kind":"number","nativeSrc":"3949:4:12","nodeType":"YulLiteral","src":"3949:4:12","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:12","nodeType":"YulIdentifier","src":"3937:3:12"},"nativeSrc":"3937:17:12","nodeType":"YulFunctionCall","src":"3937:17:12"},{"kind":"number","nativeSrc":"3956:2:12","nodeType":"YulLiteral","src":"3956:2:12","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:12","nodeType":"YulIdentifier","src":"3927:9:12"},"nativeSrc":"3927:32:12","nodeType":"YulFunctionCall","src":"3927:32:12"}],"functionName":{"name":"shr","nativeSrc":"3919:3:12","nodeType":"YulIdentifier","src":"3919:3:12"},"nativeSrc":"3919:41:12","nodeType":"YulFunctionCall","src":"3919:41:12"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:12","nodeType":"YulIdentifier","src":"3906:9:12"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1845,"isOffset":false,"isSlot":false,"src":"3941:6:12","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"3906:9:12","valueSize":1}],"flags":["memory-safe"],"id":1856,"nodeType":"InlineAssembly","src":"3867:103:12"},{"body":{"id":1893,"nodeType":"Block","src":"4013:291:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"4119:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1874,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4148:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1876,"indexExpression":{"id":1875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4155:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1872,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:12","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1888,"nodeType":"IfStatement","src":"4115:150:12","trueBody":{"id":1887,"nodeType":"Block","src":"4165:100:12","statements":[{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1881,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4233:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1883,"indexExpression":{"id":1882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4240:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1886,"nodeType":"ExpressionStatement","src":"4233:17:12"}]}},{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1889,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"4278:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"4278:15:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4001:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1894,"initializationExpression":{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"i","nameLocation":"3993:1:12","nodeType":"VariableDeclaration","scope":1894,"src":"3985:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1860,"initialValue":{"hexValue":"3431","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:12","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:12"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:12","subExpression":{"id":1864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4010:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1866,"nodeType":"ExpressionStatement","src":"4008:3:12"},"nodeType":"ForStatement","src":"3980:324:12"},{"expression":{"arguments":[{"id":1897,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"4327:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1895,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:12","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1843,"id":1899,"nodeType":"Return","src":"4313:21:12"}]},"documentation":{"id":1837,"nodeType":"StructuredDocumentation","src":"3448:165:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:12","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"addr","nameLocation":"3655:4:12","nodeType":"VariableDeclaration","scope":1901,"src":"3647:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:12"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3684:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1841,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:12"},"scope":2975,"src":"3618:723:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"4496:104:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4519:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1911,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:12","typeDescriptions":{}}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:12","memberName":"length","nodeType":"MemberAccess","src":"4513:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1918,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4538:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:12","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:12","memberName":"length","nodeType":"MemberAccess","src":"4532:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4567:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:12","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1922,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4551:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4590:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1929,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:12","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1928,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4574:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1910,"id":1936,"nodeType":"Return","src":"4506:87:12"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"4347:66:12","text":" @dev Returns true if the two strings are equal."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:12","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"a","nameLocation":"4447:1:12","nodeType":"VariableDeclaration","scope":1938,"src":"4433:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"b","nameLocation":"4464:1:12","nodeType":"VariableDeclaration","scope":1938,"src":"4450:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1905,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:12"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1938,"src":"4490:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:12"},"scope":2975,"src":"4418:182:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"4897:64:12","statements":[{"expression":{"arguments":[{"id":1947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4924:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1951,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"4940:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:12","typeDescriptions":{}}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:12","memberName":"length","nodeType":"MemberAccess","src":"4934:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1946,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1957,1988],"referencedDeclaration":1988,"src":"4914:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1945,"id":1955,"nodeType":"Return","src":"4907:47:12"}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"4606:214:12","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:12","nodeType":"FunctionDefinition","parameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"input","nameLocation":"4858:5:12","nodeType":"VariableDeclaration","scope":1957,"src":"4844:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:12"},"returnParameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"4888:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:12"},"scope":2975,"src":"4825:136:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"5366:153:12","statements":[{"assignments":[1970,1972],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5382:7:12","nodeType":"VariableDeclaration","scope":1987,"src":"5377:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"value","nameLocation":"5399:5:12","nodeType":"VariableDeclaration","scope":1987,"src":"5391:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1978,"initialValue":{"arguments":[{"id":1974,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5421:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1975,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5428:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1976,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"5435:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2009,2046],"referencedDeclaration":2046,"src":"5408:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:12"},{"condition":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:12","subExpression":{"id":1979,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5454:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"5449:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1981,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"5470:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1983,"nodeType":"RevertStatement","src":"5463:27:12"}},{"expression":{"id":1985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5507:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1968,"id":1986,"nodeType":"Return","src":"5500:12:12"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"4967:294:12","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:12","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"input","nameLocation":"5299:5:12","nodeType":"VariableDeclaration","scope":1988,"src":"5285:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1959,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"begin","nameLocation":"5314:5:12","nodeType":"VariableDeclaration","scope":1988,"src":"5306:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"end","nameLocation":"5329:3:12","nodeType":"VariableDeclaration","scope":1988,"src":"5321:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:12"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1988,"src":"5357:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:12"},"scope":2975,"src":"5266:253:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2008,"nodeType":"Block","src":"5840:83:12","statements":[{"expression":{"arguments":[{"id":1999,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5886:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"5902:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:12","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:12","memberName":"length","nodeType":"MemberAccess","src":"5896:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1998,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5857:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1997,"id":2007,"nodeType":"Return","src":"5850:66:12"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"5525:215:12","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2009,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:12","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"input","nameLocation":"5781:5:12","nodeType":"VariableDeclaration","scope":2009,"src":"5767:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:12"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"success","nameLocation":"5816:7:12","nodeType":"VariableDeclaration","scope":2009,"src":"5811:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1993,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"value","nameLocation":"5833:5:12","nodeType":"VariableDeclaration","scope":2009,"src":"5825:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1995,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:12"},"scope":2975,"src":"5745:178:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"6325:144:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6339:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"6351:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2024,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:12","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:12","memberName":"length","nodeType":"MemberAccess","src":"6345:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"6368:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2031,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6376:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"6335:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2022,"id":2037,"nodeType":"Return","src":"6381:17:12"}},{"expression":{"arguments":[{"id":2040,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"6444:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2041,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"6451:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"6458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2039,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"6415:28:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2022,"id":2044,"nodeType":"Return","src":"6408:54:12"}]},"documentation":{"id":2010,"nodeType":"StructuredDocumentation","src":"5929:238:12","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:12","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2012,"mutability":"mutable","name":"input","nameLocation":"6217:5:12","nodeType":"VariableDeclaration","scope":2046,"src":"6203:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2011,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"begin","nameLocation":"6240:5:12","nodeType":"VariableDeclaration","scope":2046,"src":"6232:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"end","nameLocation":"6263:3:12","nodeType":"VariableDeclaration","scope":2046,"src":"6255:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:12"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"success","nameLocation":"6301:7:12","nodeType":"VariableDeclaration","scope":2046,"src":"6296:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2018,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"6318:5:12","nodeType":"VariableDeclaration","scope":2046,"src":"6310:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:12"},"scope":2975,"src":"6172:297:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2115,"nodeType":"Block","src":"6872:347:12","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:12","nodeType":"VariableDeclaration","scope":2115,"src":"6882:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2060,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"6910:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2062,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:12","typeDescriptions":{}}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:12"},{"assignments":[2068],"declarations":[{"constant":false,"id":2068,"mutability":"mutable","name":"result","nameLocation":"6935:6:12","nodeType":"VariableDeclaration","scope":2115,"src":"6927:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2070,"initialValue":{"hexValue":"30","id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:12"},{"body":{"id":2109,"nodeType":"Block","src":"6993:189:12","statements":[{"assignments":[2082],"declarations":[{"constant":false,"id":2082,"mutability":"mutable","name":"chr","nameLocation":"7013:3:12","nodeType":"VariableDeclaration","scope":2109,"src":"7007:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2081,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2092,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2087,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7062:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2088,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"7039:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2084,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:12","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2083,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"7019:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7092:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"nodeType":"IfStatement","src":"7088:30:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2059,"id":2099,"nodeType":"Return","src":"7101:17:12"}},{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7132:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"7132:12:12"},{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7158:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2106,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"7168:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"7158:13:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6979:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2076,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"6983:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"initializationExpression":{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"i","nameLocation":"6968:1:12","nodeType":"VariableDeclaration","scope":2110,"src":"6960:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2074,"initialValue":{"id":2073,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"6972:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:12","subExpression":{"id":2078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"6990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2080,"nodeType":"ExpressionStatement","src":"6988:3:12"},"nodeType":"ForStatement","src":"6955:227:12"},{"expression":{"components":[{"hexValue":"74727565","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2112,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"7205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2059,"id":2114,"nodeType":"Return","src":"7191:21:12"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"6475:224:12","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2116,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:12","nodeType":"FunctionDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"input","nameLocation":"6765:5:12","nodeType":"VariableDeclaration","scope":2116,"src":"6751:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2048,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2051,"mutability":"mutable","name":"begin","nameLocation":"6788:5:12","nodeType":"VariableDeclaration","scope":2116,"src":"6780:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"end","nameLocation":"6811:3:12","nodeType":"VariableDeclaration","scope":2116,"src":"6803:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:12"},"returnParameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"success","nameLocation":"6848:7:12","nodeType":"VariableDeclaration","scope":2116,"src":"6843:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"6865:5:12","nodeType":"VariableDeclaration","scope":2116,"src":"6857:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:12"},"scope":2975,"src":"6704:515:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2134,"nodeType":"Block","src":"7516:63:12","statements":[{"expression":{"arguments":[{"id":2125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7542:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2129,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"7558:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2127,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:12","typeDescriptions":{}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:12","memberName":"length","nodeType":"MemberAccess","src":"7552:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2135,2166],"referencedDeclaration":2166,"src":"7533:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2123,"id":2133,"nodeType":"Return","src":"7526:46:12"}]},"documentation":{"id":2117,"nodeType":"StructuredDocumentation","src":"7225:216:12","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:12","nodeType":"FunctionDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"input","nameLocation":"7478:5:12","nodeType":"VariableDeclaration","scope":2135,"src":"7464:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2118,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:12"},"returnParameters":{"id":2123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"7508:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2121,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:12"},"scope":2975,"src":"7446:133:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"7984:151:12","statements":[{"assignments":[2148,2150],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"success","nameLocation":"8000:7:12","nodeType":"VariableDeclaration","scope":2165,"src":"7995:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"value","nameLocation":"8016:5:12","nodeType":"VariableDeclaration","scope":2165,"src":"8009:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2149,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2156,"initialValue":{"arguments":[{"id":2152,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"8037:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2153,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8044:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2154,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"8051:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2151,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2187,2229],"referencedDeclaration":2229,"src":"8025:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:12"},{"condition":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:12","subExpression":{"id":2157,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"8070:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2162,"nodeType":"IfStatement","src":"8065:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2159,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"8086:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2161,"nodeType":"RevertStatement","src":"8079:27:12"}},{"expression":{"id":2163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"8123:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2146,"id":2164,"nodeType":"Return","src":"8116:12:12"}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"7585:296:12","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:12","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"input","nameLocation":"7918:5:12","nodeType":"VariableDeclaration","scope":2166,"src":"7904:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2137,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"begin","nameLocation":"7933:5:12","nodeType":"VariableDeclaration","scope":2166,"src":"7925:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2142,"mutability":"mutable","name":"end","nameLocation":"7948:3:12","nodeType":"VariableDeclaration","scope":2166,"src":"7940:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:12"},"returnParameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2166,"src":"7976:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2144,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:12"},"scope":2975,"src":"7886:249:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"8526:82:12","statements":[{"expression":{"arguments":[{"id":2177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8571:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2181,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8587:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2179,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:12","typeDescriptions":{}}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:12","memberName":"length","nodeType":"MemberAccess","src":"8581:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8543:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2175,"id":2185,"nodeType":"Return","src":"8536:65:12"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"8141:287:12","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:12","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"input","nameLocation":"8468:5:12","nodeType":"VariableDeclaration","scope":2187,"src":"8454:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:12"},"returnParameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"success","nameLocation":"8503:7:12","nodeType":"VariableDeclaration","scope":2187,"src":"8498:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2171,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"value","nameLocation":"8519:5:12","nodeType":"VariableDeclaration","scope":2187,"src":"8512:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2173,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:12"},"scope":2975,"src":"8433:175:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2192,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:12","nodeType":"VariableDeclaration","scope":2975,"src":"8614:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:12","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2228,"nodeType":"Block","src":"9130:143:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"9144:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2209,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9156:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:12","typeDescriptions":{}}},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:12","memberName":"length","nodeType":"MemberAccess","src":"9150:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"9173:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2214,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"9181:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2221,"nodeType":"IfStatement","src":"9140:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2205,"id":2220,"nodeType":"Return","src":"9186:17:12"}},{"expression":{"arguments":[{"id":2223,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"9248:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2224,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"9255:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2225,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"9262:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2222,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"9220:27:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2205,"id":2227,"nodeType":"Return","src":"9213:53:12"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"8671:303:12","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2229,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:12","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"input","nameLocation":"9023:5:12","nodeType":"VariableDeclaration","scope":2229,"src":"9009:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2194,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2197,"mutability":"mutable","name":"begin","nameLocation":"9046:5:12","nodeType":"VariableDeclaration","scope":2229,"src":"9038:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"end","nameLocation":"9069:3:12","nodeType":"VariableDeclaration","scope":2229,"src":"9061:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2198,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:12"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2202,"mutability":"mutable","name":"success","nameLocation":"9107:7:12","nodeType":"VariableDeclaration","scope":2229,"src":"9102:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2201,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"value","nameLocation":"9123:5:12","nodeType":"VariableDeclaration","scope":2229,"src":"9116:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2203,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:12"},"scope":2975,"src":"8979:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2349,"nodeType":"Block","src":"9673:812:12","statements":[{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:12","nodeType":"VariableDeclaration","scope":2349,"src":"9683:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2243,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2249,"initialValue":{"arguments":[{"id":2247,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"9711:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:12","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:12"},{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"sign","nameLocation":"9781:4:12","nodeType":"VariableDeclaration","scope":2349,"src":"9774:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2250,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2267,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9788:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"9797:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2262,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"9845:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2263,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9853:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9822:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2259,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:12","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:12","trueExpression":{"arguments":[{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2255,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:12","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:12"},{"assignments":[2269],"declarations":[{"constant":false,"id":2269,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:12","nodeType":"VariableDeclaration","scope":2349,"src":"9941:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2268,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2276,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"9961:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2271,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:12","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:12"},{"assignments":[2278],"declarations":[{"constant":false,"id":2278,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:12","nodeType":"VariableDeclaration","scope":2349,"src":"9990:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2285,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"10010:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2280,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:12","typeDescriptions":{}}},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:12"},{"assignments":[2287],"declarations":[{"constant":false,"id":2287,"mutability":"mutable","name":"offset","nameLocation":"10047:6:12","nodeType":"VariableDeclaration","scope":2349,"src":"10039:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2294,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"10057:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2289,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"10073:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"10056:37:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:12"},{"assignments":[2296,2298],"declarations":[{"constant":false,"id":2296,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:12","nodeType":"VariableDeclaration","scope":2349,"src":"10107:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2295,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2298,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:12","nodeType":"VariableDeclaration","scope":2349,"src":"10124:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2306,"initialValue":{"arguments":[{"id":2300,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10157:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"10164:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2302,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"10172:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2304,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"10180:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2299,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2009,2046],"referencedDeclaration":2046,"src":"10144:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"10199:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10213:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2309,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10224:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"10341:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2328,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"10355:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2330,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10371:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2331,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"10383:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2242,"id":2346,"nodeType":"Return","src":"10461:17:12"},"id":2347,"nodeType":"IfStatement","src":"10337:141:12","trueBody":{"id":2342,"nodeType":"Block","src":"10399:56:12","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2336,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2335,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10427:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:12","memberName":"min","nodeType":"MemberAccess","src":"10427:16:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2242,"id":2341,"nodeType":"Return","src":"10413:31:12"}]}},"id":2348,"nodeType":"IfStatement","src":"10195:283:12","trueBody":{"id":2326,"nodeType":"Block","src":"10240:91:12","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2313,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"10268:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2321,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10310:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2319,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:12","typeDescriptions":{}}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:12","trueExpression":{"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:12","subExpression":{"arguments":[{"id":2316,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"10291:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2314,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:12","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2242,"id":2325,"nodeType":"Return","src":"10254:66:12"}]}}]},"documentation":{"id":2230,"nodeType":"StructuredDocumentation","src":"9279:223:12","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2350,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:12","nodeType":"FunctionDefinition","parameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"input","nameLocation":"9567:5:12","nodeType":"VariableDeclaration","scope":2350,"src":"9553:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2231,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"begin","nameLocation":"9590:5:12","nodeType":"VariableDeclaration","scope":2350,"src":"9582:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"end","nameLocation":"9613:3:12","nodeType":"VariableDeclaration","scope":2350,"src":"9605:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:12"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"success","nameLocation":"9650:7:12","nodeType":"VariableDeclaration","scope":2350,"src":"9645:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2238,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"value","nameLocation":"9666:5:12","nodeType":"VariableDeclaration","scope":2350,"src":"9659:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2240,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:12"},"scope":2975,"src":"9507:978:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2368,"nodeType":"Block","src":"10830:67:12","statements":[{"expression":{"arguments":[{"id":2359,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10860:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2363,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"10876:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2361,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:12","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:12","memberName":"length","nodeType":"MemberAccess","src":"10870:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2358,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2369,2400],"referencedDeclaration":2400,"src":"10847:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2357,"id":2367,"nodeType":"Return","src":"10840:50:12"}]},"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"10491:259:12","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2369,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:12","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"input","nameLocation":"10791:5:12","nodeType":"VariableDeclaration","scope":2369,"src":"10777:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2352,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:12"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2369,"src":"10821:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:12"},"scope":2975,"src":"10755:142:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2399,"nodeType":"Block","src":"11318:156:12","statements":[{"assignments":[2382,2384],"declarations":[{"constant":false,"id":2382,"mutability":"mutable","name":"success","nameLocation":"11334:7:12","nodeType":"VariableDeclaration","scope":2399,"src":"11329:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2381,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"value","nameLocation":"11351:5:12","nodeType":"VariableDeclaration","scope":2399,"src":"11343:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2390,"initialValue":{"arguments":[{"id":2386,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"11376:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2387,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11383:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2388,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"11390:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2385,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2421,2458],"referencedDeclaration":2458,"src":"11360:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:12"},{"condition":{"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:12","subExpression":{"id":2391,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"11409:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2396,"nodeType":"IfStatement","src":"11404:41:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2393,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"11425:18:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2395,"nodeType":"RevertStatement","src":"11418:27:12"}},{"expression":{"id":2397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"11462:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2380,"id":2398,"nodeType":"Return","src":"11455:12:12"}]},"documentation":{"id":2370,"nodeType":"StructuredDocumentation","src":"10903:307:12","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:12","nodeType":"FunctionDefinition","parameters":{"id":2377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"input","nameLocation":"11251:5:12","nodeType":"VariableDeclaration","scope":2400,"src":"11237:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2371,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"begin","nameLocation":"11266:5:12","nodeType":"VariableDeclaration","scope":2400,"src":"11258:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"end","nameLocation":"11281:3:12","nodeType":"VariableDeclaration","scope":2400,"src":"11273:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2375,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:12"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"11309:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2378,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:12"},"scope":2975,"src":"11215:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2420,"nodeType":"Block","src":"11801:86:12","statements":[{"expression":{"arguments":[{"id":2411,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11850:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2415,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11866:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2413,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:12","typeDescriptions":{}}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:12","memberName":"length","nodeType":"MemberAccess","src":"11860:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"11818:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2409,"id":2419,"nodeType":"Return","src":"11811:69:12"}]},"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"11480:218:12","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:12","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"input","nameLocation":"11742:5:12","nodeType":"VariableDeclaration","scope":2421,"src":"11728:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:12"},"returnParameters":{"id":2409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"success","nameLocation":"11777:7:12","nodeType":"VariableDeclaration","scope":2421,"src":"11772:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2405,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"value","nameLocation":"11794:5:12","nodeType":"VariableDeclaration","scope":2421,"src":"11786:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:12"},"scope":2975,"src":"11703:184:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"12295:147:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12309:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2438,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"12321:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:12","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:12","memberName":"length","nodeType":"MemberAccess","src":"12315:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"12338:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2443,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12346:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2450,"nodeType":"IfStatement","src":"12305:63:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2434,"id":2449,"nodeType":"Return","src":"12351:17:12"}},{"expression":{"arguments":[{"id":2452,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"12417:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2453,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"12424:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"12431:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2451,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"12385:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2434,"id":2456,"nodeType":"Return","src":"12378:57:12"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"11893:241:12","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:12","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"input","nameLocation":"12187:5:12","nodeType":"VariableDeclaration","scope":2458,"src":"12173:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"begin","nameLocation":"12210:5:12","nodeType":"VariableDeclaration","scope":2458,"src":"12202:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"end","nameLocation":"12233:3:12","nodeType":"VariableDeclaration","scope":2458,"src":"12225:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:12"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"success","nameLocation":"12271:7:12","nodeType":"VariableDeclaration","scope":2458,"src":"12266:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"value","nameLocation":"12288:5:12","nodeType":"VariableDeclaration","scope":2458,"src":"12280:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:12"},"scope":2975,"src":"12139:303:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"12851:881:12","statements":[{"assignments":[2473],"declarations":[{"constant":false,"id":2473,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:12","nodeType":"VariableDeclaration","scope":2560,"src":"12861:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2472,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2478,"initialValue":{"arguments":[{"id":2476,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"12889:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2474,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:12","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:12"},{"assignments":[2480],"declarations":[{"constant":false,"id":2480,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:12","nodeType":"VariableDeclaration","scope":2560,"src":"12943:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2479,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2500,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12961:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2482,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"12967:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2490,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"13011:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2491,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13019:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2489,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"12988:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2487,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:12","typeDescriptions":{}}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2494,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:12","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:12"},{"assignments":[2502],"declarations":[{"constant":false,"id":2502,"mutability":"mutable","name":"offset","nameLocation":"13131:6:12","nodeType":"VariableDeclaration","scope":2560,"src":"13123:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2503,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"13140:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"13140:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:12"},{"assignments":[2510],"declarations":[{"constant":false,"id":2510,"mutability":"mutable","name":"result","nameLocation":"13181:6:12","nodeType":"VariableDeclaration","scope":2560,"src":"13173:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2512,"initialValue":{"hexValue":"30","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:12"},{"body":{"id":2554,"nodeType":"Block","src":"13248:447:12","statements":[{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"chr","nameLocation":"13268:3:12","nodeType":"VariableDeclaration","scope":2554,"src":"13262:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2525,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2536,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2531,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"13317:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2532,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13325:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2530,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"13294:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2528,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:12","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2527,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"13274:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"13347:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2544,"nodeType":"IfStatement","src":"13343:31:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2471,"id":2543,"nodeType":"Return","src":"13357:17:12"}},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13388:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"13388:12:12"},{"id":2553,"nodeType":"UncheckedBlock","src":"13414:271:12","statements":[{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13657:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2550,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"13667:3:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"13657:13:12"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13234:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2520,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"13238:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2555,"initializationExpression":{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"i","nameLocation":"13214:1:12","nodeType":"VariableDeclaration","scope":2555,"src":"13206:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2518,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2515,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13218:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2516,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"13226:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:12","subExpression":{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"13245:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"13243:3:12"},"nodeType":"ForStatement","src":"13201:494:12"},{"expression":{"components":[{"hexValue":"74727565","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"13718:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2471,"id":2559,"nodeType":"Return","src":"13704:21:12"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"12448:227:12","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:12","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"input","nameLocation":"12744:5:12","nodeType":"VariableDeclaration","scope":2561,"src":"12730:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"begin","nameLocation":"12767:5:12","nodeType":"VariableDeclaration","scope":2561,"src":"12759:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"end","nameLocation":"12790:3:12","nodeType":"VariableDeclaration","scope":2561,"src":"12782:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:12"},"returnParameters":{"id":2471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"success","nameLocation":"12827:7:12","nodeType":"VariableDeclaration","scope":2561,"src":"12822:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2467,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"12844:5:12","nodeType":"VariableDeclaration","scope":2561,"src":"12836:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:12"},"scope":2975,"src":"12680:1052:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2579,"nodeType":"Block","src":"14030:67:12","statements":[{"expression":{"arguments":[{"id":2570,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"14060:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2574,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"14076:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2572,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:12","typeDescriptions":{}}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:12","memberName":"length","nodeType":"MemberAccess","src":"14070:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2569,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2580,2611],"referencedDeclaration":2611,"src":"14047:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2568,"id":2578,"nodeType":"Return","src":"14040:50:12"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"13738:212:12","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:12","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"input","nameLocation":"13991:5:12","nodeType":"VariableDeclaration","scope":2580,"src":"13977:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2563,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:12"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"14021:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:12"},"scope":2975,"src":"13955:142:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2610,"nodeType":"Block","src":"14470:165:12","statements":[{"assignments":[2593,2595],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"14486:7:12","nodeType":"VariableDeclaration","scope":2610,"src":"14481:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"14503:5:12","nodeType":"VariableDeclaration","scope":2610,"src":"14495:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2601,"initialValue":{"arguments":[{"id":2597,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"14528:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2598,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"14535:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"14542:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2596,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2632,2736],"referencedDeclaration":2736,"src":"14512:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:12"},{"condition":{"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:12","subExpression":{"id":2602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"14561:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2607,"nodeType":"IfStatement","src":"14556:50:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2604,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"14577:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2606,"nodeType":"RevertStatement","src":"14570:36:12"}},{"expression":{"id":2608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"14623:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2591,"id":2609,"nodeType":"Return","src":"14616:12:12"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"14103:259:12","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:12","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"input","nameLocation":"14403:5:12","nodeType":"VariableDeclaration","scope":2611,"src":"14389:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2582,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"begin","nameLocation":"14418:5:12","nodeType":"VariableDeclaration","scope":2611,"src":"14410:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"end","nameLocation":"14433:3:12","nodeType":"VariableDeclaration","scope":2611,"src":"14425:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:12"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"14461:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:12"},"scope":2975,"src":"14367:268:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"14942:70:12","statements":[{"expression":{"arguments":[{"id":2622,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14975:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2626,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"14991:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2624,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:12","typeDescriptions":{}}},"id":2627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:12","memberName":"length","nodeType":"MemberAccess","src":"14985:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2621,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2632,2736],"referencedDeclaration":2736,"src":"14959:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2620,"id":2630,"nodeType":"Return","src":"14952:53:12"}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"14641:198:12","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:12","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"input","nameLocation":"14883:5:12","nodeType":"VariableDeclaration","scope":2632,"src":"14869:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2613,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:12"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"success","nameLocation":"14918:7:12","nodeType":"VariableDeclaration","scope":2632,"src":"14913:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"value","nameLocation":"14935:5:12","nodeType":"VariableDeclaration","scope":2632,"src":"14927:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2618,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:12"},"scope":2975,"src":"14844:168:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"15405:733:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15419:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2649,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15431:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2647,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:12","typeDescriptions":{}}},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:12","memberName":"length","nodeType":"MemberAccess","src":"15425:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15448:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2654,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15456:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"nodeType":"IfStatement","src":"15415:72:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:12","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2663,"nodeType":"Return","src":"15461:26:12"}},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:12","nodeType":"VariableDeclaration","scope":2735,"src":"15498:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2665,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2689,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15516:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2668,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15522:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2678,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"15572:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2676,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:12","typeDescriptions":{}}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2680,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15580:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2675,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"15543:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2673,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:12","typeDescriptions":{}}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2683,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:12","typeDescriptions":{}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:12"},{"assignments":[2691],"declarations":[{"constant":false,"id":2691,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:12","nodeType":"VariableDeclaration","scope":2735,"src":"15684:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2690,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2699,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2693,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"15714:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"15714:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2700,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"15801:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"15807:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2703,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2691,"src":"15816:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2733,"nodeType":"Block","src":"16081:51:12","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:12","typeDescriptions":{}}},"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2732,"nodeType":"Return","src":"16095:26:12"}]},"id":2734,"nodeType":"IfStatement","src":"15797:335:12","trueBody":{"id":2725,"nodeType":"Block","src":"15832:243:12","statements":[{"assignments":[2706,2708],"declarations":[{"constant":false,"id":2706,"mutability":"mutable","name":"s","nameLocation":"15953:1:12","nodeType":"VariableDeclaration","scope":2725,"src":"15948:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2705,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2708,"mutability":"mutable","name":"v","nameLocation":"15964:1:12","nodeType":"VariableDeclaration","scope":2725,"src":"15956:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2707,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2714,"initialValue":{"arguments":[{"id":2710,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"16001:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2711,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"16008:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2712,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"16015:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"15969:31:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:12"},{"expression":{"components":[{"id":2715,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"16041:1:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2720,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"16060:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2718,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:12","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:12","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2645,"id":2724,"nodeType":"Return","src":"16033:31:12"}]}}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"15018:226:12","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:12","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"input","nameLocation":"15297:5:12","nodeType":"VariableDeclaration","scope":2736,"src":"15283:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2634,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"begin","nameLocation":"15320:5:12","nodeType":"VariableDeclaration","scope":2736,"src":"15312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2636,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"end","nameLocation":"15343:3:12","nodeType":"VariableDeclaration","scope":2736,"src":"15335:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:12"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"success","nameLocation":"15381:7:12","nodeType":"VariableDeclaration","scope":2736,"src":"15376:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2641,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2644,"mutability":"mutable","name":"value","nameLocation":"15398:5:12","nodeType":"VariableDeclaration","scope":2736,"src":"15390:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:12"},"scope":2975,"src":"15249:889:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"16207:461:12","statements":[{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"16223:5:12","nodeType":"VariableDeclaration","scope":2795,"src":"16217:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2743,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2749,"initialValue":{"arguments":[{"id":2747,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2738,"src":"16237:3:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2745,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:12","typeDescriptions":{}}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:12"},{"id":2792,"nodeType":"UncheckedBlock","src":"16401:238:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16429:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:12","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16443:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:12","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16489:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16503:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:12","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16550:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16564:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:12","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2784,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2783,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16613:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:12","memberName":"max","nodeType":"MemberAccess","src":"16613:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2742,"id":2788,"nodeType":"Return","src":"16606:22:12"},"id":2789,"nodeType":"IfStatement","src":"16546:82:12","trueBody":{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16576:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:12","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2782,"nodeType":"ExpressionStatement","src":"16576:11:12"}},"id":2790,"nodeType":"IfStatement","src":"16485:143:12","trueBody":{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16516:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:12","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2771,"nodeType":"ExpressionStatement","src":"16516:11:12"}},"id":2791,"nodeType":"IfStatement","src":"16425:203:12","trueBody":{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16455:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2760,"nodeType":"ExpressionStatement","src":"16455:11:12"}}]},{"expression":{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"16656:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2742,"id":2794,"nodeType":"Return","src":"16649:12:12"}]},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:12","nodeType":"FunctionDefinition","parameters":{"id":2739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"chr","nameLocation":"16173:3:12","nodeType":"VariableDeclaration","scope":2796,"src":"16166:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2737,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:12"},"returnParameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"16200:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2740,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:12"},"scope":2975,"src":"16144:524:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2961,"nodeType":"Block","src":"17334:1331:12","statements":[{"assignments":[2805],"declarations":[{"constant":false,"id":2805,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:12","nodeType":"VariableDeclaration","scope":2961,"src":"17344:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2804,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"id":2808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"17372:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2806,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:12","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:12"},{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"output","nameLocation":"17401:6:12","nodeType":"VariableDeclaration","scope":2961,"src":"17388:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2820,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2816,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"17424:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:12","memberName":"length","nodeType":"MemberAccess","src":"17424:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2813,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:12"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:12","nodeType":"VariableDeclaration","scope":2961,"src":"17471:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2824,"initialValue":{"hexValue":"30","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:12"},{"body":{"id":2953,"nodeType":"Block","src":"17546:854:12","statements":[{"assignments":[2836],"declarations":[{"constant":false,"id":2836,"mutability":"mutable","name":"char","nameLocation":"17567:4:12","nodeType":"VariableDeclaration","scope":2953,"src":"17560:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2835,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2844,"initialValue":{"arguments":[{"arguments":[{"id":2840,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"17604:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17612:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2839,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"17581:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2837,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:12","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:12"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"17635:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2849,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"17670:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2847,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:12","typeDescriptions":{}}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2857,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2951,"nodeType":"Block","src":"18328:62:12","statements":[{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2944,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18346:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2947,"indexExpression":{"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:12","subExpression":{"id":2945,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"18353:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2948,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"18371:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2950,"nodeType":"ExpressionStatement","src":"18346:29:12"}]},"id":2952,"nodeType":"IfStatement","src":"17629:761:12","trueBody":{"id":2943,"nodeType":"Block","src":"17685:637:12","statements":[{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2858,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17703:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"indexExpression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:12","subExpression":{"id":2859,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"17710:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2864,"nodeType":"ExpressionStatement","src":"17703:29:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"17754:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"17823:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:12","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"17892:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"17961:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:12","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"18030:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:12","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"18099:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:12","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"18169:4:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2936,"nodeType":"IfStatement","src":"18165:143:12","trueBody":{"id":2935,"nodeType":"Block","src":"18183:125:12","statements":[{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2928,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18261:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2931,"indexExpression":{"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:12","subExpression":{"id":2929,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"18268:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2934,"nodeType":"ExpressionStatement","src":"18261:28:12"}]}},"id":2937,"nodeType":"IfStatement","src":"18095:213:12","trueBody":{"expression":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2918,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18113:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2921,"indexExpression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:12","subExpression":{"id":2919,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"18120:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2924,"nodeType":"ExpressionStatement","src":"18113:29:12"}},"id":2938,"nodeType":"IfStatement","src":"18026:282:12","trueBody":{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2908,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18044:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2911,"indexExpression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:12","subExpression":{"id":2909,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"18051:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2914,"nodeType":"ExpressionStatement","src":"18044:28:12"}},"id":2939,"nodeType":"IfStatement","src":"17957:351:12","trueBody":{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2898,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17975:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2901,"indexExpression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:12","subExpression":{"id":2899,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"17982:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2904,"nodeType":"ExpressionStatement","src":"17975:28:12"}},"id":2940,"nodeType":"IfStatement","src":"17888:420:12","trueBody":{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2888,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17906:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2891,"indexExpression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:12","subExpression":{"id":2889,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"17913:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2894,"nodeType":"ExpressionStatement","src":"17906:28:12"}},"id":2941,"nodeType":"IfStatement","src":"17819:489:12","trueBody":{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2878,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17837:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2881,"indexExpression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:12","subExpression":{"id":2879,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"17844:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2884,"nodeType":"ExpressionStatement","src":"17837:28:12"}},"id":2942,"nodeType":"IfStatement","src":"17750:558:12","trueBody":{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2868,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17768:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2871,"indexExpression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:12","subExpression":{"id":2869,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"17775:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2874,"nodeType":"ExpressionStatement","src":"17768:28:12"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17522:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2829,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"17526:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:12","memberName":"length","nodeType":"MemberAccess","src":"17526:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2954,"initializationExpression":{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"i","nameLocation":"17519:1:12","nodeType":"VariableDeclaration","scope":2954,"src":"17511:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2827,"nodeType":"VariableDeclarationStatement","src":"17511:9:12"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:12","subExpression":{"id":2832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17543:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2834,"nodeType":"ExpressionStatement","src":"17541:3:12"},"nodeType":"ForStatement","src":"17506:894:12"},{"AST":{"nativeSrc":"18498:129:12","nodeType":"YulBlock","src":"18498:129:12","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:12","nodeType":"YulIdentifier","src":"18519:6:12"},{"name":"outputLength","nativeSrc":"18527:12:12","nodeType":"YulIdentifier","src":"18527:12:12"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:12","nodeType":"YulIdentifier","src":"18512:6:12"},"nativeSrc":"18512:28:12","nodeType":"YulFunctionCall","src":"18512:28:12"},"nativeSrc":"18512:28:12","nodeType":"YulExpressionStatement","src":"18512:28:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:12","nodeType":"YulLiteral","src":"18560:4:12","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:12","nodeType":"YulIdentifier","src":"18570:6:12"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:12","nodeType":"YulLiteral","src":"18582:1:12","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:12","nodeType":"YulLiteral","src":"18589:1:12","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:12","nodeType":"YulIdentifier","src":"18596:12:12"},{"kind":"number","nativeSrc":"18610:2:12","nodeType":"YulLiteral","src":"18610:2:12","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:12","nodeType":"YulIdentifier","src":"18592:3:12"},"nativeSrc":"18592:21:12","nodeType":"YulFunctionCall","src":"18592:21:12"}],"functionName":{"name":"shr","nativeSrc":"18585:3:12","nodeType":"YulIdentifier","src":"18585:3:12"},"nativeSrc":"18585:29:12","nodeType":"YulFunctionCall","src":"18585:29:12"}],"functionName":{"name":"shl","nativeSrc":"18578:3:12","nodeType":"YulIdentifier","src":"18578:3:12"},"nativeSrc":"18578:37:12","nodeType":"YulFunctionCall","src":"18578:37:12"}],"functionName":{"name":"add","nativeSrc":"18566:3:12","nodeType":"YulIdentifier","src":"18566:3:12"},"nativeSrc":"18566:50:12","nodeType":"YulFunctionCall","src":"18566:50:12"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:12","nodeType":"YulIdentifier","src":"18553:6:12"},"nativeSrc":"18553:64:12","nodeType":"YulFunctionCall","src":"18553:64:12"},"nativeSrc":"18553:64:12","nodeType":"YulExpressionStatement","src":"18553:64:12"}]},"evmVersion":"cancun","externalReferences":[{"declaration":2812,"isOffset":false,"isSlot":false,"src":"18519:6:12","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"18570:6:12","valueSize":1},{"declaration":2822,"isOffset":false,"isSlot":false,"src":"18527:12:12","valueSize":1},{"declaration":2822,"isOffset":false,"isSlot":false,"src":"18596:12:12","valueSize":1}],"flags":["memory-safe"],"id":2955,"nodeType":"InlineAssembly","src":"18473:154:12"},{"expression":{"arguments":[{"id":2958,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18651:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2956,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:12","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2803,"id":2960,"nodeType":"Return","src":"18637:21:12"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"16674:576:12","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:12","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"input","nameLocation":"17289:5:12","nodeType":"VariableDeclaration","scope":2962,"src":"17275:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:12"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"17319:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2801,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:12"},"scope":2975,"src":"17255:1410:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2973,"nodeType":"Block","src":"19050:225:12","statements":[{"AST":{"nativeSrc":"19199:70:12","nodeType":"YulBlock","src":"19199:70:12","statements":[{"nativeSrc":"19213:46:12","nodeType":"YulAssignment","src":"19213:46:12","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:12","nodeType":"YulIdentifier","src":"19232:6:12"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:12","nodeType":"YulLiteral","src":"19244:4:12","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:12","nodeType":"YulIdentifier","src":"19250:6:12"}],"functionName":{"name":"add","nativeSrc":"19240:3:12","nodeType":"YulIdentifier","src":"19240:3:12"},"nativeSrc":"19240:17:12","nodeType":"YulFunctionCall","src":"19240:17:12"}],"functionName":{"name":"add","nativeSrc":"19228:3:12","nodeType":"YulIdentifier","src":"19228:3:12"},"nativeSrc":"19228:30:12","nodeType":"YulFunctionCall","src":"19228:30:12"}],"functionName":{"name":"mload","nativeSrc":"19222:5:12","nodeType":"YulIdentifier","src":"19222:5:12"},"nativeSrc":"19222:37:12","nodeType":"YulFunctionCall","src":"19222:37:12"},"variableNames":[{"name":"value","nativeSrc":"19213:5:12","nodeType":"YulIdentifier","src":"19213:5:12"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":2965,"isOffset":false,"isSlot":false,"src":"19232:6:12","valueSize":1},{"declaration":2967,"isOffset":false,"isSlot":false,"src":"19250:6:12","valueSize":1},{"declaration":2970,"isOffset":false,"isSlot":false,"src":"19213:5:12","valueSize":1}],"flags":["memory-safe"],"id":2972,"nodeType":"InlineAssembly","src":"19174:95:12"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"18671:268:12","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2974,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:12","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:12","nodeType":"VariableDeclaration","scope":2974,"src":"18976:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2964,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"offset","nameLocation":"19005:6:12","nodeType":"VariableDeclaration","scope":2974,"src":"18997:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:12"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"value","nameLocation":"19043:5:12","nodeType":"VariableDeclaration","scope":2974,"src":"19035:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:12"},"scope":2975,"src":"18944:331:12","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2976,"src":"297:18980:12","usedErrors":[1633,1636,1639],"usedEvents":[]}],"src":"101:19177:12"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2999],"IERC165":[3011]},"id":3000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2977,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3000,"sourceUnit":3012,"src":"140:38:13","symbolAliases":[{"foreign":{"id":2978,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"148:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2981,"name":"IERC165","nameLocations":["688:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":3011,"src":"688:7:13"},"id":2982,"nodeType":"InheritanceSpecifier","src":"688:7:13"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"180:479:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2999,"linearizedBaseContracts":[2999,3011],"name":"ERC165","nameLocation":"678:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3010],"body":{"id":2997,"nodeType":"Block","src":"845:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"862:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2992,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"882:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3011_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3011_$","typeString":"type(contract IERC165)"}],"id":2991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"877:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3011","typeString":"type(contract IERC165)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2989,"id":2996,"nodeType":"Return","src":"855:47:13"}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"702:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2998,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:13","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:13","nodeType":"VariableDeclaration","scope":2998,"src":"790:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2984,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:13"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2998,"src":"839:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2987,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:13"},"scope":2999,"src":"763:146:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3000,"src":"660:251:13","usedErrors":[],"usedEvents":[]}],"src":"114:798:13"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3011]},"id":3012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3001,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"141:280:14","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3011,"linearizedBaseContracts":[3011],"name":"IERC165","nameLocation":"432:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"446:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3010,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:14","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:14","nodeType":"VariableDeclaration","scope":3010,"src":"818:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3004,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:14"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"861:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3007,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:14"},"scope":3011,"src":"791:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3012,"src":"422:447:14","usedErrors":[],"usedEvents":[]}],"src":"115:755:14"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4632],"Panic":[1573],"SafeCast":[6397]},"id":4633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3013,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4633,"sourceUnit":1574,"src":"129:35:15","symbolAliases":[{"foreign":{"id":3014,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"137:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3017,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4633,"sourceUnit":6398,"src":"165:40:15","symbolAliases":[{"foreign":{"id":3016,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"207:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4632,"linearizedBaseContracts":[4632],"name":"Math","nameLocation":"289:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3023,"members":[{"id":3019,"name":"Floor","nameLocation":"324:5:15","nodeType":"EnumValue","src":"324:5:15"},{"id":3020,"name":"Ceil","nameLocation":"367:4:15","nodeType":"EnumValue","src":"367:4:15"},{"id":3021,"name":"Trunc","nameLocation":"409:5:15","nodeType":"EnumValue","src":"409:5:15"},{"id":3022,"name":"Expand","nameLocation":"439:6:15","nodeType":"EnumValue","src":"439:6:15"}],"name":"Rounding","nameLocation":"305:8:15","nodeType":"EnumDefinition","src":"300:169:15"},{"body":{"id":3036,"nodeType":"Block","src":"731:112:15","statements":[{"AST":{"nativeSrc":"766:71:15","nodeType":"YulBlock","src":"766:71:15","statements":[{"nativeSrc":"780:16:15","nodeType":"YulAssignment","src":"780:16:15","value":{"arguments":[{"name":"a","nativeSrc":"791:1:15","nodeType":"YulIdentifier","src":"791:1:15"},{"name":"b","nativeSrc":"794:1:15","nodeType":"YulIdentifier","src":"794:1:15"}],"functionName":{"name":"add","nativeSrc":"787:3:15","nodeType":"YulIdentifier","src":"787:3:15"},"nativeSrc":"787:9:15","nodeType":"YulFunctionCall","src":"787:9:15"},"variableNames":[{"name":"low","nativeSrc":"780:3:15","nodeType":"YulIdentifier","src":"780:3:15"}]},{"nativeSrc":"809:18:15","nodeType":"YulAssignment","src":"809:18:15","value":{"arguments":[{"name":"low","nativeSrc":"820:3:15","nodeType":"YulIdentifier","src":"820:3:15"},{"name":"a","nativeSrc":"825:1:15","nodeType":"YulIdentifier","src":"825:1:15"}],"functionName":{"name":"lt","nativeSrc":"817:2:15","nodeType":"YulIdentifier","src":"817:2:15"},"nativeSrc":"817:10:15","nodeType":"YulFunctionCall","src":"817:10:15"},"variableNames":[{"name":"high","nativeSrc":"809:4:15","nodeType":"YulIdentifier","src":"809:4:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3026,"isOffset":false,"isSlot":false,"src":"791:1:15","valueSize":1},{"declaration":3026,"isOffset":false,"isSlot":false,"src":"825:1:15","valueSize":1},{"declaration":3028,"isOffset":false,"isSlot":false,"src":"794:1:15","valueSize":1},{"declaration":3031,"isOffset":false,"isSlot":false,"src":"809:4:15","valueSize":1},{"declaration":3033,"isOffset":false,"isSlot":false,"src":"780:3:15","valueSize":1},{"declaration":3033,"isOffset":false,"isSlot":false,"src":"820:3:15","valueSize":1}],"flags":["memory-safe"],"id":3035,"nodeType":"InlineAssembly","src":"741:96:15"}]},"documentation":{"id":3024,"nodeType":"StructuredDocumentation","src":"475:163:15","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:15","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"a","nameLocation":"667:1:15","nodeType":"VariableDeclaration","scope":3037,"src":"659:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"b","nameLocation":"678:1:15","nodeType":"VariableDeclaration","scope":3037,"src":"670:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:15"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"high","nameLocation":"712:4:15","nodeType":"VariableDeclaration","scope":3037,"src":"704:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3033,"mutability":"mutable","name":"low","nameLocation":"726:3:15","nodeType":"VariableDeclaration","scope":3037,"src":"718:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:15"},"scope":4632,"src":"643:200:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3050,"nodeType":"Block","src":"1115:462:15","statements":[{"AST":{"nativeSrc":"1437:134:15","nodeType":"YulBlock","src":"1437:134:15","statements":[{"nativeSrc":"1451:30:15","nodeType":"YulVariableDeclaration","src":"1451:30:15","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:15","nodeType":"YulIdentifier","src":"1468:1:15"},{"name":"b","nativeSrc":"1471:1:15","nodeType":"YulIdentifier","src":"1471:1:15"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:15","nodeType":"YulLiteral","src":"1478:1:15","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:15","nodeType":"YulIdentifier","src":"1474:3:15"},"nativeSrc":"1474:6:15","nodeType":"YulFunctionCall","src":"1474:6:15"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:15","nodeType":"YulIdentifier","src":"1461:6:15"},"nativeSrc":"1461:20:15","nodeType":"YulFunctionCall","src":"1461:20:15"},"variables":[{"name":"mm","nativeSrc":"1455:2:15","nodeType":"YulTypedName","src":"1455:2:15","type":""}]},{"nativeSrc":"1494:16:15","nodeType":"YulAssignment","src":"1494:16:15","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:15","nodeType":"YulIdentifier","src":"1505:1:15"},{"name":"b","nativeSrc":"1508:1:15","nodeType":"YulIdentifier","src":"1508:1:15"}],"functionName":{"name":"mul","nativeSrc":"1501:3:15","nodeType":"YulIdentifier","src":"1501:3:15"},"nativeSrc":"1501:9:15","nodeType":"YulFunctionCall","src":"1501:9:15"},"variableNames":[{"name":"low","nativeSrc":"1494:3:15","nodeType":"YulIdentifier","src":"1494:3:15"}]},{"nativeSrc":"1523:38:15","nodeType":"YulAssignment","src":"1523:38:15","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:15","nodeType":"YulIdentifier","src":"1539:2:15"},{"name":"low","nativeSrc":"1543:3:15","nodeType":"YulIdentifier","src":"1543:3:15"}],"functionName":{"name":"sub","nativeSrc":"1535:3:15","nodeType":"YulIdentifier","src":"1535:3:15"},"nativeSrc":"1535:12:15","nodeType":"YulFunctionCall","src":"1535:12:15"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:15","nodeType":"YulIdentifier","src":"1552:2:15"},{"name":"low","nativeSrc":"1556:3:15","nodeType":"YulIdentifier","src":"1556:3:15"}],"functionName":{"name":"lt","nativeSrc":"1549:2:15","nodeType":"YulIdentifier","src":"1549:2:15"},"nativeSrc":"1549:11:15","nodeType":"YulFunctionCall","src":"1549:11:15"}],"functionName":{"name":"sub","nativeSrc":"1531:3:15","nodeType":"YulIdentifier","src":"1531:3:15"},"nativeSrc":"1531:30:15","nodeType":"YulFunctionCall","src":"1531:30:15"},"variableNames":[{"name":"high","nativeSrc":"1523:4:15","nodeType":"YulIdentifier","src":"1523:4:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3040,"isOffset":false,"isSlot":false,"src":"1468:1:15","valueSize":1},{"declaration":3040,"isOffset":false,"isSlot":false,"src":"1505:1:15","valueSize":1},{"declaration":3042,"isOffset":false,"isSlot":false,"src":"1471:1:15","valueSize":1},{"declaration":3042,"isOffset":false,"isSlot":false,"src":"1508:1:15","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"1523:4:15","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"1494:3:15","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"1543:3:15","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"1556:3:15","valueSize":1}],"flags":["memory-safe"],"id":3049,"nodeType":"InlineAssembly","src":"1412:159:15"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"849:173:15","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3051,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:15","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"a","nameLocation":"1051:1:15","nodeType":"VariableDeclaration","scope":3051,"src":"1043:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"b","nameLocation":"1062:1:15","nodeType":"VariableDeclaration","scope":3051,"src":"1054:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:15"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"high","nameLocation":"1096:4:15","nodeType":"VariableDeclaration","scope":3051,"src":"1088:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"low","nameLocation":"1110:3:15","nodeType":"VariableDeclaration","scope":3051,"src":"1102:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:15"},"scope":4632,"src":"1027:550:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3085,"nodeType":"Block","src":"1784:149:15","statements":[{"id":3084,"nodeType":"UncheckedBlock","src":"1794:133:15","statements":[{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"c","nameLocation":"1826:1:15","nodeType":"VariableDeclaration","scope":3084,"src":"1818:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3068,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1830:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"1834:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:15"},{"expression":{"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"1849:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3070,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1859:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3071,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1864:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3074,"nodeType":"ExpressionStatement","src":"1849:16:15"},{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"1879:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3076,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"1888:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3079,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3059,"src":"1908:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3077,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1892:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"1892:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3083,"nodeType":"ExpressionStatement","src":"1879:37:15"}]}]},"documentation":{"id":3052,"nodeType":"StructuredDocumentation","src":"1583:105:15","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3086,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:15","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3054,"mutability":"mutable","name":"a","nameLocation":"1717:1:15","nodeType":"VariableDeclaration","scope":3086,"src":"1709:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3056,"mutability":"mutable","name":"b","nameLocation":"1728:1:15","nodeType":"VariableDeclaration","scope":3086,"src":"1720:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:15"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"success","nameLocation":"1759:7:15","nodeType":"VariableDeclaration","scope":3086,"src":"1754:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3058,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3061,"mutability":"mutable","name":"result","nameLocation":"1776:6:15","nodeType":"VariableDeclaration","scope":3086,"src":"1768:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:15"},"scope":4632,"src":"1693:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3120,"nodeType":"Block","src":"2143:149:15","statements":[{"id":3119,"nodeType":"UncheckedBlock","src":"2153:133:15","statements":[{"assignments":[3099],"declarations":[{"constant":false,"id":3099,"mutability":"mutable","name":"c","nameLocation":"2185:1:15","nodeType":"VariableDeclaration","scope":3119,"src":"2177:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3103,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2189:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"2193:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:15"},{"expression":{"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"2208:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3105,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"2218:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2223:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3109,"nodeType":"ExpressionStatement","src":"2208:16:15"},{"expression":{"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"2238:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3111,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"2247:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3114,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"2267:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3112,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"2251:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"2251:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3118,"nodeType":"ExpressionStatement","src":"2238:37:15"}]}]},"documentation":{"id":3087,"nodeType":"StructuredDocumentation","src":"1939:108:15","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3121,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:15","nodeType":"FunctionDefinition","parameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"a","nameLocation":"2076:1:15","nodeType":"VariableDeclaration","scope":3121,"src":"2068:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"b","nameLocation":"2087:1:15","nodeType":"VariableDeclaration","scope":3121,"src":"2079:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:15"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3094,"mutability":"mutable","name":"success","nameLocation":"2118:7:15","nodeType":"VariableDeclaration","scope":3121,"src":"2113:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3093,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"result","nameLocation":"2135:6:15","nodeType":"VariableDeclaration","scope":3121,"src":"2127:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:15"},"scope":4632,"src":"2052:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"2505:391:15","statements":[{"id":3149,"nodeType":"UncheckedBlock","src":"2515:375:15","statements":[{"assignments":[3134],"declarations":[{"constant":false,"id":3134,"mutability":"mutable","name":"c","nameLocation":"2547:1:15","nodeType":"VariableDeclaration","scope":3149,"src":"2539:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3138,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"2551:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3136,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"2555:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:15"},{"AST":{"nativeSrc":"2595:188:15","nodeType":"YulBlock","src":"2595:188:15","statements":[{"nativeSrc":"2727:42:15","nodeType":"YulAssignment","src":"2727:42:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:15","nodeType":"YulIdentifier","src":"2748:1:15"},{"name":"a","nativeSrc":"2751:1:15","nodeType":"YulIdentifier","src":"2751:1:15"}],"functionName":{"name":"div","nativeSrc":"2744:3:15","nodeType":"YulIdentifier","src":"2744:3:15"},"nativeSrc":"2744:9:15","nodeType":"YulFunctionCall","src":"2744:9:15"},{"name":"b","nativeSrc":"2755:1:15","nodeType":"YulIdentifier","src":"2755:1:15"}],"functionName":{"name":"eq","nativeSrc":"2741:2:15","nodeType":"YulIdentifier","src":"2741:2:15"},"nativeSrc":"2741:16:15","nodeType":"YulFunctionCall","src":"2741:16:15"},{"arguments":[{"name":"a","nativeSrc":"2766:1:15","nodeType":"YulIdentifier","src":"2766:1:15"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:15","nodeType":"YulIdentifier","src":"2759:6:15"},"nativeSrc":"2759:9:15","nodeType":"YulFunctionCall","src":"2759:9:15"}],"functionName":{"name":"or","nativeSrc":"2738:2:15","nodeType":"YulIdentifier","src":"2738:2:15"},"nativeSrc":"2738:31:15","nodeType":"YulFunctionCall","src":"2738:31:15"},"variableNames":[{"name":"success","nativeSrc":"2727:7:15","nodeType":"YulIdentifier","src":"2727:7:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3124,"isOffset":false,"isSlot":false,"src":"2751:1:15","valueSize":1},{"declaration":3124,"isOffset":false,"isSlot":false,"src":"2766:1:15","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"2755:1:15","valueSize":1},{"declaration":3134,"isOffset":false,"isSlot":false,"src":"2748:1:15","valueSize":1},{"declaration":3129,"isOffset":false,"isSlot":false,"src":"2727:7:15","valueSize":1}],"flags":["memory-safe"],"id":3139,"nodeType":"InlineAssembly","src":"2570:213:15"},{"expression":{"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"2842:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"2851:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3144,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"2871:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3142,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"2855:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"2855:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3148,"nodeType":"ExpressionStatement","src":"2842:37:15"}]}]},"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"2298:111:15","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:15","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"a","nameLocation":"2438:1:15","nodeType":"VariableDeclaration","scope":3151,"src":"2430:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"b","nameLocation":"2449:1:15","nodeType":"VariableDeclaration","scope":3151,"src":"2441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:15"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"success","nameLocation":"2480:7:15","nodeType":"VariableDeclaration","scope":3151,"src":"2475:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3128,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"result","nameLocation":"2497:6:15","nodeType":"VariableDeclaration","scope":3151,"src":"2489:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:15"},"scope":4632,"src":"2414:482:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"3111:231:15","statements":[{"id":3170,"nodeType":"UncheckedBlock","src":"3121:215:15","statements":[{"expression":{"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3163,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"3145:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"3155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3168,"nodeType":"ExpressionStatement","src":"3145:15:15"},{"AST":{"nativeSrc":"3199:127:15","nodeType":"YulBlock","src":"3199:127:15","statements":[{"nativeSrc":"3293:19:15","nodeType":"YulAssignment","src":"3293:19:15","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:15","nodeType":"YulIdentifier","src":"3307:1:15"},{"name":"b","nativeSrc":"3310:1:15","nodeType":"YulIdentifier","src":"3310:1:15"}],"functionName":{"name":"div","nativeSrc":"3303:3:15","nodeType":"YulIdentifier","src":"3303:3:15"},"nativeSrc":"3303:9:15","nodeType":"YulFunctionCall","src":"3303:9:15"},"variableNames":[{"name":"result","nativeSrc":"3293:6:15","nodeType":"YulIdentifier","src":"3293:6:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3154,"isOffset":false,"isSlot":false,"src":"3307:1:15","valueSize":1},{"declaration":3156,"isOffset":false,"isSlot":false,"src":"3310:1:15","valueSize":1},{"declaration":3161,"isOffset":false,"isSlot":false,"src":"3293:6:15","valueSize":1}],"flags":["memory-safe"],"id":3169,"nodeType":"InlineAssembly","src":"3174:152:15"}]}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"2902:113:15","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:15","nodeType":"FunctionDefinition","parameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"a","nameLocation":"3044:1:15","nodeType":"VariableDeclaration","scope":3172,"src":"3036:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"b","nameLocation":"3055:1:15","nodeType":"VariableDeclaration","scope":3172,"src":"3047:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:15"},"returnParameters":{"id":3162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"success","nameLocation":"3086:7:15","nodeType":"VariableDeclaration","scope":3172,"src":"3081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3158,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3161,"mutability":"mutable","name":"result","nameLocation":"3103:6:15","nodeType":"VariableDeclaration","scope":3172,"src":"3095:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:15"},"scope":4632,"src":"3020:322:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3192,"nodeType":"Block","src":"3567:231:15","statements":[{"id":3191,"nodeType":"UncheckedBlock","src":"3577:215:15","statements":[{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3184,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"3601:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3185,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3611:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3189,"nodeType":"ExpressionStatement","src":"3601:15:15"},{"AST":{"nativeSrc":"3655:127:15","nodeType":"YulBlock","src":"3655:127:15","statements":[{"nativeSrc":"3749:19:15","nodeType":"YulAssignment","src":"3749:19:15","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:15","nodeType":"YulIdentifier","src":"3763:1:15"},{"name":"b","nativeSrc":"3766:1:15","nodeType":"YulIdentifier","src":"3766:1:15"}],"functionName":{"name":"mod","nativeSrc":"3759:3:15","nodeType":"YulIdentifier","src":"3759:3:15"},"nativeSrc":"3759:9:15","nodeType":"YulFunctionCall","src":"3759:9:15"},"variableNames":[{"name":"result","nativeSrc":"3749:6:15","nodeType":"YulIdentifier","src":"3749:6:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3175,"isOffset":false,"isSlot":false,"src":"3763:1:15","valueSize":1},{"declaration":3177,"isOffset":false,"isSlot":false,"src":"3766:1:15","valueSize":1},{"declaration":3182,"isOffset":false,"isSlot":false,"src":"3749:6:15","valueSize":1}],"flags":["memory-safe"],"id":3190,"nodeType":"InlineAssembly","src":"3630:152:15"}]}]},"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"3348:123:15","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3193,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:15","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"a","nameLocation":"3500:1:15","nodeType":"VariableDeclaration","scope":3193,"src":"3492:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"b","nameLocation":"3511:1:15","nodeType":"VariableDeclaration","scope":3193,"src":"3503:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:15"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"success","nameLocation":"3542:7:15","nodeType":"VariableDeclaration","scope":3193,"src":"3537:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3179,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"result","nameLocation":"3559:6:15","nodeType":"VariableDeclaration","scope":3193,"src":"3551:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:15"},"scope":4632,"src":"3476:322:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3222,"nodeType":"Block","src":"3989:122:15","statements":[{"assignments":[3204,3206],"declarations":[{"constant":false,"id":3204,"mutability":"mutable","name":"success","nameLocation":"4005:7:15","nodeType":"VariableDeclaration","scope":3222,"src":"4000:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3203,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"result","nameLocation":"4022:6:15","nodeType":"VariableDeclaration","scope":3222,"src":"4014:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3211,"initialValue":{"arguments":[{"id":3208,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4039:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3209,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"4042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3207,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4032:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:15"},{"expression":{"arguments":[{"id":3213,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"4069:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3214,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"4078:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4086:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:15","memberName":"max","nodeType":"MemberAccess","src":"4086:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3212,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"4061:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3202,"id":3221,"nodeType":"Return","src":"4054:50:15"}]},"documentation":{"id":3194,"nodeType":"StructuredDocumentation","src":"3804:103:15","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:15","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3196,"mutability":"mutable","name":"a","nameLocation":"3943:1:15","nodeType":"VariableDeclaration","scope":3223,"src":"3935:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"b","nameLocation":"3954:1:15","nodeType":"VariableDeclaration","scope":3223,"src":"3946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:15"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3223,"src":"3980:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:15"},"scope":4632,"src":"3912:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"4294:73:15","statements":[{"assignments":[null,3234],"declarations":[null,{"constant":false,"id":3234,"mutability":"mutable","name":"result","nameLocation":"4315:6:15","nodeType":"VariableDeclaration","scope":3242,"src":"4307:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3239,"initialValue":{"arguments":[{"id":3236,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4332:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"4335:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3235,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"4325:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:15"},{"expression":{"id":3240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4354:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3232,"id":3241,"nodeType":"Return","src":"4347:13:15"}]},"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"4117:95:15","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:15","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"a","nameLocation":"4248:1:15","nodeType":"VariableDeclaration","scope":3243,"src":"4240:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"b","nameLocation":"4259:1:15","nodeType":"VariableDeclaration","scope":3243,"src":"4251:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:15"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3243,"src":"4285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:15"},"scope":4632,"src":"4217:150:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3272,"nodeType":"Block","src":"4564:122:15","statements":[{"assignments":[3254,3256],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"success","nameLocation":"4580:7:15","nodeType":"VariableDeclaration","scope":3272,"src":"4575:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3253,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"result","nameLocation":"4597:6:15","nodeType":"VariableDeclaration","scope":3272,"src":"4589:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3261,"initialValue":{"arguments":[{"id":3258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"4614:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3259,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4617:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"4607:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:15"},{"expression":{"arguments":[{"id":3263,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"4644:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"4653:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3265,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4661:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:15","memberName":"max","nodeType":"MemberAccess","src":"4661:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3262,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"4636:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3252,"id":3271,"nodeType":"Return","src":"4629:50:15"}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"4373:109:15","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:15","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"a","nameLocation":"4518:1:15","nodeType":"VariableDeclaration","scope":3273,"src":"4510:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"b","nameLocation":"4529:1:15","nodeType":"VariableDeclaration","scope":3273,"src":"4521:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:15"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3273,"src":"4555:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:15"},"scope":4632,"src":"4487:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3299,"nodeType":"Block","src":"5158:207:15","statements":[{"id":3298,"nodeType":"UncheckedBlock","src":"5168:191:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"5306:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"5312:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3287,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"5316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3292,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"5337:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3290,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"5321:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"5321:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3284,"id":3297,"nodeType":"Return","src":"5299:49:15"}]}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"4692:374:15","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3300,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:15","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"condition","nameLocation":"5093:9:15","nodeType":"VariableDeclaration","scope":3300,"src":"5088:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3275,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"a","nameLocation":"5112:1:15","nodeType":"VariableDeclaration","scope":3300,"src":"5104:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"b","nameLocation":"5123:1:15","nodeType":"VariableDeclaration","scope":3300,"src":"5115:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:15"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3300,"src":"5149:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:15"},"scope":4632,"src":"5071:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3318,"nodeType":"Block","src":"5502:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"5527:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3312,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"5531:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3314,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"5534:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"5537:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3310,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"5519:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3309,"id":3317,"nodeType":"Return","src":"5512:27:15"}]},"documentation":{"id":3301,"nodeType":"StructuredDocumentation","src":"5371:59:15","text":" @dev Returns the largest of two numbers."},"id":3319,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:15","nodeType":"FunctionDefinition","parameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3303,"mutability":"mutable","name":"a","nameLocation":"5456:1:15","nodeType":"VariableDeclaration","scope":3319,"src":"5448:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"b","nameLocation":"5467:1:15","nodeType":"VariableDeclaration","scope":3319,"src":"5459:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3304,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:15"},"returnParameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3319,"src":"5493:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:15"},"scope":4632,"src":"5435:111:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3337,"nodeType":"Block","src":"5684:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3330,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"5709:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"5713:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"5716:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"5719:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"5701:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3328,"id":3336,"nodeType":"Return","src":"5694:27:15"}]},"documentation":{"id":3320,"nodeType":"StructuredDocumentation","src":"5552:60:15","text":" @dev Returns the smallest of two numbers."},"id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:15","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"a","nameLocation":"5638:1:15","nodeType":"VariableDeclaration","scope":3338,"src":"5630:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3321,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3324,"mutability":"mutable","name":"b","nameLocation":"5649:1:15","nodeType":"VariableDeclaration","scope":3338,"src":"5641:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:15"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3338,"src":"5675:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:15"},"scope":4632,"src":"5617:111:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3360,"nodeType":"Block","src":"5912:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"5967:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3349,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"5971:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"5977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"5981:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3347,"id":3359,"nodeType":"Return","src":"5959:28:15"}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"5734:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:15","nodeType":"FunctionDefinition","parameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"a","nameLocation":"5866:1:15","nodeType":"VariableDeclaration","scope":3361,"src":"5858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"b","nameLocation":"5877:1:15","nodeType":"VariableDeclaration","scope":3361,"src":"5869:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:15"},"returnParameters":{"id":3347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"5903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:15"},"scope":4632,"src":"5841:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"6286:633:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"6300:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3382,"nodeType":"IfStatement","src":"6296:150:15","trueBody":{"id":3381,"nodeType":"Block","src":"6308:138:15","statements":[{"expression":{"arguments":[{"expression":{"id":3377,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"6412:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1540,"src":"6412:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3374,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"6400:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1572,"src":"6400:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3380,"nodeType":"ExpressionStatement","src":"6400:35:15"}]}},{"id":3400,"nodeType":"UncheckedBlock","src":"6829:84:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"6876:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3383,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"6860:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"6860:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"6887:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3393,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"6896:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3397,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3370,"id":3399,"nodeType":"Return","src":"6853:49:15"}]}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"6000:210:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:15","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"a","nameLocation":"6240:1:15","nodeType":"VariableDeclaration","scope":3402,"src":"6232:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"b","nameLocation":"6251:1:15","nodeType":"VariableDeclaration","scope":3402,"src":"6243:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:15"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"6277:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:15"},"scope":4632,"src":"6215:704:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3537,"nodeType":"Block","src":"7340:3585:15","statements":[{"id":3536,"nodeType":"UncheckedBlock","src":"7350:3569:15","statements":[{"assignments":[3415,3417],"declarations":[{"constant":false,"id":3415,"mutability":"mutable","name":"high","nameLocation":"7383:4:15","nodeType":"VariableDeclaration","scope":3536,"src":"7375:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3417,"mutability":"mutable","name":"low","nameLocation":"7397:3:15","nodeType":"VariableDeclaration","scope":3536,"src":"7389:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3422,"initialValue":{"arguments":[{"id":3419,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"7411:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3420,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"7414:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3418,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"7404:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"7498:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3431,"nodeType":"IfStatement","src":"7494:365:15","trueBody":{"id":3430,"nodeType":"Block","src":"7509:350:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3426,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"7827:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3427,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"7833:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3413,"id":3429,"nodeType":"Return","src":"7820:24:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3432,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"7969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3433,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"7984:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3450,"nodeType":"IfStatement","src":"7965:142:15","trueBody":{"id":3449,"nodeType":"Block","src":"7990:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"8028:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3442,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"8046:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1540,"src":"8046:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3444,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"8070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:15","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"8070:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3438,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"8020:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3435,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"8008:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1572,"src":"8008:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3448,"nodeType":"ExpressionStatement","src":"8008:84:15"}]}},{"assignments":[3452],"declarations":[{"constant":false,"id":3452,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:15","nodeType":"VariableDeclaration","scope":3536,"src":"8359:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3453,"nodeType":"VariableDeclarationStatement","src":"8359:17:15"},{"AST":{"nativeSrc":"8415:283:15","nodeType":"YulBlock","src":"8415:283:15","statements":[{"nativeSrc":"8484:38:15","nodeType":"YulAssignment","src":"8484:38:15","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:15","nodeType":"YulIdentifier","src":"8504:1:15"},{"name":"y","nativeSrc":"8507:1:15","nodeType":"YulIdentifier","src":"8507:1:15"},{"name":"denominator","nativeSrc":"8510:11:15","nodeType":"YulIdentifier","src":"8510:11:15"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:15","nodeType":"YulIdentifier","src":"8497:6:15"},"nativeSrc":"8497:25:15","nodeType":"YulFunctionCall","src":"8497:25:15"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:15","nodeType":"YulIdentifier","src":"8484:9:15"}]},{"nativeSrc":"8604:37:15","nodeType":"YulAssignment","src":"8604:37:15","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:15","nodeType":"YulIdentifier","src":"8616:4:15"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:15","nodeType":"YulIdentifier","src":"8625:9:15"},{"name":"low","nativeSrc":"8636:3:15","nodeType":"YulIdentifier","src":"8636:3:15"}],"functionName":{"name":"gt","nativeSrc":"8622:2:15","nodeType":"YulIdentifier","src":"8622:2:15"},"nativeSrc":"8622:18:15","nodeType":"YulFunctionCall","src":"8622:18:15"}],"functionName":{"name":"sub","nativeSrc":"8612:3:15","nodeType":"YulIdentifier","src":"8612:3:15"},"nativeSrc":"8612:29:15","nodeType":"YulFunctionCall","src":"8612:29:15"},"variableNames":[{"name":"high","nativeSrc":"8604:4:15","nodeType":"YulIdentifier","src":"8604:4:15"}]},{"nativeSrc":"8658:26:15","nodeType":"YulAssignment","src":"8658:26:15","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:15","nodeType":"YulIdentifier","src":"8669:3:15"},{"name":"remainder","nativeSrc":"8674:9:15","nodeType":"YulIdentifier","src":"8674:9:15"}],"functionName":{"name":"sub","nativeSrc":"8665:3:15","nodeType":"YulIdentifier","src":"8665:3:15"},"nativeSrc":"8665:19:15","nodeType":"YulFunctionCall","src":"8665:19:15"},"variableNames":[{"name":"low","nativeSrc":"8658:3:15","nodeType":"YulIdentifier","src":"8658:3:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3409,"isOffset":false,"isSlot":false,"src":"8510:11:15","valueSize":1},{"declaration":3415,"isOffset":false,"isSlot":false,"src":"8604:4:15","valueSize":1},{"declaration":3415,"isOffset":false,"isSlot":false,"src":"8616:4:15","valueSize":1},{"declaration":3417,"isOffset":false,"isSlot":false,"src":"8636:3:15","valueSize":1},{"declaration":3417,"isOffset":false,"isSlot":false,"src":"8658:3:15","valueSize":1},{"declaration":3417,"isOffset":false,"isSlot":false,"src":"8669:3:15","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"8484:9:15","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"8625:9:15","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"8674:9:15","valueSize":1},{"declaration":3405,"isOffset":false,"isSlot":false,"src":"8504:1:15","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"8507:1:15","valueSize":1}],"flags":["memory-safe"],"id":3454,"nodeType":"InlineAssembly","src":"8390:308:15"},{"assignments":[3456],"declarations":[{"constant":false,"id":3456,"mutability":"mutable","name":"twos","nameLocation":"8910:4:15","nodeType":"VariableDeclaration","scope":3536,"src":"8902:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3463,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"8917:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3459,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"8936:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:15"},{"AST":{"nativeSrc":"8987:359:15","nodeType":"YulBlock","src":"8987:359:15","statements":[{"nativeSrc":"9052:37:15","nodeType":"YulAssignment","src":"9052:37:15","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:15","nodeType":"YulIdentifier","src":"9071:11:15"},{"name":"twos","nativeSrc":"9084:4:15","nodeType":"YulIdentifier","src":"9084:4:15"}],"functionName":{"name":"div","nativeSrc":"9067:3:15","nodeType":"YulIdentifier","src":"9067:3:15"},"nativeSrc":"9067:22:15","nodeType":"YulFunctionCall","src":"9067:22:15"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:15","nodeType":"YulIdentifier","src":"9052:11:15"}]},{"nativeSrc":"9153:21:15","nodeType":"YulAssignment","src":"9153:21:15","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:15","nodeType":"YulIdentifier","src":"9164:3:15"},{"name":"twos","nativeSrc":"9169:4:15","nodeType":"YulIdentifier","src":"9169:4:15"}],"functionName":{"name":"div","nativeSrc":"9160:3:15","nodeType":"YulIdentifier","src":"9160:3:15"},"nativeSrc":"9160:14:15","nodeType":"YulFunctionCall","src":"9160:14:15"},"variableNames":[{"name":"low","nativeSrc":"9153:3:15","nodeType":"YulIdentifier","src":"9153:3:15"}]},{"nativeSrc":"9293:39:15","nodeType":"YulAssignment","src":"9293:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:15","nodeType":"YulLiteral","src":"9313:1:15","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:15","nodeType":"YulIdentifier","src":"9316:4:15"}],"functionName":{"name":"sub","nativeSrc":"9309:3:15","nodeType":"YulIdentifier","src":"9309:3:15"},"nativeSrc":"9309:12:15","nodeType":"YulFunctionCall","src":"9309:12:15"},{"name":"twos","nativeSrc":"9323:4:15","nodeType":"YulIdentifier","src":"9323:4:15"}],"functionName":{"name":"div","nativeSrc":"9305:3:15","nodeType":"YulIdentifier","src":"9305:3:15"},"nativeSrc":"9305:23:15","nodeType":"YulFunctionCall","src":"9305:23:15"},{"kind":"number","nativeSrc":"9330:1:15","nodeType":"YulLiteral","src":"9330:1:15","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:15","nodeType":"YulIdentifier","src":"9301:3:15"},"nativeSrc":"9301:31:15","nodeType":"YulFunctionCall","src":"9301:31:15"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:15","nodeType":"YulIdentifier","src":"9293:4:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3409,"isOffset":false,"isSlot":false,"src":"9052:11:15","valueSize":1},{"declaration":3409,"isOffset":false,"isSlot":false,"src":"9071:11:15","valueSize":1},{"declaration":3417,"isOffset":false,"isSlot":false,"src":"9153:3:15","valueSize":1},{"declaration":3417,"isOffset":false,"isSlot":false,"src":"9164:3:15","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"9084:4:15","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"9169:4:15","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"9293:4:15","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"9316:4:15","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"9323:4:15","valueSize":1}],"flags":["memory-safe"],"id":3464,"nodeType":"InlineAssembly","src":"8962:384:15"},{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3465,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"9409:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"9416:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3467,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"9423:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"9409:18:15"},{"assignments":[3472],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:15","nodeType":"VariableDeclaration","scope":3536,"src":"9762:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3479,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3474,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"9785:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:15"},{"expression":{"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3480,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10018:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3482,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"10033:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3483,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ExpressionStatement","src":"10018:36:15"},{"expression":{"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3488,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"10103:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3491,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"nodeType":"ExpressionStatement","src":"10088:36:15"},{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3496,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3498,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"10175:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3499,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3503,"nodeType":"ExpressionStatement","src":"10160:36:15"},{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3504,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10231:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"10246:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3507,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ExpressionStatement","src":"10231:36:15"},{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3512,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10304:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3514,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"10319:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3515,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3519,"nodeType":"ExpressionStatement","src":"10304:36:15"},{"expression":{"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3520,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"10393:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3523,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10407:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3527,"nodeType":"ExpressionStatement","src":"10378:36:15"},{"expression":{"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10859:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"10868:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3530,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"10874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3533,"nodeType":"ExpressionStatement","src":"10859:22:15"},{"expression":{"id":3534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"10902:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3413,"id":3535,"nodeType":"Return","src":"10895:13:15"}]}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"6925:312:15","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3538,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:15","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"x","nameLocation":"7266:1:15","nodeType":"VariableDeclaration","scope":3538,"src":"7258:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"y","nameLocation":"7277:1:15","nodeType":"VariableDeclaration","scope":3538,"src":"7269:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:15","nodeType":"VariableDeclaration","scope":3538,"src":"7280:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:15"},"returnParameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"result","nameLocation":"7332:6:15","nodeType":"VariableDeclaration","scope":3538,"src":"7324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3411,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:15"},"scope":4632,"src":"7242:3683:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"11164:128:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3554,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"11188:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3555,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11191:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3556,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"11194:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3553,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3538,3575],"referencedDeclaration":3538,"src":"11181:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3561,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"11242:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":3560,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"11225:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3023_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3564,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"11262:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3565,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"11265:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3566,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"11268:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3563,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"11255:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3558,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"11209:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"11209:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3552,"id":3573,"nodeType":"Return","src":"11174:111:15"}]},"documentation":{"id":3539,"nodeType":"StructuredDocumentation","src":"10931:118:15","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:15","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"x","nameLocation":"11078:1:15","nodeType":"VariableDeclaration","scope":3575,"src":"11070:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"y","nameLocation":"11089:1:15","nodeType":"VariableDeclaration","scope":3575,"src":"11081:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:15","nodeType":"VariableDeclaration","scope":3575,"src":"11092:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:15","nodeType":"VariableDeclaration","scope":3575,"src":"11113:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":3547,"nodeType":"UserDefinedTypeName","pathNode":{"id":3546,"name":"Rounding","nameLocations":["11113:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"11113:8:15"},"referencedDeclaration":3023,"src":"11113:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:15"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"11155:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3550,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:15"},"scope":4632,"src":"11054:238:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"11500:245:15","statements":[{"id":3623,"nodeType":"UncheckedBlock","src":"11510:229:15","statements":[{"assignments":[3588,3590],"declarations":[{"constant":false,"id":3588,"mutability":"mutable","name":"high","nameLocation":"11543:4:15","nodeType":"VariableDeclaration","scope":3623,"src":"11535:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"low","nameLocation":"11557:3:15","nodeType":"VariableDeclaration","scope":3623,"src":"11549:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3595,"initialValue":{"arguments":[{"id":3592,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"11571:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3593,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"11574:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3591,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11564:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3596,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"11594:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3598,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11607:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"nodeType":"IfStatement","src":"11590:86:15","trueBody":{"id":3608,"nodeType":"Block","src":"11610:66:15","statements":[{"expression":{"arguments":[{"expression":{"id":3604,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11640:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:15","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1536,"src":"11640:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3601,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"11628:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1572,"src":"11628:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3607,"nodeType":"ExpressionStatement","src":"11628:33:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3610,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"11697:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3612,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11712:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3616,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"11719:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3618,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"11726:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3586,"id":3622,"nodeType":"Return","src":"11689:39:15"}]}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"11298:111:15","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:15","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"x","nameLocation":"11438:1:15","nodeType":"VariableDeclaration","scope":3625,"src":"11430:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"y","nameLocation":"11449:1:15","nodeType":"VariableDeclaration","scope":3625,"src":"11441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"n","nameLocation":"11458:1:15","nodeType":"VariableDeclaration","scope":3625,"src":"11452:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3581,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:15"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"result","nameLocation":"11492:6:15","nodeType":"VariableDeclaration","scope":3625,"src":"11484:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:15"},"scope":4632,"src":"11414:331:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"11963:113:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3641,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"11987:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3642,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"11990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3643,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"11993:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3640,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3625,3664],"referencedDeclaration":3625,"src":"11980:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3648,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"12031:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":3647,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"12014:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3023_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3651,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"12051:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3652,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"12054:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3654,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"12062:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3650,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967280,"src":"12044:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3645,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"11998:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"11998:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3662,"nodeType":"Return","src":"11973:96:15"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"11751:109:15","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:15","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"x","nameLocation":"11889:1:15","nodeType":"VariableDeclaration","scope":3664,"src":"11881:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"y","nameLocation":"11900:1:15","nodeType":"VariableDeclaration","scope":3664,"src":"11892:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"n","nameLocation":"11909:1:15","nodeType":"VariableDeclaration","scope":3664,"src":"11903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3631,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:15","nodeType":"VariableDeclaration","scope":3664,"src":"11912:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":3634,"nodeType":"UserDefinedTypeName","pathNode":{"id":3633,"name":"Rounding","nameLocations":["11912:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"11912:8:15"},"referencedDeclaration":3023,"src":"11912:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:15"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3664,"src":"11954:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:15"},"scope":4632,"src":"11865:211:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3760,"nodeType":"Block","src":"12710:1849:15","statements":[{"id":3759,"nodeType":"UncheckedBlock","src":"12720:1833:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"12748:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3679,"nodeType":"IfStatement","src":"12744:20:15","trueBody":{"expression":{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3673,"id":3678,"nodeType":"Return","src":"12756:8:15"}},{"assignments":[3681],"declarations":[{"constant":false,"id":3681,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:15","nodeType":"VariableDeclaration","scope":3759,"src":"13235:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3685,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"13255:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3683,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"13259:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:15"},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:15","nodeType":"VariableDeclaration","scope":3759,"src":"13274:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3689,"initialValue":{"id":3688,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"13288:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:15"},{"assignments":[3691],"declarations":[{"constant":false,"id":3691,"mutability":"mutable","name":"x","nameLocation":"13432:1:15","nodeType":"VariableDeclaration","scope":3759,"src":"13425:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3690,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3693,"initialValue":{"hexValue":"30","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:15"},{"assignments":[3695],"declarations":[{"constant":false,"id":3695,"mutability":"mutable","name":"y","nameLocation":"13458:1:15","nodeType":"VariableDeclaration","scope":3759,"src":"13451:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3694,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3697,"initialValue":{"hexValue":"31","id":3696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:15"},{"body":{"id":3734,"nodeType":"Block","src":"13501:882:15","statements":[{"assignments":[3702],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:15","nodeType":"VariableDeclaration","scope":3734,"src":"13519:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3706,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"13538:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3704,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"13544:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:15"},{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3707,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"13573:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3708,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"13578:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3709,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3710,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"13678:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"13923:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"13929:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3713,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"13941:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"ExpressionStatement","src":"13572:395:15"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3719,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"13987:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3720,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"13990:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3721,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3722,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"14072:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3723,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"14326:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"14330:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3727,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"14341:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3725,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:15","typeDescriptions":{}}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3733,"nodeType":"ExpressionStatement","src":"13986:382:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3698,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"13485:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3735,"nodeType":"WhileStatement","src":"13478:905:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"14401:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3741,"nodeType":"IfStatement","src":"14397:22:15","trueBody":{"expression":{"hexValue":"30","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3673,"id":3740,"nodeType":"Return","src":"14411:8:15"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"14470:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"14477:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:15","subExpression":{"id":3749,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"14490:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3747,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:15","typeDescriptions":{}}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3755,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"14502:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:15","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3742,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3300,"src":"14462:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3673,"id":3758,"nodeType":"Return","src":"14455:50:15"}]}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"12082:553:15","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:15","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"a","nameLocation":"12664:1:15","nodeType":"VariableDeclaration","scope":3761,"src":"12656:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"n","nameLocation":"12675:1:15","nodeType":"VariableDeclaration","scope":3761,"src":"12667:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:15"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"12701:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:15"},"scope":4632,"src":"12640:1919:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"15159:82:15","statements":[{"id":3780,"nodeType":"UncheckedBlock","src":"15169:66:15","statements":[{"expression":{"arguments":[{"id":3773,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"15212:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3774,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"15215:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3777,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3766,"src":"15222:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3771,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"15200:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4632_$","typeString":"type(library Math)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:15","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3818,"src":"15200:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3770,"id":3779,"nodeType":"Return","src":"15193:31:15"}]}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"14565:514:15","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:15","nodeType":"FunctionDefinition","parameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"a","nameLocation":"15113:1:15","nodeType":"VariableDeclaration","scope":3782,"src":"15105:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"p","nameLocation":"15124:1:15","nodeType":"VariableDeclaration","scope":3782,"src":"15116:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:15"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3782,"src":"15150:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:15"},"scope":4632,"src":"15084:157:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"16011:174:15","statements":[{"assignments":[3795,3797],"declarations":[{"constant":false,"id":3795,"mutability":"mutable","name":"success","nameLocation":"16027:7:15","nodeType":"VariableDeclaration","scope":3817,"src":"16022:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3794,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3797,"mutability":"mutable","name":"result","nameLocation":"16044:6:15","nodeType":"VariableDeclaration","scope":3817,"src":"16036:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3803,"initialValue":{"arguments":[{"id":3799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"16064:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3800,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"16067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3801,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"16070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3798,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3842,3924],"referencedDeclaration":3842,"src":"16054:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:15"},{"condition":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:15","subExpression":{"id":3804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"16087:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3814,"nodeType":"IfStatement","src":"16082:74:15","trueBody":{"id":3813,"nodeType":"Block","src":"16096:60:15","statements":[{"expression":{"arguments":[{"expression":{"id":3809,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"16122:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1540,"src":"16122:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3806,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"16110:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1572,"src":"16110:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3812,"nodeType":"ExpressionStatement","src":"16110:35:15"}]}},{"expression":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3797,"src":"16172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3793,"id":3816,"nodeType":"Return","src":"16165:13:15"}]},"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"15247:678:15","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:15","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"b","nameLocation":"15954:1:15","nodeType":"VariableDeclaration","scope":3818,"src":"15946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3784,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"e","nameLocation":"15965:1:15","nodeType":"VariableDeclaration","scope":3818,"src":"15957:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"m","nameLocation":"15976:1:15","nodeType":"VariableDeclaration","scope":3818,"src":"15968:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:15"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"16002:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:15"},"scope":4632,"src":"15930:255:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"17039:1493:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"17053:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3839,"nodeType":"IfStatement","src":"17049:29:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3831,"id":3838,"nodeType":"Return","src":"17061:17:15"}},{"AST":{"nativeSrc":"17113:1413:15","nodeType":"YulBlock","src":"17113:1413:15","statements":[{"nativeSrc":"17127:22:15","nodeType":"YulVariableDeclaration","src":"17127:22:15","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:15","nodeType":"YulLiteral","src":"17144:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:15","nodeType":"YulIdentifier","src":"17138:5:15"},"nativeSrc":"17138:11:15","nodeType":"YulFunctionCall","src":"17138:11:15"},"variables":[{"name":"ptr","nativeSrc":"17131:3:15","nodeType":"YulTypedName","src":"17131:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:15","nodeType":"YulIdentifier","src":"18057:3:15"},{"kind":"number","nativeSrc":"18062:4:15","nodeType":"YulLiteral","src":"18062:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:15","nodeType":"YulIdentifier","src":"18050:6:15"},"nativeSrc":"18050:17:15","nodeType":"YulFunctionCall","src":"18050:17:15"},"nativeSrc":"18050:17:15","nodeType":"YulExpressionStatement","src":"18050:17:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:15","nodeType":"YulIdentifier","src":"18091:3:15"},{"kind":"number","nativeSrc":"18096:4:15","nodeType":"YulLiteral","src":"18096:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:15","nodeType":"YulIdentifier","src":"18087:3:15"},"nativeSrc":"18087:14:15","nodeType":"YulFunctionCall","src":"18087:14:15"},{"kind":"number","nativeSrc":"18103:4:15","nodeType":"YulLiteral","src":"18103:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:15","nodeType":"YulIdentifier","src":"18080:6:15"},"nativeSrc":"18080:28:15","nodeType":"YulFunctionCall","src":"18080:28:15"},"nativeSrc":"18080:28:15","nodeType":"YulExpressionStatement","src":"18080:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:15","nodeType":"YulIdentifier","src":"18132:3:15"},{"kind":"number","nativeSrc":"18137:4:15","nodeType":"YulLiteral","src":"18137:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:15","nodeType":"YulIdentifier","src":"18128:3:15"},"nativeSrc":"18128:14:15","nodeType":"YulFunctionCall","src":"18128:14:15"},{"kind":"number","nativeSrc":"18144:4:15","nodeType":"YulLiteral","src":"18144:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:15","nodeType":"YulIdentifier","src":"18121:6:15"},"nativeSrc":"18121:28:15","nodeType":"YulFunctionCall","src":"18121:28:15"},"nativeSrc":"18121:28:15","nodeType":"YulExpressionStatement","src":"18121:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:15","nodeType":"YulIdentifier","src":"18173:3:15"},{"kind":"number","nativeSrc":"18178:4:15","nodeType":"YulLiteral","src":"18178:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:15","nodeType":"YulIdentifier","src":"18169:3:15"},"nativeSrc":"18169:14:15","nodeType":"YulFunctionCall","src":"18169:14:15"},{"name":"b","nativeSrc":"18185:1:15","nodeType":"YulIdentifier","src":"18185:1:15"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:15","nodeType":"YulIdentifier","src":"18162:6:15"},"nativeSrc":"18162:25:15","nodeType":"YulFunctionCall","src":"18162:25:15"},"nativeSrc":"18162:25:15","nodeType":"YulExpressionStatement","src":"18162:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:15","nodeType":"YulIdentifier","src":"18211:3:15"},{"kind":"number","nativeSrc":"18216:4:15","nodeType":"YulLiteral","src":"18216:4:15","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:15","nodeType":"YulIdentifier","src":"18207:3:15"},"nativeSrc":"18207:14:15","nodeType":"YulFunctionCall","src":"18207:14:15"},{"name":"e","nativeSrc":"18223:1:15","nodeType":"YulIdentifier","src":"18223:1:15"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:15","nodeType":"YulIdentifier","src":"18200:6:15"},"nativeSrc":"18200:25:15","nodeType":"YulFunctionCall","src":"18200:25:15"},"nativeSrc":"18200:25:15","nodeType":"YulExpressionStatement","src":"18200:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:15","nodeType":"YulIdentifier","src":"18249:3:15"},{"kind":"number","nativeSrc":"18254:4:15","nodeType":"YulLiteral","src":"18254:4:15","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:15","nodeType":"YulIdentifier","src":"18245:3:15"},"nativeSrc":"18245:14:15","nodeType":"YulFunctionCall","src":"18245:14:15"},{"name":"m","nativeSrc":"18261:1:15","nodeType":"YulIdentifier","src":"18261:1:15"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:15","nodeType":"YulIdentifier","src":"18238:6:15"},"nativeSrc":"18238:25:15","nodeType":"YulFunctionCall","src":"18238:25:15"},"nativeSrc":"18238:25:15","nodeType":"YulExpressionStatement","src":"18238:25:15"},{"nativeSrc":"18425:57:15","nodeType":"YulAssignment","src":"18425:57:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:15","nodeType":"YulIdentifier","src":"18447:3:15"},"nativeSrc":"18447:5:15","nodeType":"YulFunctionCall","src":"18447:5:15"},{"kind":"number","nativeSrc":"18454:4:15","nodeType":"YulLiteral","src":"18454:4:15","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:15","nodeType":"YulIdentifier","src":"18460:3:15"},{"kind":"number","nativeSrc":"18465:4:15","nodeType":"YulLiteral","src":"18465:4:15","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:15","nodeType":"YulLiteral","src":"18471:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:15","nodeType":"YulLiteral","src":"18477:4:15","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:15","nodeType":"YulIdentifier","src":"18436:10:15"},"nativeSrc":"18436:46:15","nodeType":"YulFunctionCall","src":"18436:46:15"},"variableNames":[{"name":"success","nativeSrc":"18425:7:15","nodeType":"YulIdentifier","src":"18425:7:15"}]},{"nativeSrc":"18495:21:15","nodeType":"YulAssignment","src":"18495:21:15","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:15","nodeType":"YulLiteral","src":"18511:4:15","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:15","nodeType":"YulIdentifier","src":"18505:5:15"},"nativeSrc":"18505:11:15","nodeType":"YulFunctionCall","src":"18505:11:15"},"variableNames":[{"name":"result","nativeSrc":"18495:6:15","nodeType":"YulIdentifier","src":"18495:6:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":3821,"isOffset":false,"isSlot":false,"src":"18185:1:15","valueSize":1},{"declaration":3823,"isOffset":false,"isSlot":false,"src":"18223:1:15","valueSize":1},{"declaration":3825,"isOffset":false,"isSlot":false,"src":"18261:1:15","valueSize":1},{"declaration":3830,"isOffset":false,"isSlot":false,"src":"18495:6:15","valueSize":1},{"declaration":3828,"isOffset":false,"isSlot":false,"src":"18425:7:15","valueSize":1}],"flags":["memory-safe"],"id":3840,"nodeType":"InlineAssembly","src":"17088:1438:15"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"16191:738:15","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:15","nodeType":"FunctionDefinition","parameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"b","nameLocation":"16961:1:15","nodeType":"VariableDeclaration","scope":3842,"src":"16953:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"e","nameLocation":"16972:1:15","nodeType":"VariableDeclaration","scope":3842,"src":"16964:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"m","nameLocation":"16983:1:15","nodeType":"VariableDeclaration","scope":3842,"src":"16975:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:15"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"success","nameLocation":"17014:7:15","nodeType":"VariableDeclaration","scope":3842,"src":"17009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3827,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"result","nameLocation":"17031:6:15","nodeType":"VariableDeclaration","scope":3842,"src":"17023:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:15"},"scope":4632,"src":"16934:1598:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3877,"nodeType":"Block","src":"18729:179:15","statements":[{"assignments":[3855,3857],"declarations":[{"constant":false,"id":3855,"mutability":"mutable","name":"success","nameLocation":"18745:7:15","nodeType":"VariableDeclaration","scope":3877,"src":"18740:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3854,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"result","nameLocation":"18767:6:15","nodeType":"VariableDeclaration","scope":3877,"src":"18754:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3856,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3863,"initialValue":{"arguments":[{"id":3859,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"18787:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3860,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"18790:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3861,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"18793:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3858,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3842,3924],"referencedDeclaration":3924,"src":"18777:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:15"},{"condition":{"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:15","subExpression":{"id":3864,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"18810:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3874,"nodeType":"IfStatement","src":"18805:74:15","trueBody":{"id":3873,"nodeType":"Block","src":"18819:60:15","statements":[{"expression":{"arguments":[{"expression":{"id":3869,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"18845:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1540,"src":"18845:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3866,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"18833:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1573_$","typeString":"type(library Panic)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1572,"src":"18833:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3872,"nodeType":"ExpressionStatement","src":"18833:35:15"}]}},{"expression":{"id":3875,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"18895:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3853,"id":3876,"nodeType":"Return","src":"18888:13:15"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"18538:85:15","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3878,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:15","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"b","nameLocation":"18657:1:15","nodeType":"VariableDeclaration","scope":3878,"src":"18644:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3844,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"e","nameLocation":"18673:1:15","nodeType":"VariableDeclaration","scope":3878,"src":"18660:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3846,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"m","nameLocation":"18689:1:15","nodeType":"VariableDeclaration","scope":3878,"src":"18676:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:15"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3878,"src":"18715:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3851,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:15"},"scope":4632,"src":"18628:280:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"19162:771:15","statements":[{"condition":{"arguments":[{"id":3893,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"19187:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3892,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"19176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3902,"nodeType":"IfStatement","src":"19172:47:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3896,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3891,"id":3901,"nodeType":"Return","src":"19191:28:15"}},{"assignments":[3904],"declarations":[{"constant":false,"id":3904,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:15","nodeType":"VariableDeclaration","scope":3923,"src":"19230:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3907,"initialValue":{"expression":{"id":3905,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"19245:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:15","memberName":"length","nodeType":"MemberAccess","src":"19245:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:15"},{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"19335:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"19361:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:15","memberName":"length","nodeType":"MemberAccess","src":"19361:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3913,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"19371:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:15","memberName":"length","nodeType":"MemberAccess","src":"19371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3915,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"19381:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3916,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"19387:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3917,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"19390:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3918,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"19393:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3909,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"19344:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3921,"nodeType":"ExpressionStatement","src":"19335:60:15"},{"AST":{"nativeSrc":"19431:496:15","nodeType":"YulBlock","src":"19431:496:15","statements":[{"nativeSrc":"19445:32:15","nodeType":"YulVariableDeclaration","src":"19445:32:15","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:15","nodeType":"YulIdentifier","src":"19464:6:15"},{"kind":"number","nativeSrc":"19472:4:15","nodeType":"YulLiteral","src":"19472:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:15","nodeType":"YulIdentifier","src":"19460:3:15"},"nativeSrc":"19460:17:15","nodeType":"YulFunctionCall","src":"19460:17:15"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:15","nodeType":"YulTypedName","src":"19449:7:15","type":""}]},{"nativeSrc":"19567:73:15","nodeType":"YulAssignment","src":"19567:73:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:15","nodeType":"YulIdentifier","src":"19589:3:15"},"nativeSrc":"19589:5:15","nodeType":"YulFunctionCall","src":"19589:5:15"},{"kind":"number","nativeSrc":"19596:4:15","nodeType":"YulLiteral","src":"19596:4:15","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:15","nodeType":"YulIdentifier","src":"19602:7:15"},{"arguments":[{"name":"result","nativeSrc":"19617:6:15","nodeType":"YulIdentifier","src":"19617:6:15"}],"functionName":{"name":"mload","nativeSrc":"19611:5:15","nodeType":"YulIdentifier","src":"19611:5:15"},"nativeSrc":"19611:13:15","nodeType":"YulFunctionCall","src":"19611:13:15"},{"name":"dataPtr","nativeSrc":"19626:7:15","nodeType":"YulIdentifier","src":"19626:7:15"},{"name":"mLen","nativeSrc":"19635:4:15","nodeType":"YulIdentifier","src":"19635:4:15"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:15","nodeType":"YulIdentifier","src":"19578:10:15"},"nativeSrc":"19578:62:15","nodeType":"YulFunctionCall","src":"19578:62:15"},"variableNames":[{"name":"success","nativeSrc":"19567:7:15","nodeType":"YulIdentifier","src":"19567:7:15"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:15","nodeType":"YulIdentifier","src":"19796:6:15"},{"name":"mLen","nativeSrc":"19804:4:15","nodeType":"YulIdentifier","src":"19804:4:15"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:15","nodeType":"YulIdentifier","src":"19789:6:15"},"nativeSrc":"19789:20:15","nodeType":"YulFunctionCall","src":"19789:20:15"},"nativeSrc":"19789:20:15","nodeType":"YulExpressionStatement","src":"19789:20:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:15","nodeType":"YulLiteral","src":"19892:4:15","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:15","nodeType":"YulIdentifier","src":"19902:7:15"},{"name":"mLen","nativeSrc":"19911:4:15","nodeType":"YulIdentifier","src":"19911:4:15"}],"functionName":{"name":"add","nativeSrc":"19898:3:15","nodeType":"YulIdentifier","src":"19898:3:15"},"nativeSrc":"19898:18:15","nodeType":"YulFunctionCall","src":"19898:18:15"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:15","nodeType":"YulIdentifier","src":"19885:6:15"},"nativeSrc":"19885:32:15","nodeType":"YulFunctionCall","src":"19885:32:15"},"nativeSrc":"19885:32:15","nodeType":"YulExpressionStatement","src":"19885:32:15"}]},"evmVersion":"cancun","externalReferences":[{"declaration":3904,"isOffset":false,"isSlot":false,"src":"19635:4:15","valueSize":1},{"declaration":3904,"isOffset":false,"isSlot":false,"src":"19804:4:15","valueSize":1},{"declaration":3904,"isOffset":false,"isSlot":false,"src":"19911:4:15","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"19464:6:15","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"19617:6:15","valueSize":1},{"declaration":3890,"isOffset":false,"isSlot":false,"src":"19796:6:15","valueSize":1},{"declaration":3888,"isOffset":false,"isSlot":false,"src":"19567:7:15","valueSize":1}],"flags":["memory-safe"],"id":3922,"nodeType":"InlineAssembly","src":"19406:521:15"}]},"documentation":{"id":3879,"nodeType":"StructuredDocumentation","src":"18914:88:15","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:15","nodeType":"FunctionDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"b","nameLocation":"19048:1:15","nodeType":"VariableDeclaration","scope":3924,"src":"19035:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3880,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3883,"mutability":"mutable","name":"e","nameLocation":"19072:1:15","nodeType":"VariableDeclaration","scope":3924,"src":"19059:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3882,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"m","nameLocation":"19096:1:15","nodeType":"VariableDeclaration","scope":3924,"src":"19083:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3884,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:15"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"success","nameLocation":"19132:7:15","nodeType":"VariableDeclaration","scope":3924,"src":"19127:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3887,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"result","nameLocation":"19154:6:15","nodeType":"VariableDeclaration","scope":3924,"src":"19141:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3889,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:15"},"scope":4632,"src":"19007:926:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3956,"nodeType":"Block","src":"20088:176:15","statements":[{"body":{"id":3952,"nodeType":"Block","src":"20145:92:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3943,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"20163:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3945,"indexExpression":{"id":3944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"20173:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3951,"nodeType":"IfStatement","src":"20159:68:15","trueBody":{"id":3950,"nodeType":"Block","src":"20182:45:15","statements":[{"expression":{"hexValue":"66616c7365","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3931,"id":3949,"nodeType":"Return","src":"20200:12:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"20118:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3937,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"20122:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:15","memberName":"length","nodeType":"MemberAccess","src":"20122:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3953,"initializationExpression":{"assignments":[3933],"declarations":[{"constant":false,"id":3933,"mutability":"mutable","name":"i","nameLocation":"20111:1:15","nodeType":"VariableDeclaration","scope":3953,"src":"20103:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3932,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3935,"initialValue":{"hexValue":"30","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:15","subExpression":{"id":3940,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"20142:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3942,"nodeType":"ExpressionStatement","src":"20140:3:15"},"nodeType":"ForStatement","src":"20098:139:15"},{"expression":{"hexValue":"74727565","id":3954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3931,"id":3955,"nodeType":"Return","src":"20246:11:15"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"19939:72:15","text":" @dev Returns whether the provided byte array is zero."},"id":3957,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:15","nodeType":"FunctionDefinition","parameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3927,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:15","nodeType":"VariableDeclaration","scope":3957,"src":"20036:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3926,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:15"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3957,"src":"20082:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3929,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:15"},"scope":4632,"src":"20016:248:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4175,"nodeType":"Block","src":"20624:5124:15","statements":[{"id":4174,"nodeType":"UncheckedBlock","src":"20634:5108:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"20728:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3971,"nodeType":"IfStatement","src":"20724:53:15","trueBody":{"id":3970,"nodeType":"Block","src":"20736:41:15","statements":[{"expression":{"id":3968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"20761:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3964,"id":3969,"nodeType":"Return","src":"20754:8:15"}]}},{"assignments":[3973],"declarations":[{"constant":false,"id":3973,"mutability":"mutable","name":"aa","nameLocation":"21712:2:15","nodeType":"VariableDeclaration","scope":4174,"src":"21704:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3975,"initialValue":{"id":3974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"21717:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:15"},{"assignments":[3977],"declarations":[{"constant":false,"id":3977,"mutability":"mutable","name":"xn","nameLocation":"21740:2:15","nodeType":"VariableDeclaration","scope":4174,"src":"21732:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3979,"initialValue":{"hexValue":"31","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3980,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"21765:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3995,"nodeType":"IfStatement","src":"21761:92:15","trueBody":{"id":3994,"nodeType":"Block","src":"21783:70:15","statements":[{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3986,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"21801:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3989,"nodeType":"ExpressionStatement","src":"21801:10:15"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3990,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"21829:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ExpressionStatement","src":"21829:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"21870:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4011,"nodeType":"IfStatement","src":"21866:90:15","trueBody":{"id":4010,"nodeType":"Block","src":"21887:69:15","statements":[{"expression":{"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4002,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"21905:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4005,"nodeType":"ExpressionStatement","src":"21905:9:15"},{"expression":{"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4006,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"21932:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4009,"nodeType":"ExpressionStatement","src":"21932:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4012,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"21973:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"IfStatement","src":"21969:90:15","trueBody":{"id":4026,"nodeType":"Block","src":"21990:69:15","statements":[{"expression":{"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4018,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22008:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"nodeType":"ExpressionStatement","src":"22008:9:15"},{"expression":{"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4022,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22035:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4025,"nodeType":"ExpressionStatement","src":"22035:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4028,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22076:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4043,"nodeType":"IfStatement","src":"22072:89:15","trueBody":{"id":4042,"nodeType":"Block","src":"22093:68:15","statements":[{"expression":{"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22111:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"nodeType":"ExpressionStatement","src":"22111:9:15"},{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22138:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4041,"nodeType":"ExpressionStatement","src":"22138:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22178:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4059,"nodeType":"IfStatement","src":"22174:87:15","trueBody":{"id":4058,"nodeType":"Block","src":"22194:67:15","statements":[{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4050,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22212:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"22212:8:15"},{"expression":{"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22238:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4057,"nodeType":"ExpressionStatement","src":"22238:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22278:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4064,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4075,"nodeType":"IfStatement","src":"22274:87:15","trueBody":{"id":4074,"nodeType":"Block","src":"22294:67:15","statements":[{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4066,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22312:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ExpressionStatement","src":"22312:8:15"},{"expression":{"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22338:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4073,"nodeType":"ExpressionStatement","src":"22338:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"22378:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4087,"nodeType":"IfStatement","src":"22374:61:15","trueBody":{"id":4086,"nodeType":"Block","src":"22394:41:15","statements":[{"expression":{"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4082,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22412:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4085,"nodeType":"ExpressionStatement","src":"22412:8:15"}]}},{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4088,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22855:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4090,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"22865:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"22855:18:15"},{"expression":{"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24760:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4098,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24766:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"24771:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4100,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24775:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4107,"nodeType":"ExpressionStatement","src":"24760:23:15"},{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4108,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24869:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24875:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"24880:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4111,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24884:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4118,"nodeType":"ExpressionStatement","src":"24869:23:15"},{"expression":{"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4119,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24980:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4120,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24986:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"24991:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4122,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"24995:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4129,"nodeType":"ExpressionStatement","src":"24980:23:15"},{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4130,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25089:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25095:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25100:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4133,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25104:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"25089:23:15"},{"expression":{"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25199:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25205:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25210:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4144,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25214:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4151,"nodeType":"ExpressionStatement","src":"25199:23:15"},{"expression":{"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4152,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25309:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25315:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4154,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25320:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4155,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25324:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4162,"nodeType":"ExpressionStatement","src":"25309:23:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25698:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25719:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3960,"src":"25724:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4168,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"25728:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4164,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"25703:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"25703:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3964,"id":4173,"nodeType":"Return","src":"25691:40:15"}]}]},"documentation":{"id":3958,"nodeType":"StructuredDocumentation","src":"20270:292:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:15","nodeType":"FunctionDefinition","parameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"a","nameLocation":"20589:1:15","nodeType":"VariableDeclaration","scope":4176,"src":"20581:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:15"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4176,"src":"20615:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:15"},"scope":4632,"src":"20567:5181:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4209,"nodeType":"Block","src":"25921:171:15","statements":[{"id":4208,"nodeType":"UncheckedBlock","src":"25931:155:15","statements":[{"assignments":[4188],"declarations":[{"constant":false,"id":4188,"mutability":"mutable","name":"result","nameLocation":"25963:6:15","nodeType":"VariableDeclaration","scope":4208,"src":"25955:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4192,"initialValue":{"arguments":[{"id":4190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"25977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4189,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4176,4210],"referencedDeclaration":4176,"src":"25972:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"26000:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4197,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"26042:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":4196,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"26025:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3023_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"26055:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"26064:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4202,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"26073:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4194,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26009:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26009:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4186,"id":4207,"nodeType":"Return","src":"25993:82:15"}]}]},"documentation":{"id":4177,"nodeType":"StructuredDocumentation","src":"25754:86:15","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4210,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:15","nodeType":"FunctionDefinition","parameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4179,"mutability":"mutable","name":"a","nameLocation":"25867:1:15","nodeType":"VariableDeclaration","scope":4210,"src":"25859:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4182,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:15","nodeType":"VariableDeclaration","scope":4210,"src":"25870:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":4181,"nodeType":"UserDefinedTypeName","pathNode":{"id":4180,"name":"Rounding","nameLocations":["25870:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"25870:8:15"},"referencedDeclaration":3023,"src":"25870:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:15"},"returnParameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4210,"src":"25912:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:15"},"scope":4632,"src":"25845:247:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"26281:2334:15","statements":[{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4218,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26363:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4221,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"26383:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4219,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26367:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26367:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4228,"nodeType":"ExpressionStatement","src":"26363:64:15"},{"expression":{"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4229,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26503:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"26525:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4233,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26530:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4230,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26508:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26508:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4242,"nodeType":"ExpressionStatement","src":"26503:56:15"},{"expression":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4243,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26634:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"26656:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4247,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26661:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4244,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26639:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26639:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4256,"nodeType":"ExpressionStatement","src":"26634:48:15"},{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4257,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26757:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"26779:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4261,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26784:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:15","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26762:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26762:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4270,"nodeType":"ExpressionStatement","src":"26757:44:15"},{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4271,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26874:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"26896:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4275,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26901:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4277,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4272,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26879:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26879:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"26874:42:15"},{"expression":{"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"26988:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"27010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4289,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"27015:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4286,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"26993:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"26993:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4298,"nodeType":"ExpressionStatement","src":"26988:41:15"},{"AST":{"nativeSrc":"28490:119:15","nodeType":"YulBlock","src":"28490:119:15","statements":[{"nativeSrc":"28504:95:15","nodeType":"YulAssignment","src":"28504:95:15","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:15","nodeType":"YulIdentifier","src":"28512:1:15"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:15","nodeType":"YulIdentifier","src":"28524:1:15"},{"name":"x","nativeSrc":"28527:1:15","nodeType":"YulIdentifier","src":"28527:1:15"}],"functionName":{"name":"shr","nativeSrc":"28520:3:15","nodeType":"YulIdentifier","src":"28520:3:15"},"nativeSrc":"28520:9:15","nodeType":"YulFunctionCall","src":"28520:9:15"},{"kind":"number","nativeSrc":"28531:66:15","nodeType":"YulLiteral","src":"28531:66:15","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:15","nodeType":"YulIdentifier","src":"28515:4:15"},"nativeSrc":"28515:83:15","nodeType":"YulFunctionCall","src":"28515:83:15"}],"functionName":{"name":"or","nativeSrc":"28509:2:15","nodeType":"YulIdentifier","src":"28509:2:15"},"nativeSrc":"28509:90:15","nodeType":"YulFunctionCall","src":"28509:90:15"},"variableNames":[{"name":"r","nativeSrc":"28504:1:15","nodeType":"YulIdentifier","src":"28504:1:15"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":4216,"isOffset":false,"isSlot":false,"src":"28504:1:15","valueSize":1},{"declaration":4216,"isOffset":false,"isSlot":false,"src":"28512:1:15","valueSize":1},{"declaration":4216,"isOffset":false,"isSlot":false,"src":"28524:1:15","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"28527:1:15","valueSize":1}],"flags":["memory-safe"],"id":4299,"nodeType":"InlineAssembly","src":"28465:144:15"}]},"documentation":{"id":4211,"nodeType":"StructuredDocumentation","src":"26098:119:15","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:15","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"x","nameLocation":"26244:1:15","nodeType":"VariableDeclaration","scope":4301,"src":"26236:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:15"},"returnParameters":{"id":4217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"r","nameLocation":"26278:1:15","nodeType":"VariableDeclaration","scope":4301,"src":"26270:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:15"},"scope":4632,"src":"26222:2393:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4334,"nodeType":"Block","src":"28848:175:15","statements":[{"id":4333,"nodeType":"UncheckedBlock","src":"28858:159:15","statements":[{"assignments":[4313],"declarations":[{"constant":false,"id":4313,"mutability":"mutable","name":"result","nameLocation":"28890:6:15","nodeType":"VariableDeclaration","scope":4333,"src":"28882:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4317,"initialValue":{"arguments":[{"id":4315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"28904:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4314,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4301,4335],"referencedDeclaration":4301,"src":"28899:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"28931:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4322,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"28973:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":4321,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"28956:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3023_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"28991:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"29000:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4319,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"28940:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"28940:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4311,"id":4332,"nodeType":"Return","src":"28924:82:15"}]}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"28621:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4335,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:15","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"value","nameLocation":"28790:5:15","nodeType":"VariableDeclaration","scope":4335,"src":"28782:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:15","nodeType":"VariableDeclaration","scope":4335,"src":"28797:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":4306,"nodeType":"UserDefinedTypeName","pathNode":{"id":4305,"name":"Rounding","nameLocations":["28797:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"28797:8:15"},"referencedDeclaration":3023,"src":"28797:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:15"},"returnParameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4335,"src":"28839:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:15"},"scope":4632,"src":"28768:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4463,"nodeType":"Block","src":"29216:854:15","statements":[{"assignments":[4344],"declarations":[{"constant":false,"id":4344,"mutability":"mutable","name":"result","nameLocation":"29234:6:15","nodeType":"VariableDeclaration","scope":4463,"src":"29226:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4346,"initialValue":{"hexValue":"30","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:15"},{"id":4460,"nodeType":"UncheckedBlock","src":"29254:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29282:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4363,"nodeType":"IfStatement","src":"29278:103:15","trueBody":{"id":4362,"nodeType":"Block","src":"29301:80:15","statements":[{"expression":{"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29319:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4357,"nodeType":"ExpressionStatement","src":"29319:17:15"},{"expression":{"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"29354:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4361,"nodeType":"ExpressionStatement","src":"29354:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29398:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4380,"nodeType":"IfStatement","src":"29394:103:15","trueBody":{"id":4379,"nodeType":"Block","src":"29417:80:15","statements":[{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29435:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"29435:17:15"},{"expression":{"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"29470:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4378,"nodeType":"ExpressionStatement","src":"29470:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29514:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"29510:103:15","trueBody":{"id":4396,"nodeType":"Block","src":"29533:80:15","statements":[{"expression":{"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29551:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4391,"nodeType":"ExpressionStatement","src":"29551:17:15"},{"expression":{"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"29586:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4395,"nodeType":"ExpressionStatement","src":"29586:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29630:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4414,"nodeType":"IfStatement","src":"29626:100:15","trueBody":{"id":4413,"nodeType":"Block","src":"29648:78:15","statements":[{"expression":{"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"nodeType":"ExpressionStatement","src":"29666:16:15"},{"expression":{"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4409,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"29700:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4412,"nodeType":"ExpressionStatement","src":"29700:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"IfStatement","src":"29739:100:15","trueBody":{"id":4430,"nodeType":"Block","src":"29761:78:15","statements":[{"expression":{"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29779:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4425,"nodeType":"ExpressionStatement","src":"29779:16:15"},{"expression":{"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"29813:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4429,"nodeType":"ExpressionStatement","src":"29813:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29856:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4448,"nodeType":"IfStatement","src":"29852:100:15","trueBody":{"id":4447,"nodeType":"Block","src":"29874:78:15","statements":[{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29892:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4442,"nodeType":"ExpressionStatement","src":"29892:16:15"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"29926:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"29926:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"29969:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"IfStatement","src":"29965:66:15","trueBody":{"id":4458,"nodeType":"Block","src":"29987:44:15","statements":[{"expression":{"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"30005:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4457,"nodeType":"ExpressionStatement","src":"30005:11:15"}]}}]},{"expression":{"id":4461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"30057:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4342,"id":4462,"nodeType":"Return","src":"30050:13:15"}]},"documentation":{"id":4336,"nodeType":"StructuredDocumentation","src":"29029:120:15","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4464,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:15","nodeType":"FunctionDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4338,"mutability":"mutable","name":"value","nameLocation":"29177:5:15","nodeType":"VariableDeclaration","scope":4464,"src":"29169:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:15"},"returnParameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4464,"src":"29207:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:15"},"scope":4632,"src":"29154:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"30305:177:15","statements":[{"id":4496,"nodeType":"UncheckedBlock","src":"30315:161:15","statements":[{"assignments":[4476],"declarations":[{"constant":false,"id":4476,"mutability":"mutable","name":"result","nameLocation":"30347:6:15","nodeType":"VariableDeclaration","scope":4496,"src":"30339:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4480,"initialValue":{"arguments":[{"id":4478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4477,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4464,4498],"referencedDeclaration":4464,"src":"30356:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"30389:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4485,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"30431:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":4484,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"30414:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3023_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"30450:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"30459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4482,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"30398:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"30398:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4474,"id":4495,"nodeType":"Return","src":"30382:83:15"}]}]},"documentation":{"id":4465,"nodeType":"StructuredDocumentation","src":"30076:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:15","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"value","nameLocation":"30247:5:15","nodeType":"VariableDeclaration","scope":4498,"src":"30239:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:15","nodeType":"VariableDeclaration","scope":4498,"src":"30254:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":4469,"nodeType":"UserDefinedTypeName","pathNode":{"id":4468,"name":"Rounding","nameLocations":["30254:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"30254:8:15"},"referencedDeclaration":3023,"src":"30254:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:15"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"30296:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:15"},"scope":4632,"src":"30224:258:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4574,"nodeType":"Block","src":"30800:675:15","statements":[{"expression":{"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"30882:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"30902:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4507,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"30886:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"30886:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4516,"nodeType":"ExpressionStatement","src":"30882:64:15"},{"expression":{"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4517,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31022:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"31044:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4521,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31049:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"31027:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"31027:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4530,"nodeType":"ExpressionStatement","src":"31022:56:15"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4531,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31153:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"31175:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4535,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31180:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"31158:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"31158:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"31153:48:15"},{"expression":{"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4545,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31276:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4548,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"31298:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4549,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31303:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:15","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"31281:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"31281:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4558,"nodeType":"ExpressionStatement","src":"31276:44:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31426:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"31453:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4566,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"31458:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4563,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"31436:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"31436:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4505,"id":4573,"nodeType":"Return","src":"31418:50:15"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"30488:246:15","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4575,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:15","nodeType":"FunctionDefinition","parameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"x","nameLocation":"30763:1:15","nodeType":"VariableDeclaration","scope":4575,"src":"30755:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:15"},"returnParameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"r","nameLocation":"30797:1:15","nodeType":"VariableDeclaration","scope":4575,"src":"30789:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:15"},"scope":4632,"src":"30739:736:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"31712:184:15","statements":[{"id":4610,"nodeType":"UncheckedBlock","src":"31722:168:15","statements":[{"assignments":[4587],"declarations":[{"constant":false,"id":4587,"mutability":"mutable","name":"result","nameLocation":"31754:6:15","nodeType":"VariableDeclaration","scope":4610,"src":"31746:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4591,"initialValue":{"arguments":[{"id":4589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"31770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4588,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4575,4612],"referencedDeclaration":4575,"src":"31763:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"31797:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4596,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"31839:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":4595,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"31822:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3023_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4578,"src":"31873:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4593,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"31806:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"31806:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4585,"id":4609,"nodeType":"Return","src":"31790:89:15"}]}]},"documentation":{"id":4576,"nodeType":"StructuredDocumentation","src":"31481:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:15","nodeType":"FunctionDefinition","parameters":{"id":4582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"value","nameLocation":"31654:5:15","nodeType":"VariableDeclaration","scope":4612,"src":"31646:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4577,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:15","nodeType":"VariableDeclaration","scope":4612,"src":"31661:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":4580,"nodeType":"UserDefinedTypeName","pathNode":{"id":4579,"name":"Rounding","nameLocations":["31661:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"31661:8:15"},"referencedDeclaration":3023,"src":"31661:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:15"},"returnParameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"31703:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:15"},"scope":4632,"src":"31630:266:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4630,"nodeType":"Block","src":"32094:48:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4623,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"32117:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}],"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4621,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:15","typeDescriptions":{}}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4620,"id":4629,"nodeType":"Return","src":"32104:31:15"}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"31902:113:15","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4631,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:15","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:15","nodeType":"VariableDeclaration","scope":4631,"src":"32046:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"},"typeName":{"id":4615,"nodeType":"UserDefinedTypeName","pathNode":{"id":4614,"name":"Rounding","nameLocations":["32046:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3023,"src":"32046:8:15"},"referencedDeclaration":3023,"src":"32046:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3023","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:15"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4631,"src":"32088:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4618,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:15"},"scope":4632,"src":"32020:122:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4633,"src":"281:31863:15","usedErrors":[],"usedEvents":[]}],"src":"103:32042:15"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6397]},"id":6398,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4634,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4635,"nodeType":"StructuredDocumentation","src":"218:550:16","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6397,"linearizedBaseContracts":[6397],"name":"SafeCast","nameLocation":"777:8:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4636,"nodeType":"StructuredDocumentation","src":"792:68:16","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4642,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:16","nodeType":"ErrorDefinition","parameters":{"id":4641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"bits","nameLocation":"908:4:16","nodeType":"VariableDeclaration","scope":4642,"src":"902:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4637,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"value","nameLocation":"922:5:16","nodeType":"VariableDeclaration","scope":4642,"src":"914:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:16"},"src":"865:64:16"},{"documentation":{"id":4643,"nodeType":"StructuredDocumentation","src":"935:75:16","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4647,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:16","nodeType":"ErrorDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"value","nameLocation":"1056:5:16","nodeType":"VariableDeclaration","scope":4647,"src":"1049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4644,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:16"},"src":"1015:48:16"},{"documentation":{"id":4648,"nodeType":"StructuredDocumentation","src":"1069:67:16","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4654,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:16","nodeType":"ErrorDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"bits","nameLocation":"1183:4:16","nodeType":"VariableDeclaration","scope":4654,"src":"1177:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4649,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4652,"mutability":"mutable","name":"value","nameLocation":"1196:5:16","nodeType":"VariableDeclaration","scope":4654,"src":"1189:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4651,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:16"},"src":"1141:62:16"},{"documentation":{"id":4655,"nodeType":"StructuredDocumentation","src":"1209:75:16","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4659,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:16","nodeType":"ErrorDefinition","parameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"value","nameLocation":"1331:5:16","nodeType":"VariableDeclaration","scope":4659,"src":"1323:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:16"},"src":"1289:49:16"},{"body":{"id":4686,"nodeType":"Block","src":"1695:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"1709:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4669,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4668,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"1717:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:16","memberName":"max","nodeType":"MemberAccess","src":"1717:17:16","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"1705:105:16","trueBody":{"id":4679,"nodeType":"Block","src":"1736:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"1793:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4674,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"1757:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4678,"nodeType":"RevertStatement","src":"1750:49:16"}]}},{"expression":{"arguments":[{"id":4683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"1834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4681,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:16","typeDescriptions":{}}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4666,"id":4685,"nodeType":"Return","src":"1819:21:16"}]},"documentation":{"id":4660,"nodeType":"StructuredDocumentation","src":"1344:280:16","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4687,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:16","nodeType":"FunctionDefinition","parameters":{"id":4663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"value","nameLocation":"1656:5:16","nodeType":"VariableDeclaration","scope":4687,"src":"1648:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:16"},"returnParameters":{"id":4666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4687,"src":"1686:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4664,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:16","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:16"},"scope":6397,"src":"1629:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4714,"nodeType":"Block","src":"2204:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"2218:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4697,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4696,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2226:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:16","memberName":"max","nodeType":"MemberAccess","src":"2226:17:16","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4708,"nodeType":"IfStatement","src":"2214:105:16","trueBody":{"id":4707,"nodeType":"Block","src":"2245:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:16","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"2302:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2266:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4706,"nodeType":"RevertStatement","src":"2259:49:16"}]}},{"expression":{"arguments":[{"id":4711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"2343:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4709,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:16","typeDescriptions":{}}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4694,"id":4713,"nodeType":"Return","src":"2328:21:16"}]},"documentation":{"id":4688,"nodeType":"StructuredDocumentation","src":"1853:280:16","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4715,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:16","nodeType":"FunctionDefinition","parameters":{"id":4691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4690,"mutability":"mutable","name":"value","nameLocation":"2165:5:16","nodeType":"VariableDeclaration","scope":4715,"src":"2157:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4689,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:16"},"returnParameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4715,"src":"2195:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4692,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:16","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:16"},"scope":6397,"src":"2138:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4742,"nodeType":"Block","src":"2713:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"2727:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4725,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4724,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"2735:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:16","memberName":"max","nodeType":"MemberAccess","src":"2735:17:16","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4736,"nodeType":"IfStatement","src":"2723:105:16","trueBody":{"id":4735,"nodeType":"Block","src":"2754:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"2811:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4730,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"2775:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4734,"nodeType":"RevertStatement","src":"2768:49:16"}]}},{"expression":{"arguments":[{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"2852:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4737,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:16","typeDescriptions":{}}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4722,"id":4741,"nodeType":"Return","src":"2837:21:16"}]},"documentation":{"id":4716,"nodeType":"StructuredDocumentation","src":"2362:280:16","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4743,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:16","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"value","nameLocation":"2674:5:16","nodeType":"VariableDeclaration","scope":4743,"src":"2666:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4717,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:16"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4743,"src":"2704:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4720,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:16","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:16"},"scope":6397,"src":"2647:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4770,"nodeType":"Block","src":"3222:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"3236:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4753,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3244:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:16","memberName":"max","nodeType":"MemberAccess","src":"3244:17:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4764,"nodeType":"IfStatement","src":"3232:105:16","trueBody":{"id":4763,"nodeType":"Block","src":"3263:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:16","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"3320:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"3284:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4762,"nodeType":"RevertStatement","src":"3277:49:16"}]}},{"expression":{"arguments":[{"id":4767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"3361:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4765,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:16","typeDescriptions":{}}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4750,"id":4769,"nodeType":"Return","src":"3346:21:16"}]},"documentation":{"id":4744,"nodeType":"StructuredDocumentation","src":"2871:280:16","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4771,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:16","nodeType":"FunctionDefinition","parameters":{"id":4747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4746,"mutability":"mutable","name":"value","nameLocation":"3183:5:16","nodeType":"VariableDeclaration","scope":4771,"src":"3175:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:16"},"returnParameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4771,"src":"3213:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4748,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:16"},"scope":6397,"src":"3156:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4798,"nodeType":"Block","src":"3731:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4781,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"3753:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:16","memberName":"max","nodeType":"MemberAccess","src":"3753:17:16","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4792,"nodeType":"IfStatement","src":"3741:105:16","trueBody":{"id":4791,"nodeType":"Block","src":"3772:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:16","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"3829:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4786,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"3793:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4790,"nodeType":"RevertStatement","src":"3786:49:16"}]}},{"expression":{"arguments":[{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"3870:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4793,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:16","typeDescriptions":{}}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4778,"id":4797,"nodeType":"Return","src":"3855:21:16"}]},"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"3380:280:16","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4799,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:16","nodeType":"FunctionDefinition","parameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"value","nameLocation":"3692:5:16","nodeType":"VariableDeclaration","scope":4799,"src":"3684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:16"},"returnParameters":{"id":4778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4799,"src":"3722:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4776,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:16","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:16"},"scope":6397,"src":"3665:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"4240:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"4254:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4809,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4808,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4262:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:16","memberName":"max","nodeType":"MemberAccess","src":"4262:17:16","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4820,"nodeType":"IfStatement","src":"4250:105:16","trueBody":{"id":4819,"nodeType":"Block","src":"4281:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"4338:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4814,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"4302:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4818,"nodeType":"RevertStatement","src":"4295:49:16"}]}},{"expression":{"arguments":[{"id":4823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"4379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4821,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:16","typeDescriptions":{}}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4806,"id":4825,"nodeType":"Return","src":"4364:21:16"}]},"documentation":{"id":4800,"nodeType":"StructuredDocumentation","src":"3889:280:16","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:16","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4802,"mutability":"mutable","name":"value","nameLocation":"4201:5:16","nodeType":"VariableDeclaration","scope":4827,"src":"4193:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:16"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4827,"src":"4231:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4804,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:16","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:16"},"scope":6397,"src":"4174:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4854,"nodeType":"Block","src":"4749:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"4763:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4837,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"4771:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:16","memberName":"max","nodeType":"MemberAccess","src":"4771:17:16","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4848,"nodeType":"IfStatement","src":"4759:105:16","trueBody":{"id":4847,"nodeType":"Block","src":"4790:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"4847:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4842,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"4811:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4846,"nodeType":"RevertStatement","src":"4804:49:16"}]}},{"expression":{"arguments":[{"id":4851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"4888:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4849,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:16","typeDescriptions":{}}},"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4834,"id":4853,"nodeType":"Return","src":"4873:21:16"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"4398:280:16","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4855,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:16","nodeType":"FunctionDefinition","parameters":{"id":4831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"value","nameLocation":"4710:5:16","nodeType":"VariableDeclaration","scope":4855,"src":"4702:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:16"},"returnParameters":{"id":4834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4855,"src":"4740:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4832,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:16","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:16"},"scope":6397,"src":"4683:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4882,"nodeType":"Block","src":"5258:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5272:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4865,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4864,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5280:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:16","memberName":"max","nodeType":"MemberAccess","src":"5280:17:16","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4876,"nodeType":"IfStatement","src":"5268:105:16","trueBody":{"id":4875,"nodeType":"Block","src":"5299:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5356:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4870,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"5320:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4874,"nodeType":"RevertStatement","src":"5313:49:16"}]}},{"expression":{"arguments":[{"id":4879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4858,"src":"5397:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4877,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:16","typeDescriptions":{}}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4862,"id":4881,"nodeType":"Return","src":"5382:21:16"}]},"documentation":{"id":4856,"nodeType":"StructuredDocumentation","src":"4907:280:16","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4883,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:16","nodeType":"FunctionDefinition","parameters":{"id":4859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"value","nameLocation":"5219:5:16","nodeType":"VariableDeclaration","scope":4883,"src":"5211:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4857,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:16"},"returnParameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4883,"src":"5249:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4860,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:16","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:16"},"scope":6397,"src":"5192:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4910,"nodeType":"Block","src":"5767:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"5781:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4893,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4892,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:16","memberName":"max","nodeType":"MemberAccess","src":"5789:17:16","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4904,"nodeType":"IfStatement","src":"5777:105:16","trueBody":{"id":4903,"nodeType":"Block","src":"5808:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:16","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"5865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4898,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"5829:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4902,"nodeType":"RevertStatement","src":"5822:49:16"}]}},{"expression":{"arguments":[{"id":4907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"5906:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4905,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:16","typeDescriptions":{}}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4890,"id":4909,"nodeType":"Return","src":"5891:21:16"}]},"documentation":{"id":4884,"nodeType":"StructuredDocumentation","src":"5416:280:16","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4911,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:16","nodeType":"FunctionDefinition","parameters":{"id":4887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4886,"mutability":"mutable","name":"value","nameLocation":"5728:5:16","nodeType":"VariableDeclaration","scope":4911,"src":"5720:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:16"},"returnParameters":{"id":4890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4911,"src":"5758:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4888,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:16","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:16"},"scope":6397,"src":"5701:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4938,"nodeType":"Block","src":"6276:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"6290:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4921,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4920,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6298:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:16","memberName":"max","nodeType":"MemberAccess","src":"6298:17:16","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"6286:105:16","trueBody":{"id":4931,"nodeType":"Block","src":"6317:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:16","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"6374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4926,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"6338:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4930,"nodeType":"RevertStatement","src":"6331:49:16"}]}},{"expression":{"arguments":[{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4914,"src":"6415:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4933,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:16","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4918,"id":4937,"nodeType":"Return","src":"6400:21:16"}]},"documentation":{"id":4912,"nodeType":"StructuredDocumentation","src":"5925:280:16","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4939,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:16","nodeType":"FunctionDefinition","parameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"value","nameLocation":"6237:5:16","nodeType":"VariableDeclaration","scope":4939,"src":"6229:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:16"},"returnParameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4939,"src":"6267:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4916,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:16","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:16"},"scope":6397,"src":"6210:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"6785:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"6799:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4949,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4948,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"6807:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:16","memberName":"max","nodeType":"MemberAccess","src":"6807:17:16","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4960,"nodeType":"IfStatement","src":"6795:105:16","trueBody":{"id":4959,"nodeType":"Block","src":"6826:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"6883:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"6847:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4958,"nodeType":"RevertStatement","src":"6840:49:16"}]}},{"expression":{"arguments":[{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4942,"src":"6924:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4961,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:16","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4946,"id":4965,"nodeType":"Return","src":"6909:21:16"}]},"documentation":{"id":4940,"nodeType":"StructuredDocumentation","src":"6434:280:16","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:16","nodeType":"FunctionDefinition","parameters":{"id":4943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4942,"mutability":"mutable","name":"value","nameLocation":"6746:5:16","nodeType":"VariableDeclaration","scope":4967,"src":"6738:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4941,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:16"},"returnParameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"6776:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4944,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:16","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:16"},"scope":6397,"src":"6719:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"7294:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"7308:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4977,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4976,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7316:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:16","memberName":"max","nodeType":"MemberAccess","src":"7316:17:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4988,"nodeType":"IfStatement","src":"7304:105:16","trueBody":{"id":4987,"nodeType":"Block","src":"7335:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"7392:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4982,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"7356:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4986,"nodeType":"RevertStatement","src":"7349:49:16"}]}},{"expression":{"arguments":[{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"7433:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4989,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:16","typeDescriptions":{}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4974,"id":4993,"nodeType":"Return","src":"7418:21:16"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"6943:280:16","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:16","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"7255:5:16","nodeType":"VariableDeclaration","scope":4995,"src":"7247:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:16"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"7285:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4972,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:16"},"scope":6397,"src":"7228:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5022,"nodeType":"Block","src":"7803:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7817:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5005,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5004,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"7825:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:16","memberName":"max","nodeType":"MemberAccess","src":"7825:17:16","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5016,"nodeType":"IfStatement","src":"7813:105:16","trueBody":{"id":5015,"nodeType":"Block","src":"7844:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:16","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7901:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5010,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"7865:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5014,"nodeType":"RevertStatement","src":"7858:49:16"}]}},{"expression":{"arguments":[{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"7942:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5017,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:16","typeDescriptions":{}}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5002,"id":5021,"nodeType":"Return","src":"7927:21:16"}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"7452:280:16","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5023,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:16","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"7764:5:16","nodeType":"VariableDeclaration","scope":5023,"src":"7756:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:16"},"returnParameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5023,"src":"7794:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5000,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:16","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:16"},"scope":6397,"src":"7737:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"8312:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"8326:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5033,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5032,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8334:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:16","memberName":"max","nodeType":"MemberAccess","src":"8334:17:16","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5044,"nodeType":"IfStatement","src":"8322:105:16","trueBody":{"id":5043,"nodeType":"Block","src":"8353:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:16","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"8410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5038,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"8374:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5042,"nodeType":"RevertStatement","src":"8367:49:16"}]}},{"expression":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5026,"src":"8451:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5045,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:16","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5030,"id":5049,"nodeType":"Return","src":"8436:21:16"}]},"documentation":{"id":5024,"nodeType":"StructuredDocumentation","src":"7961:280:16","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:16","nodeType":"FunctionDefinition","parameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"value","nameLocation":"8273:5:16","nodeType":"VariableDeclaration","scope":5051,"src":"8265:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:16"},"returnParameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5051,"src":"8303:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5028,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:16","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:16"},"scope":6397,"src":"8246:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5078,"nodeType":"Block","src":"8821:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"8835:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5061,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5060,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"8843:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:16","memberName":"max","nodeType":"MemberAccess","src":"8843:17:16","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5072,"nodeType":"IfStatement","src":"8831:105:16","trueBody":{"id":5071,"nodeType":"Block","src":"8862:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:16","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"8919:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5066,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"8883:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5070,"nodeType":"RevertStatement","src":"8876:49:16"}]}},{"expression":{"arguments":[{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"8960:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5073,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:16","typeDescriptions":{}}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5058,"id":5077,"nodeType":"Return","src":"8945:21:16"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"8470:280:16","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5079,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:16","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"8782:5:16","nodeType":"VariableDeclaration","scope":5079,"src":"8774:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:16"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5079,"src":"8812:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5056,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:16","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:16"},"scope":6397,"src":"8755:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"9330:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"9344:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5089,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5088,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9352:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:16","memberName":"max","nodeType":"MemberAccess","src":"9352:17:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"nodeType":"IfStatement","src":"9340:105:16","trueBody":{"id":5099,"nodeType":"Block","src":"9371:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"9428:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"9392:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5098,"nodeType":"RevertStatement","src":"9385:49:16"}]}},{"expression":{"arguments":[{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"9469:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5101,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:16","typeDescriptions":{}}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5086,"id":5105,"nodeType":"Return","src":"9454:21:16"}]},"documentation":{"id":5080,"nodeType":"StructuredDocumentation","src":"8979:280:16","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:16","nodeType":"FunctionDefinition","parameters":{"id":5083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5082,"mutability":"mutable","name":"value","nameLocation":"9291:5:16","nodeType":"VariableDeclaration","scope":5107,"src":"9283:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:16"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"9321:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5084,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:16"},"scope":6397,"src":"9264:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5134,"nodeType":"Block","src":"9839:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"9853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5117,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5116,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"9861:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:16","memberName":"max","nodeType":"MemberAccess","src":"9861:17:16","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5128,"nodeType":"IfStatement","src":"9849:105:16","trueBody":{"id":5127,"nodeType":"Block","src":"9880:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"9937:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"9901:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5126,"nodeType":"RevertStatement","src":"9894:49:16"}]}},{"expression":{"arguments":[{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"9978:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5129,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:16","typeDescriptions":{}}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5114,"id":5133,"nodeType":"Return","src":"9963:21:16"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"9488:280:16","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:16","nodeType":"FunctionDefinition","parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"value","nameLocation":"9800:5:16","nodeType":"VariableDeclaration","scope":5135,"src":"9792:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:16"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"9830:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5112,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:16","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:16"},"scope":6397,"src":"9773:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5162,"nodeType":"Block","src":"10348:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"10362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5145,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5144,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10370:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:16","memberName":"max","nodeType":"MemberAccess","src":"10370:17:16","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5156,"nodeType":"IfStatement","src":"10358:105:16","trueBody":{"id":5155,"nodeType":"Block","src":"10389:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:16","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"10446:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"10410:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5154,"nodeType":"RevertStatement","src":"10403:49:16"}]}},{"expression":{"arguments":[{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"10487:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5157,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:16","typeDescriptions":{}}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5142,"id":5161,"nodeType":"Return","src":"10472:21:16"}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"9997:280:16","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5163,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:16","nodeType":"FunctionDefinition","parameters":{"id":5139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"value","nameLocation":"10309:5:16","nodeType":"VariableDeclaration","scope":5163,"src":"10301:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5137,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:16"},"returnParameters":{"id":5142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5163,"src":"10339:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5140,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:16","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:16"},"scope":6397,"src":"10282:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5190,"nodeType":"Block","src":"10857:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"10871:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5173,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5172,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"10879:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:16","memberName":"max","nodeType":"MemberAccess","src":"10879:17:16","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5184,"nodeType":"IfStatement","src":"10867:105:16","trueBody":{"id":5183,"nodeType":"Block","src":"10898:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"10955:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5178,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"10919:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5182,"nodeType":"RevertStatement","src":"10912:49:16"}]}},{"expression":{"arguments":[{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"10996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5185,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:16","typeDescriptions":{}}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5170,"id":5189,"nodeType":"Return","src":"10981:21:16"}]},"documentation":{"id":5164,"nodeType":"StructuredDocumentation","src":"10506:280:16","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5191,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:16","nodeType":"FunctionDefinition","parameters":{"id":5167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5166,"mutability":"mutable","name":"value","nameLocation":"10818:5:16","nodeType":"VariableDeclaration","scope":5191,"src":"10810:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5165,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:16"},"returnParameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5191,"src":"10848:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5168,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:16","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:16"},"scope":6397,"src":"10791:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5218,"nodeType":"Block","src":"11360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"11374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5201,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5200,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:16","memberName":"max","nodeType":"MemberAccess","src":"11382:16:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5212,"nodeType":"IfStatement","src":"11370:103:16","trueBody":{"id":5211,"nodeType":"Block","src":"11400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"11456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"11421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5210,"nodeType":"RevertStatement","src":"11414:48:16"}]}},{"expression":{"arguments":[{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"11496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5213,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:16","typeDescriptions":{}}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5198,"id":5217,"nodeType":"Return","src":"11482:20:16"}]},"documentation":{"id":5192,"nodeType":"StructuredDocumentation","src":"11015:276:16","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5219,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"value","nameLocation":"11322:5:16","nodeType":"VariableDeclaration","scope":5219,"src":"11314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:16"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5219,"src":"11352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5196,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:16"},"scope":6397,"src":"11296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5246,"nodeType":"Block","src":"11860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"11874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5229,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5228,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"11882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:16","memberName":"max","nodeType":"MemberAccess","src":"11882:16:16","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5240,"nodeType":"IfStatement","src":"11870:103:16","trueBody":{"id":5239,"nodeType":"Block","src":"11900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"11956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5234,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"11921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5238,"nodeType":"RevertStatement","src":"11914:48:16"}]}},{"expression":{"arguments":[{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"11996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5241,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:16","typeDescriptions":{}}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5226,"id":5245,"nodeType":"Return","src":"11982:20:16"}]},"documentation":{"id":5220,"nodeType":"StructuredDocumentation","src":"11515:276:16","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5247,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5222,"mutability":"mutable","name":"value","nameLocation":"11822:5:16","nodeType":"VariableDeclaration","scope":5247,"src":"11814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5221,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:16"},"returnParameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5247,"src":"11852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5224,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:16","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:16"},"scope":6397,"src":"11796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5274,"nodeType":"Block","src":"12360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"12374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5257,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5256,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:16","memberName":"max","nodeType":"MemberAccess","src":"12382:16:16","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5268,"nodeType":"IfStatement","src":"12370:103:16","trueBody":{"id":5267,"nodeType":"Block","src":"12400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"12456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5262,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"12421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5266,"nodeType":"RevertStatement","src":"12414:48:16"}]}},{"expression":{"arguments":[{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"12496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5269,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:16","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5254,"id":5273,"nodeType":"Return","src":"12482:20:16"}]},"documentation":{"id":5248,"nodeType":"StructuredDocumentation","src":"12015:276:16","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5275,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"value","nameLocation":"12322:5:16","nodeType":"VariableDeclaration","scope":5275,"src":"12314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5249,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:16"},"returnParameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5275,"src":"12352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5252,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:16","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:16"},"scope":6397,"src":"12296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5302,"nodeType":"Block","src":"12860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"12874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5285,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5284,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"12882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:16","memberName":"max","nodeType":"MemberAccess","src":"12882:16:16","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5296,"nodeType":"IfStatement","src":"12870:103:16","trueBody":{"id":5295,"nodeType":"Block","src":"12900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"12956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5290,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"12921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5294,"nodeType":"RevertStatement","src":"12914:48:16"}]}},{"expression":{"arguments":[{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5278,"src":"12996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5297,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:16","typeDescriptions":{}}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5282,"id":5301,"nodeType":"Return","src":"12982:20:16"}]},"documentation":{"id":5276,"nodeType":"StructuredDocumentation","src":"12515:276:16","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5303,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"value","nameLocation":"12822:5:16","nodeType":"VariableDeclaration","scope":5303,"src":"12814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5277,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:16"},"returnParameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5303,"src":"12852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5280,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:16","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:16"},"scope":6397,"src":"12796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5330,"nodeType":"Block","src":"13360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"13374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5313,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5312,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:16","memberName":"max","nodeType":"MemberAccess","src":"13382:16:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5324,"nodeType":"IfStatement","src":"13370:103:16","trueBody":{"id":5323,"nodeType":"Block","src":"13400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"13456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5318,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"13421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5322,"nodeType":"RevertStatement","src":"13414:48:16"}]}},{"expression":{"arguments":[{"id":5327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5306,"src":"13496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5325,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:16","typeDescriptions":{}}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5310,"id":5329,"nodeType":"Return","src":"13482:20:16"}]},"documentation":{"id":5304,"nodeType":"StructuredDocumentation","src":"13015:276:16","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5331,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5306,"mutability":"mutable","name":"value","nameLocation":"13322:5:16","nodeType":"VariableDeclaration","scope":5331,"src":"13314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5305,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:16"},"returnParameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5331,"src":"13352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5308,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:16"},"scope":6397,"src":"13296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5358,"nodeType":"Block","src":"13860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"13874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5341,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5340,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"13882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:16","memberName":"max","nodeType":"MemberAccess","src":"13882:16:16","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5352,"nodeType":"IfStatement","src":"13870:103:16","trueBody":{"id":5351,"nodeType":"Block","src":"13900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"13956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5346,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"13921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5350,"nodeType":"RevertStatement","src":"13914:48:16"}]}},{"expression":{"arguments":[{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5334,"src":"13996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5353,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:16","typeDescriptions":{}}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5338,"id":5357,"nodeType":"Return","src":"13982:20:16"}]},"documentation":{"id":5332,"nodeType":"StructuredDocumentation","src":"13515:276:16","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5359,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5334,"mutability":"mutable","name":"value","nameLocation":"13822:5:16","nodeType":"VariableDeclaration","scope":5359,"src":"13814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5333,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:16"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5359,"src":"13852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5336,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:16","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:16"},"scope":6397,"src":"13796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5386,"nodeType":"Block","src":"14360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5369,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5368,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:16","memberName":"max","nodeType":"MemberAccess","src":"14382:16:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5380,"nodeType":"IfStatement","src":"14370:103:16","trueBody":{"id":5379,"nodeType":"Block","src":"14400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5374,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"14421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5378,"nodeType":"RevertStatement","src":"14414:48:16"}]}},{"expression":{"arguments":[{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"14496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5381,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:16","typeDescriptions":{}}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5366,"id":5385,"nodeType":"Return","src":"14482:20:16"}]},"documentation":{"id":5360,"nodeType":"StructuredDocumentation","src":"14015:276:16","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5387,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5362,"mutability":"mutable","name":"value","nameLocation":"14322:5:16","nodeType":"VariableDeclaration","scope":5387,"src":"14314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:16"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5387,"src":"14352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5364,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:16"},"scope":6397,"src":"14296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5414,"nodeType":"Block","src":"14860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"14874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5397,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5396,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"14882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:16","memberName":"max","nodeType":"MemberAccess","src":"14882:16:16","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"14870:103:16","trueBody":{"id":5407,"nodeType":"Block","src":"14900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"14956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"14921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5406,"nodeType":"RevertStatement","src":"14914:48:16"}]}},{"expression":{"arguments":[{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5390,"src":"14996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5409,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:16","typeDescriptions":{}}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5394,"id":5413,"nodeType":"Return","src":"14982:20:16"}]},"documentation":{"id":5388,"nodeType":"StructuredDocumentation","src":"14515:276:16","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5415,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5390,"mutability":"mutable","name":"value","nameLocation":"14822:5:16","nodeType":"VariableDeclaration","scope":5415,"src":"14814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5389,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:16"},"returnParameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5415,"src":"14852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5392,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:16","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:16"},"scope":6397,"src":"14796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5442,"nodeType":"Block","src":"15360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"15374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5425,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5424,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:16","memberName":"max","nodeType":"MemberAccess","src":"15382:16:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5436,"nodeType":"IfStatement","src":"15370:103:16","trueBody":{"id":5435,"nodeType":"Block","src":"15400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"15456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5430,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"15421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5434,"nodeType":"RevertStatement","src":"15414:48:16"}]}},{"expression":{"arguments":[{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"15496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5437,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:16","typeDescriptions":{}}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5422,"id":5441,"nodeType":"Return","src":"15482:20:16"}]},"documentation":{"id":5416,"nodeType":"StructuredDocumentation","src":"15015:276:16","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5418,"mutability":"mutable","name":"value","nameLocation":"15322:5:16","nodeType":"VariableDeclaration","scope":5443,"src":"15314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:16"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5443,"src":"15352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5420,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:16"},"scope":6397,"src":"15296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5470,"nodeType":"Block","src":"15860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"15874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5453,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5452,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"15882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:16","memberName":"max","nodeType":"MemberAccess","src":"15882:16:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5464,"nodeType":"IfStatement","src":"15870:103:16","trueBody":{"id":5463,"nodeType":"Block","src":"15900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"15956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5458,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"15921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5462,"nodeType":"RevertStatement","src":"15914:48:16"}]}},{"expression":{"arguments":[{"id":5467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"15996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5465,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:16","typeDescriptions":{}}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5450,"id":5469,"nodeType":"Return","src":"15982:20:16"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"15515:276:16","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5471,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"value","nameLocation":"15822:5:16","nodeType":"VariableDeclaration","scope":5471,"src":"15814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:16"},"returnParameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5471,"src":"15852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5448,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:16"},"scope":6397,"src":"15796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5498,"nodeType":"Block","src":"16360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"16374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5481,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:16","memberName":"max","nodeType":"MemberAccess","src":"16382:16:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5492,"nodeType":"IfStatement","src":"16370:103:16","trueBody":{"id":5491,"nodeType":"Block","src":"16400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"16456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5486,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"16421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5490,"nodeType":"RevertStatement","src":"16414:48:16"}]}},{"expression":{"arguments":[{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5474,"src":"16496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5493,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:16","typeDescriptions":{}}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5478,"id":5497,"nodeType":"Return","src":"16482:20:16"}]},"documentation":{"id":5472,"nodeType":"StructuredDocumentation","src":"16015:276:16","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5499,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5474,"mutability":"mutable","name":"value","nameLocation":"16322:5:16","nodeType":"VariableDeclaration","scope":5499,"src":"16314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5473,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:16"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5499,"src":"16352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5476,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:16"},"scope":6397,"src":"16296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"16854:146:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"16868:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5509,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5508,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"16876:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:16","memberName":"max","nodeType":"MemberAccess","src":"16876:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"16864:101:16","trueBody":{"id":5519,"nodeType":"Block","src":"16893:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"16948:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5514,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"16914:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5518,"nodeType":"RevertStatement","src":"16907:47:16"}]}},{"expression":{"arguments":[{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"16987:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5521,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:16","typeDescriptions":{}}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5506,"id":5525,"nodeType":"Return","src":"16974:19:16"}]},"documentation":{"id":5500,"nodeType":"StructuredDocumentation","src":"16515:272:16","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:16","nodeType":"FunctionDefinition","parameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"value","nameLocation":"16817:5:16","nodeType":"VariableDeclaration","scope":5527,"src":"16809:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:16"},"returnParameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5527,"src":"16847:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5504,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:16"},"scope":6397,"src":"16792:208:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5549,"nodeType":"Block","src":"17236:128:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"17250:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"IfStatement","src":"17246:81:16","trueBody":{"id":5542,"nodeType":"Block","src":"17261:66:16","statements":[{"errorCall":{"arguments":[{"id":5539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"17310:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5538,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"17282:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5541,"nodeType":"RevertStatement","src":"17275:41:16"}]}},{"expression":{"arguments":[{"id":5546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"17351:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:16","typeDescriptions":{}}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5534,"id":5548,"nodeType":"Return","src":"17336:21:16"}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"17006:160:16","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:16","nodeType":"FunctionDefinition","parameters":{"id":5531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"value","nameLocation":"17197:5:16","nodeType":"VariableDeclaration","scope":5550,"src":"17190:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5529,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:16"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5550,"src":"17227:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:16"},"scope":6397,"src":"17171:193:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5575,"nodeType":"Block","src":"17761:150:16","statements":[{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5558,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"17771:10:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"17791:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5559,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:16","typeDescriptions":{}}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5564,"nodeType":"ExpressionStatement","src":"17771:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"17811:10:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"17825:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"IfStatement","src":"17807:98:16","trueBody":{"id":5573,"nodeType":"Block","src":"17832:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5553,"src":"17888:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5568,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"17853:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5572,"nodeType":"RevertStatement","src":"17846:48:16"}]}}]},"documentation":{"id":5551,"nodeType":"StructuredDocumentation","src":"17370:312:16","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5576,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:16","nodeType":"FunctionDefinition","parameters":{"id":5554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5553,"mutability":"mutable","name":"value","nameLocation":"17712:5:16","nodeType":"VariableDeclaration","scope":5576,"src":"17705:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5552,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:16"},"returnParameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:16","nodeType":"VariableDeclaration","scope":5576,"src":"17742:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5555,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:16"},"scope":6397,"src":"17687:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5601,"nodeType":"Block","src":"18308:150:16","statements":[{"expression":{"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5584,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"18318:10:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"18338:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5585,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:16","typeDescriptions":{}}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5590,"nodeType":"ExpressionStatement","src":"18318:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5582,"src":"18358:10:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"18372:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5600,"nodeType":"IfStatement","src":"18354:98:16","trueBody":{"id":5599,"nodeType":"Block","src":"18379:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:16","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"18435:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5594,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"18400:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5598,"nodeType":"RevertStatement","src":"18393:48:16"}]}}]},"documentation":{"id":5577,"nodeType":"StructuredDocumentation","src":"17917:312:16","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5602,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:16","nodeType":"FunctionDefinition","parameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"value","nameLocation":"18259:5:16","nodeType":"VariableDeclaration","scope":5602,"src":"18252:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5578,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:16"},"returnParameters":{"id":5583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5582,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:16","nodeType":"VariableDeclaration","scope":5602,"src":"18289:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5581,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:16"},"scope":6397,"src":"18234:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5627,"nodeType":"Block","src":"18855:150:16","statements":[{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5610,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"18865:10:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"18885:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5611,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:16","typeDescriptions":{}}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5616,"nodeType":"ExpressionStatement","src":"18865:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5608,"src":"18905:10:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"18919:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5626,"nodeType":"IfStatement","src":"18901:98:16","trueBody":{"id":5625,"nodeType":"Block","src":"18926:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:16","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5605,"src":"18982:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5620,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"18947:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5624,"nodeType":"RevertStatement","src":"18940:48:16"}]}}]},"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"18464:312:16","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:16","nodeType":"FunctionDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"value","nameLocation":"18806:5:16","nodeType":"VariableDeclaration","scope":5628,"src":"18799:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5604,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:16"},"returnParameters":{"id":5609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5608,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:16","nodeType":"VariableDeclaration","scope":5628,"src":"18836:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5607,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:16"},"scope":6397,"src":"18781:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5653,"nodeType":"Block","src":"19402:150:16","statements":[{"expression":{"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5636,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"19412:10:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"19432:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5637,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:16","typeDescriptions":{}}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5642,"nodeType":"ExpressionStatement","src":"19412:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"19452:10:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"19466:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5652,"nodeType":"IfStatement","src":"19448:98:16","trueBody":{"id":5651,"nodeType":"Block","src":"19473:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:16","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"19529:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5646,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"19494:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5650,"nodeType":"RevertStatement","src":"19487:48:16"}]}}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"19011:312:16","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:16","nodeType":"FunctionDefinition","parameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"value","nameLocation":"19353:5:16","nodeType":"VariableDeclaration","scope":5654,"src":"19346:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5630,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:16"},"returnParameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5634,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:16","nodeType":"VariableDeclaration","scope":5654,"src":"19383:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5633,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:16"},"scope":6397,"src":"19328:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5679,"nodeType":"Block","src":"19949:150:16","statements":[{"expression":{"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"19959:10:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"19979:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5663,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:16","typeDescriptions":{}}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5668,"nodeType":"ExpressionStatement","src":"19959:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"19999:10:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"20013:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5678,"nodeType":"IfStatement","src":"19995:98:16","trueBody":{"id":5677,"nodeType":"Block","src":"20020:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:16","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"20076:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5672,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"20041:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5676,"nodeType":"RevertStatement","src":"20034:48:16"}]}}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"19558:312:16","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5680,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:16","nodeType":"FunctionDefinition","parameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"value","nameLocation":"19900:5:16","nodeType":"VariableDeclaration","scope":5680,"src":"19893:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5656,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:16"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5660,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:16","nodeType":"VariableDeclaration","scope":5680,"src":"19930:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5659,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:16"},"scope":6397,"src":"19875:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"20496:150:16","statements":[{"expression":{"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5688,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"20506:10:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"20526:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5689,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:16","typeDescriptions":{}}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5694,"nodeType":"ExpressionStatement","src":"20506:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"20546:10:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"20560:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5704,"nodeType":"IfStatement","src":"20542:98:16","trueBody":{"id":5703,"nodeType":"Block","src":"20567:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"20623:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5698,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"20588:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5702,"nodeType":"RevertStatement","src":"20581:48:16"}]}}]},"documentation":{"id":5681,"nodeType":"StructuredDocumentation","src":"20105:312:16","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:16","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"value","nameLocation":"20447:5:16","nodeType":"VariableDeclaration","scope":5706,"src":"20440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5682,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:16"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:16","nodeType":"VariableDeclaration","scope":5706,"src":"20477:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5685,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:16"},"scope":6397,"src":"20422:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5731,"nodeType":"Block","src":"21043:150:16","statements":[{"expression":{"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5714,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"21053:10:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"21073:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5715,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:16","typeDescriptions":{}}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5720,"nodeType":"ExpressionStatement","src":"21053:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"21093:10:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"21107:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5730,"nodeType":"IfStatement","src":"21089:98:16","trueBody":{"id":5729,"nodeType":"Block","src":"21114:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"21170:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5724,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"21135:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5728,"nodeType":"RevertStatement","src":"21128:48:16"}]}}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"20652:312:16","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5732,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:16","nodeType":"FunctionDefinition","parameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"value","nameLocation":"20994:5:16","nodeType":"VariableDeclaration","scope":5732,"src":"20987:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5708,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:16"},"returnParameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5712,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:16","nodeType":"VariableDeclaration","scope":5732,"src":"21024:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5711,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:16"},"scope":6397,"src":"20969:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5757,"nodeType":"Block","src":"21590:150:16","statements":[{"expression":{"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5740,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"21600:10:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"21620:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5741,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:16","typeDescriptions":{}}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5746,"nodeType":"ExpressionStatement","src":"21600:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"21640:10:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"21654:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5756,"nodeType":"IfStatement","src":"21636:98:16","trueBody":{"id":5755,"nodeType":"Block","src":"21661:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"21717:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5750,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"21682:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5754,"nodeType":"RevertStatement","src":"21675:48:16"}]}}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"21199:312:16","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5758,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:16","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"value","nameLocation":"21541:5:16","nodeType":"VariableDeclaration","scope":5758,"src":"21534:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5734,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:16"},"returnParameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:16","nodeType":"VariableDeclaration","scope":5758,"src":"21571:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5737,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:16"},"scope":6397,"src":"21516:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5783,"nodeType":"Block","src":"22137:150:16","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"22147:10:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"22167:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5767,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:16","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5772,"nodeType":"ExpressionStatement","src":"22147:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"22187:10:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"22201:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5782,"nodeType":"IfStatement","src":"22183:98:16","trueBody":{"id":5781,"nodeType":"Block","src":"22208:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:16","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"22264:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5776,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"22229:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5780,"nodeType":"RevertStatement","src":"22222:48:16"}]}}]},"documentation":{"id":5759,"nodeType":"StructuredDocumentation","src":"21746:312:16","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5784,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:16","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"value","nameLocation":"22088:5:16","nodeType":"VariableDeclaration","scope":5784,"src":"22081:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5760,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:16"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:16","nodeType":"VariableDeclaration","scope":5784,"src":"22118:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5763,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:16"},"scope":6397,"src":"22063:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5809,"nodeType":"Block","src":"22684:150:16","statements":[{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"22694:10:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"22714:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5793,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:16","typeDescriptions":{}}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5798,"nodeType":"ExpressionStatement","src":"22694:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"22734:10:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"22748:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5808,"nodeType":"IfStatement","src":"22730:98:16","trueBody":{"id":5807,"nodeType":"Block","src":"22755:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"22811:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5802,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"22776:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5806,"nodeType":"RevertStatement","src":"22769:48:16"}]}}]},"documentation":{"id":5785,"nodeType":"StructuredDocumentation","src":"22293:312:16","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:16","nodeType":"FunctionDefinition","parameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"value","nameLocation":"22635:5:16","nodeType":"VariableDeclaration","scope":5810,"src":"22628:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5786,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:16"},"returnParameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:16","nodeType":"VariableDeclaration","scope":5810,"src":"22665:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5789,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:16"},"scope":6397,"src":"22610:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5835,"nodeType":"Block","src":"23231:150:16","statements":[{"expression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"23241:10:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"23261:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5819,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:16","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5824,"nodeType":"ExpressionStatement","src":"23241:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"23281:10:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"23295:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5834,"nodeType":"IfStatement","src":"23277:98:16","trueBody":{"id":5833,"nodeType":"Block","src":"23302:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"23358:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5828,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23323:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5832,"nodeType":"RevertStatement","src":"23316:48:16"}]}}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"22840:312:16","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5836,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:16","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"value","nameLocation":"23182:5:16","nodeType":"VariableDeclaration","scope":5836,"src":"23175:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5812,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:16"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:16","nodeType":"VariableDeclaration","scope":5836,"src":"23212:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5815,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:16"},"scope":6397,"src":"23157:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5861,"nodeType":"Block","src":"23778:150:16","statements":[{"expression":{"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"23788:10:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"23808:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5845,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:16","typeDescriptions":{}}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5850,"nodeType":"ExpressionStatement","src":"23788:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"23828:10:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"23842:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5860,"nodeType":"IfStatement","src":"23824:98:16","trueBody":{"id":5859,"nodeType":"Block","src":"23849:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"23905:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5854,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"23870:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5858,"nodeType":"RevertStatement","src":"23863:48:16"}]}}]},"documentation":{"id":5837,"nodeType":"StructuredDocumentation","src":"23387:312:16","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:16","nodeType":"FunctionDefinition","parameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"value","nameLocation":"23729:5:16","nodeType":"VariableDeclaration","scope":5862,"src":"23722:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5838,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:16"},"returnParameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:16","nodeType":"VariableDeclaration","scope":5862,"src":"23759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5841,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:16"},"scope":6397,"src":"23704:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"24325:150:16","statements":[{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"24335:10:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"24355:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5871,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:16","typeDescriptions":{}}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5876,"nodeType":"ExpressionStatement","src":"24335:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"24375:10:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"24389:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5886,"nodeType":"IfStatement","src":"24371:98:16","trueBody":{"id":5885,"nodeType":"Block","src":"24396:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:16","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"24452:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5880,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"24417:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5884,"nodeType":"RevertStatement","src":"24410:48:16"}]}}]},"documentation":{"id":5863,"nodeType":"StructuredDocumentation","src":"23934:312:16","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:16","nodeType":"FunctionDefinition","parameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5865,"mutability":"mutable","name":"value","nameLocation":"24276:5:16","nodeType":"VariableDeclaration","scope":5888,"src":"24269:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5864,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:16"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:16","nodeType":"VariableDeclaration","scope":5888,"src":"24306:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5867,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:16"},"scope":6397,"src":"24251:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5913,"nodeType":"Block","src":"24872:150:16","statements":[{"expression":{"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"24882:10:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"24902:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5897,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:16","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5902,"nodeType":"ExpressionStatement","src":"24882:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"24922:10:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"24936:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"24918:98:16","trueBody":{"id":5911,"nodeType":"Block","src":"24943:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:16","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"24999:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5906,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"24964:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5910,"nodeType":"RevertStatement","src":"24957:48:16"}]}}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"24481:312:16","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5914,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:16","nodeType":"FunctionDefinition","parameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"value","nameLocation":"24823:5:16","nodeType":"VariableDeclaration","scope":5914,"src":"24816:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5890,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:16"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:16","nodeType":"VariableDeclaration","scope":5914,"src":"24853:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5893,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:16"},"scope":6397,"src":"24798:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5939,"nodeType":"Block","src":"25419:150:16","statements":[{"expression":{"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"25429:10:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"25449:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5923,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:16","typeDescriptions":{}}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5928,"nodeType":"ExpressionStatement","src":"25429:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"25469:10:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"25483:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5938,"nodeType":"IfStatement","src":"25465:98:16","trueBody":{"id":5937,"nodeType":"Block","src":"25490:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:16","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"25546:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5932,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"25511:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5936,"nodeType":"RevertStatement","src":"25504:48:16"}]}}]},"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"25028:312:16","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5940,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:16","nodeType":"FunctionDefinition","parameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"value","nameLocation":"25370:5:16","nodeType":"VariableDeclaration","scope":5940,"src":"25363:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5916,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:16"},"returnParameters":{"id":5921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:16","nodeType":"VariableDeclaration","scope":5940,"src":"25400:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5919,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:16"},"scope":6397,"src":"25345:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5965,"nodeType":"Block","src":"25966:150:16","statements":[{"expression":{"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"25976:10:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"25996:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5949,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:16","typeDescriptions":{}}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5954,"nodeType":"ExpressionStatement","src":"25976:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"26016:10:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"26030:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5964,"nodeType":"IfStatement","src":"26012:98:16","trueBody":{"id":5963,"nodeType":"Block","src":"26037:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"26093:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5958,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"26058:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5962,"nodeType":"RevertStatement","src":"26051:48:16"}]}}]},"documentation":{"id":5941,"nodeType":"StructuredDocumentation","src":"25575:312:16","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:16","nodeType":"FunctionDefinition","parameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"value","nameLocation":"25917:5:16","nodeType":"VariableDeclaration","scope":5966,"src":"25910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5942,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:16"},"returnParameters":{"id":5947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:16","nodeType":"VariableDeclaration","scope":5966,"src":"25947:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5945,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:16"},"scope":6397,"src":"25892:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5991,"nodeType":"Block","src":"26513:150:16","statements":[{"expression":{"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"26523:10:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"26543:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5975,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:16","typeDescriptions":{}}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5980,"nodeType":"ExpressionStatement","src":"26523:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"26563:10:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"26577:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5990,"nodeType":"IfStatement","src":"26559:98:16","trueBody":{"id":5989,"nodeType":"Block","src":"26584:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"26640:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5984,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"26605:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5988,"nodeType":"RevertStatement","src":"26598:48:16"}]}}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"26122:312:16","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5992,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:16","nodeType":"FunctionDefinition","parameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"value","nameLocation":"26464:5:16","nodeType":"VariableDeclaration","scope":5992,"src":"26457:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5968,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:16"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:16","nodeType":"VariableDeclaration","scope":5992,"src":"26494:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5971,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:16"},"scope":6397,"src":"26439:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6017,"nodeType":"Block","src":"27060:150:16","statements":[{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"27070:10:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"27090:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6001,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:16","typeDescriptions":{}}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6006,"nodeType":"ExpressionStatement","src":"27070:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"27110:10:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"27124:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6016,"nodeType":"IfStatement","src":"27106:98:16","trueBody":{"id":6015,"nodeType":"Block","src":"27131:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:16","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"27187:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6010,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27152:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6014,"nodeType":"RevertStatement","src":"27145:48:16"}]}}]},"documentation":{"id":5993,"nodeType":"StructuredDocumentation","src":"26669:312:16","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6018,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:16","nodeType":"FunctionDefinition","parameters":{"id":5996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5995,"mutability":"mutable","name":"value","nameLocation":"27011:5:16","nodeType":"VariableDeclaration","scope":6018,"src":"27004:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5994,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:16"},"returnParameters":{"id":5999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5998,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:16","nodeType":"VariableDeclaration","scope":6018,"src":"27041:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5997,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:16"},"scope":6397,"src":"26986:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6043,"nodeType":"Block","src":"27607:150:16","statements":[{"expression":{"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"27617:10:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"27637:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6027,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:16","typeDescriptions":{}}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6032,"nodeType":"ExpressionStatement","src":"27617:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"27657:10:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"27671:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"27653:98:16","trueBody":{"id":6041,"nodeType":"Block","src":"27678:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"27734:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6036,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"27699:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6040,"nodeType":"RevertStatement","src":"27692:48:16"}]}}]},"documentation":{"id":6019,"nodeType":"StructuredDocumentation","src":"27216:312:16","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:16","nodeType":"FunctionDefinition","parameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"value","nameLocation":"27558:5:16","nodeType":"VariableDeclaration","scope":6044,"src":"27551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6020,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:16"},"returnParameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:16","nodeType":"VariableDeclaration","scope":6044,"src":"27588:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6023,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:16"},"scope":6397,"src":"27533:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"28147:148:16","statements":[{"expression":{"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"28157:10:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"28176:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6053,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:16","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6058,"nodeType":"ExpressionStatement","src":"28157:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"28196:10:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"28210:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6068,"nodeType":"IfStatement","src":"28192:97:16","trueBody":{"id":6067,"nodeType":"Block","src":"28217:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"28272:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6062,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"28238:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6066,"nodeType":"RevertStatement","src":"28231:47:16"}]}}]},"documentation":{"id":6045,"nodeType":"StructuredDocumentation","src":"27763:307:16","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:16","nodeType":"FunctionDefinition","parameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"value","nameLocation":"28099:5:16","nodeType":"VariableDeclaration","scope":6070,"src":"28092:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6046,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:16"},"returnParameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:16","nodeType":"VariableDeclaration","scope":6070,"src":"28129:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6049,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:16"},"scope":6397,"src":"28075:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6095,"nodeType":"Block","src":"28685:148:16","statements":[{"expression":{"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"28695:10:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"28714:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6079,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:16","typeDescriptions":{}}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6084,"nodeType":"ExpressionStatement","src":"28695:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"28734:10:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"28748:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6094,"nodeType":"IfStatement","src":"28730:97:16","trueBody":{"id":6093,"nodeType":"Block","src":"28755:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"28810:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"28776:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6092,"nodeType":"RevertStatement","src":"28769:47:16"}]}}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"28301:307:16","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6096,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:16","nodeType":"FunctionDefinition","parameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"value","nameLocation":"28637:5:16","nodeType":"VariableDeclaration","scope":6096,"src":"28630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6072,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:16"},"returnParameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:16","nodeType":"VariableDeclaration","scope":6096,"src":"28667:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6075,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:16"},"scope":6397,"src":"28613:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6121,"nodeType":"Block","src":"29223:148:16","statements":[{"expression":{"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"29233:10:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"29252:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6105,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:16","typeDescriptions":{}}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6110,"nodeType":"ExpressionStatement","src":"29233:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"29272:10:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"29286:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"29268:97:16","trueBody":{"id":6119,"nodeType":"Block","src":"29293:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"29348:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6114,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"29314:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6118,"nodeType":"RevertStatement","src":"29307:47:16"}]}}]},"documentation":{"id":6097,"nodeType":"StructuredDocumentation","src":"28839:307:16","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6122,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:16","nodeType":"FunctionDefinition","parameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"value","nameLocation":"29175:5:16","nodeType":"VariableDeclaration","scope":6122,"src":"29168:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6098,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:16"},"returnParameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:16","nodeType":"VariableDeclaration","scope":6122,"src":"29205:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6101,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:16"},"scope":6397,"src":"29151:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6147,"nodeType":"Block","src":"29761:148:16","statements":[{"expression":{"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"29771:10:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"29790:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6131,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:16","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6136,"nodeType":"ExpressionStatement","src":"29771:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"29810:10:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"29824:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6146,"nodeType":"IfStatement","src":"29806:97:16","trueBody":{"id":6145,"nodeType":"Block","src":"29831:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:16","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"29886:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6140,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"29852:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6144,"nodeType":"RevertStatement","src":"29845:47:16"}]}}]},"documentation":{"id":6123,"nodeType":"StructuredDocumentation","src":"29377:307:16","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:16","nodeType":"FunctionDefinition","parameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"value","nameLocation":"29713:5:16","nodeType":"VariableDeclaration","scope":6148,"src":"29706:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6124,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:16"},"returnParameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:16","nodeType":"VariableDeclaration","scope":6148,"src":"29743:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6127,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:16"},"scope":6397,"src":"29689:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6173,"nodeType":"Block","src":"30299:148:16","statements":[{"expression":{"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"30309:10:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"30328:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6157,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:16","typeDescriptions":{}}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6162,"nodeType":"ExpressionStatement","src":"30309:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"30348:10:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"30362:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"30344:97:16","trueBody":{"id":6171,"nodeType":"Block","src":"30369:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"30424:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6166,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"30390:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6170,"nodeType":"RevertStatement","src":"30383:47:16"}]}}]},"documentation":{"id":6149,"nodeType":"StructuredDocumentation","src":"29915:307:16","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6174,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:16","nodeType":"FunctionDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"mutability":"mutable","name":"value","nameLocation":"30251:5:16","nodeType":"VariableDeclaration","scope":6174,"src":"30244:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6150,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:16"},"returnParameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:16","nodeType":"VariableDeclaration","scope":6174,"src":"30281:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6153,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:16"},"scope":6397,"src":"30227:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6199,"nodeType":"Block","src":"30837:148:16","statements":[{"expression":{"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"30847:10:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"30866:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6183,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:16","typeDescriptions":{}}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6188,"nodeType":"ExpressionStatement","src":"30847:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"30886:10:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"30900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6198,"nodeType":"IfStatement","src":"30882:97:16","trueBody":{"id":6197,"nodeType":"Block","src":"30907:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:16","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"30962:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6192,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"30928:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6196,"nodeType":"RevertStatement","src":"30921:47:16"}]}}]},"documentation":{"id":6175,"nodeType":"StructuredDocumentation","src":"30453:307:16","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6200,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:16","nodeType":"FunctionDefinition","parameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"value","nameLocation":"30789:5:16","nodeType":"VariableDeclaration","scope":6200,"src":"30782:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6176,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:16"},"returnParameters":{"id":6181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6180,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:16","nodeType":"VariableDeclaration","scope":6200,"src":"30819:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6179,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:16"},"scope":6397,"src":"30765:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6225,"nodeType":"Block","src":"31375:148:16","statements":[{"expression":{"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"31385:10:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"31404:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6209,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:16","typeDescriptions":{}}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6214,"nodeType":"ExpressionStatement","src":"31385:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"31424:10:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"31438:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6224,"nodeType":"IfStatement","src":"31420:97:16","trueBody":{"id":6223,"nodeType":"Block","src":"31445:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"31500:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6218,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"31466:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6222,"nodeType":"RevertStatement","src":"31459:47:16"}]}}]},"documentation":{"id":6201,"nodeType":"StructuredDocumentation","src":"30991:307:16","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6226,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:16","nodeType":"FunctionDefinition","parameters":{"id":6204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"mutability":"mutable","name":"value","nameLocation":"31327:5:16","nodeType":"VariableDeclaration","scope":6226,"src":"31320:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6202,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:16"},"returnParameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:16","nodeType":"VariableDeclaration","scope":6226,"src":"31357:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6205,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:16"},"scope":6397,"src":"31303:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"31913:148:16","statements":[{"expression":{"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"31923:10:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"31942:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6235,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:16","typeDescriptions":{}}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6240,"nodeType":"ExpressionStatement","src":"31923:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"31962:10:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"31976:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6250,"nodeType":"IfStatement","src":"31958:97:16","trueBody":{"id":6249,"nodeType":"Block","src":"31983:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"32038:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6244,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"32004:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6248,"nodeType":"RevertStatement","src":"31997:47:16"}]}}]},"documentation":{"id":6227,"nodeType":"StructuredDocumentation","src":"31529:307:16","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:16","nodeType":"FunctionDefinition","parameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6229,"mutability":"mutable","name":"value","nameLocation":"31865:5:16","nodeType":"VariableDeclaration","scope":6252,"src":"31858:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6228,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:16"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:16","nodeType":"VariableDeclaration","scope":6252,"src":"31895:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6231,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:16"},"scope":6397,"src":"31841:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6277,"nodeType":"Block","src":"32451:148:16","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"32461:10:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"32480:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6261,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:16","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6266,"nodeType":"ExpressionStatement","src":"32461:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"32500:10:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"32514:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"32496:97:16","trueBody":{"id":6275,"nodeType":"Block","src":"32521:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"32576:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6270,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"32542:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6274,"nodeType":"RevertStatement","src":"32535:47:16"}]}}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"32067:307:16","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6278,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:16","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"value","nameLocation":"32403:5:16","nodeType":"VariableDeclaration","scope":6278,"src":"32396:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6254,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:16"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:16","nodeType":"VariableDeclaration","scope":6278,"src":"32433:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6257,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:16"},"scope":6397,"src":"32379:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6303,"nodeType":"Block","src":"32989:148:16","statements":[{"expression":{"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"32999:10:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"33018:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6287,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:16","typeDescriptions":{}}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6292,"nodeType":"ExpressionStatement","src":"32999:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"33038:10:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"33052:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6302,"nodeType":"IfStatement","src":"33034:97:16","trueBody":{"id":6301,"nodeType":"Block","src":"33059:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"33114:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6296,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"33080:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6300,"nodeType":"RevertStatement","src":"33073:47:16"}]}}]},"documentation":{"id":6279,"nodeType":"StructuredDocumentation","src":"32605:307:16","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6304,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:16","nodeType":"FunctionDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"value","nameLocation":"32941:5:16","nodeType":"VariableDeclaration","scope":6304,"src":"32934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6280,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:16"},"returnParameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:16","nodeType":"VariableDeclaration","scope":6304,"src":"32971:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6283,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:16"},"scope":6397,"src":"32917:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6329,"nodeType":"Block","src":"33527:148:16","statements":[{"expression":{"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"33537:10:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"33556:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6313,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:16","typeDescriptions":{}}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6318,"nodeType":"ExpressionStatement","src":"33537:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"33576:10:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"33590:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6328,"nodeType":"IfStatement","src":"33572:97:16","trueBody":{"id":6327,"nodeType":"Block","src":"33597:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"33652:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6322,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"33618:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6326,"nodeType":"RevertStatement","src":"33611:47:16"}]}}]},"documentation":{"id":6305,"nodeType":"StructuredDocumentation","src":"33143:307:16","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:16","nodeType":"FunctionDefinition","parameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"value","nameLocation":"33479:5:16","nodeType":"VariableDeclaration","scope":6330,"src":"33472:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6306,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:16"},"returnParameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:16","nodeType":"VariableDeclaration","scope":6330,"src":"33509:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6309,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:16"},"scope":6397,"src":"33455:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6355,"nodeType":"Block","src":"34058:146:16","statements":[{"expression":{"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6338,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"34068:10:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"34086:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6339,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:16","typeDescriptions":{}}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6344,"nodeType":"ExpressionStatement","src":"34068:24:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"34106:10:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"34120:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6354,"nodeType":"IfStatement","src":"34102:96:16","trueBody":{"id":6353,"nodeType":"Block","src":"34127:71:16","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"34181:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6348,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"34148:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6352,"nodeType":"RevertStatement","src":"34141:46:16"}]}}]},"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"33681:302:16","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6356,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:16","nodeType":"FunctionDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"value","nameLocation":"34011:5:16","nodeType":"VariableDeclaration","scope":6356,"src":"34004:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6332,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:16"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:16","nodeType":"VariableDeclaration","scope":6356,"src":"34041:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6335,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:16"},"scope":6397,"src":"33988:216:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"34444:250:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"34557:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6368,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967269,"src":"34573:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:16","memberName":"max","nodeType":"MemberAccess","src":"34573:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6365,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:16","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6379,"nodeType":"IfStatement","src":"34553:105:16","trueBody":{"id":6378,"nodeType":"Block","src":"34592:66:16","statements":[{"errorCall":{"arguments":[{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"34641:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6374,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"34613:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6377,"nodeType":"RevertStatement","src":"34606:41:16"}]}},{"expression":{"arguments":[{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"34681:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6380,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:16","typeDescriptions":{}}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6363,"id":6384,"nodeType":"Return","src":"34667:20:16"}]},"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"34210:165:16","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:16","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"value","nameLocation":"34406:5:16","nodeType":"VariableDeclaration","scope":6386,"src":"34398:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6358,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:16"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6386,"src":"34436:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6361,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:16"},"scope":6397,"src":"34380:314:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6395,"nodeType":"Block","src":"34853:87:16","statements":[{"AST":{"nativeSrc":"34888:46:16","nodeType":"YulBlock","src":"34888:46:16","statements":[{"nativeSrc":"34902:22:16","nodeType":"YulAssignment","src":"34902:22:16","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:16","nodeType":"YulIdentifier","src":"34921:1:16"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:16","nodeType":"YulIdentifier","src":"34914:6:16"},"nativeSrc":"34914:9:16","nodeType":"YulFunctionCall","src":"34914:9:16"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:16","nodeType":"YulIdentifier","src":"34907:6:16"},"nativeSrc":"34907:17:16","nodeType":"YulFunctionCall","src":"34907:17:16"},"variableNames":[{"name":"u","nativeSrc":"34902:1:16","nodeType":"YulIdentifier","src":"34902:1:16"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":6389,"isOffset":false,"isSlot":false,"src":"34921:1:16","valueSize":1},{"declaration":6392,"isOffset":false,"isSlot":false,"src":"34902:1:16","valueSize":1}],"flags":["memory-safe"],"id":6394,"nodeType":"InlineAssembly","src":"34863:71:16"}]},"documentation":{"id":6387,"nodeType":"StructuredDocumentation","src":"34700:90:16","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6396,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:16","nodeType":"FunctionDefinition","parameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"b","nameLocation":"34816:1:16","nodeType":"VariableDeclaration","scope":6396,"src":"34811:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6388,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:16"},"returnParameters":{"id":6393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6392,"mutability":"mutable","name":"u","nameLocation":"34850:1:16","nodeType":"VariableDeclaration","scope":6396,"src":"34842:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6391,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:16"},"scope":6397,"src":"34795:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6398,"src":"769:34173:16","usedErrors":[4642,4647,4654,4659],"usedEvents":[]}],"src":"192:34751:16"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6397],"SignedMath":[6541]},"id":6542,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6399,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6542,"sourceUnit":6398,"src":"135:40:17","symbolAliases":[{"foreign":{"id":6400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"143:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"177:80:17","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6541,"linearizedBaseContracts":[6541],"name":"SignedMath","nameLocation":"266:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":6431,"nodeType":"Block","src":"746:215:17","statements":[{"id":6430,"nodeType":"UncheckedBlock","src":"756:199:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"894:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"900:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"904:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6423,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"932:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6421,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"916:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6397_$","typeString":"type(library SafeCast)"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6396,"src":"916:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6419,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:17","typeDescriptions":{}}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6413,"id":6429,"nodeType":"Return","src":"887:57:17"}]}]},"documentation":{"id":6403,"nodeType":"StructuredDocumentation","src":"283:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:17","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"condition","nameLocation":"684:9:17","nodeType":"VariableDeclaration","scope":6432,"src":"679:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6404,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6407,"mutability":"mutable","name":"a","nameLocation":"702:1:17","nodeType":"VariableDeclaration","scope":6432,"src":"695:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6406,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6409,"mutability":"mutable","name":"b","nameLocation":"712:1:17","nodeType":"VariableDeclaration","scope":6432,"src":"705:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6408,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:17"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6432,"src":"738:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6411,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:17"},"scope":6541,"src":"662:299:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6450,"nodeType":"Block","src":"1102:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6443,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"1127:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6444,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"1131:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"1134:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"1137:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"1119:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6441,"id":6449,"nodeType":"Return","src":"1112:27:17"}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"967:66:17","text":" @dev Returns the largest of two signed numbers."},"id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:17","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"a","nameLocation":"1058:1:17","nodeType":"VariableDeclaration","scope":6451,"src":"1051:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6434,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6437,"mutability":"mutable","name":"b","nameLocation":"1068:1:17","nodeType":"VariableDeclaration","scope":6451,"src":"1061:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6436,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:17"},"returnParameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"1094:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6439,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:17"},"scope":6541,"src":"1038:108:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6469,"nodeType":"Block","src":"1288:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"1313:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6463,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"1317:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"1320:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"1323:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6461,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6432,"src":"1305:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6460,"id":6468,"nodeType":"Return","src":"1298:27:17"}]},"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"1152:67:17","text":" @dev Returns the smallest of two signed numbers."},"id":6470,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:17","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"a","nameLocation":"1244:1:17","nodeType":"VariableDeclaration","scope":6470,"src":"1237:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6453,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6456,"mutability":"mutable","name":"b","nameLocation":"1254:1:17","nodeType":"VariableDeclaration","scope":6470,"src":"1247:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6455,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:17"},"returnParameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6470,"src":"1280:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6458,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:17"},"scope":6541,"src":"1224:108:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6513,"nodeType":"Block","src":"1537:162:17","statements":[{"assignments":[6481],"declarations":[{"constant":false,"id":6481,"mutability":"mutable","name":"x","nameLocation":"1606:1:17","nodeType":"VariableDeclaration","scope":6513,"src":"1599:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6480,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6494,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"1611:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"1615:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"1622:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"1626:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6489,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:17"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"1651:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6500,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"1671:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:17","typeDescriptions":{}}},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6496,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:17","typeDescriptions":{}}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"1685:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6506,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"1689:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6479,"id":6512,"nodeType":"Return","src":"1644:48:17"}]},"documentation":{"id":6471,"nodeType":"StructuredDocumentation","src":"1338:126:17","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6514,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:17","nodeType":"FunctionDefinition","parameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"a","nameLocation":"1493:1:17","nodeType":"VariableDeclaration","scope":6514,"src":"1486:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6472,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6475,"mutability":"mutable","name":"b","nameLocation":"1503:1:17","nodeType":"VariableDeclaration","scope":6514,"src":"1496:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6474,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:17"},"returnParameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6514,"src":"1529:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6477,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:17"},"scope":6541,"src":"1469:230:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6539,"nodeType":"Block","src":"1843:767:17","statements":[{"id":6538,"nodeType":"UncheckedBlock","src":"1853:751:17","statements":[{"assignments":[6523],"declarations":[{"constant":false,"id":6523,"mutability":"mutable","name":"mask","nameLocation":"2424:4:17","nodeType":"VariableDeclaration","scope":6538,"src":"2417:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6522,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6527,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6524,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"2431:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6530,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"2576:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6531,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"2580:4:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6534,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"2588:4:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:17","typeDescriptions":{}}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6521,"id":6537,"nodeType":"Return","src":"2560:33:17"}]}]},"documentation":{"id":6515,"nodeType":"StructuredDocumentation","src":"1705:78:17","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6540,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:17","nodeType":"FunctionDefinition","parameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"n","nameLocation":"1808:1:17","nodeType":"VariableDeclaration","scope":6540,"src":"1801:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6516,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:17"},"returnParameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6540,"src":"1834:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:17"},"scope":6541,"src":"1788:822:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6542,"src":"258:2354:17","usedErrors":[],"usedEvents":[]}],"src":"109:2504:17"}},"contracts/NftMarketplace.sol":{"id":18,"ast":{"absolutePath":"contracts/NftMarketplace.sol","exportedSymbols":{"Context":[1521],"ERC165":[2999],"ERC721":[1125],"ERC721URIStorage":[1386],"ERC721Utils":[1491],"IERC165":[3011],"IERC4906":[27],"IERC721":[1242],"IERC721Errors":[121],"IERC721Metadata":[1414],"NFTMarketplace":[7212],"Strings":[2975]},"id":7213,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6543,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":6544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7213,"sourceUnit":1387,"src":"58:78:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7213,"sourceUnit":1126,"src":"137:57:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6546,"name":"ERC721URIStorage","nameLocations":["224:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":1386,"src":"224:16:18"},"id":6547,"nodeType":"InheritanceSpecifier","src":"224:16:18"}],"canonicalName":"NFTMarketplace","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7212,"linearizedBaseContracts":[7212,1386,1125,121,1414,27,1242,2999,3011,1521],"name":"NFTMarketplace","nameLocation":"206:14:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6549,"mutability":"mutable","name":"_tokenIds","nameLocation":"264:9:18","nodeType":"VariableDeclaration","scope":7212,"src":"248:25:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":6551,"mutability":"mutable","name":"_itemsSold","nameLocation":"295:10:18","nodeType":"VariableDeclaration","scope":7212,"src":"279:26:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6550,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":6554,"mutability":"mutable","name":"listingPrice","nameLocation":"320:12:18","nodeType":"VariableDeclaration","scope":7212,"src":"312:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6552,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3030303235","id":6553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"335:13:18","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_250000000000000_by_1","typeString":"int_const 250000000000000"},"value":"0.00025"},"visibility":"internal"},{"constant":false,"id":6556,"mutability":"mutable","name":"owner","nameLocation":"371:5:18","nodeType":"VariableDeclaration","scope":7212,"src":"355:21:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6555,"name":"address","nodeType":"ElementaryTypeName","src":"355:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":6561,"mutability":"mutable","name":"idToMarketItem","nameLocation":"423:14:18","nodeType":"VariableDeclaration","scope":7212,"src":"384:53:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem)"},"typeName":{"id":6560,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6557,"name":"uint256","nodeType":"ElementaryTypeName","src":"392:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"384:30:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6559,"nodeType":"UserDefinedTypeName","pathNode":{"id":6558,"name":"MarketItem","nameLocations":["403:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"403:10:18"},"referencedDeclaration":6572,"src":"403:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}}},"visibility":"private"},{"canonicalName":"NFTMarketplace.MarketItem","id":6572,"members":[{"constant":false,"id":6563,"mutability":"mutable","name":"tokenId","nameLocation":"478:7:18","nodeType":"VariableDeclaration","scope":6572,"src":"470:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6562,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6565,"mutability":"mutable","name":"seller","nameLocation":"509:6:18","nodeType":"VariableDeclaration","scope":6572,"src":"493:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6564,"name":"address","nodeType":"ElementaryTypeName","src":"493:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":6567,"mutability":"mutable","name":"owner","nameLocation":"539:5:18","nodeType":"VariableDeclaration","scope":6572,"src":"523:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6566,"name":"address","nodeType":"ElementaryTypeName","src":"523:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":6569,"mutability":"mutable","name":"price","nameLocation":"560:5:18","nodeType":"VariableDeclaration","scope":6572,"src":"552:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6568,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6571,"mutability":"mutable","name":"sold","nameLocation":"578:4:18","nodeType":"VariableDeclaration","scope":6572,"src":"573:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6570,"name":"bool","nodeType":"ElementaryTypeName","src":"573:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"MarketItem","nameLocation":"451:10:18","nodeType":"StructDefinition","scope":7212,"src":"444:145:18","visibility":"public"},{"anonymous":false,"eventSelector":"b640004f1d14576d0c209e240cad0410e0d8c0c33a09375861fbadae2588a98d","id":6584,"name":"MarketItemCreated","nameLocation":"602:17:18","nodeType":"EventDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6574,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"644:7:18","nodeType":"VariableDeclaration","scope":6584,"src":"628:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"628:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6576,"indexed":false,"mutability":"mutable","name":"seller","nameLocation":"667:6:18","nodeType":"VariableDeclaration","scope":6584,"src":"659:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6575,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6578,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"689:5:18","nodeType":"VariableDeclaration","scope":6584,"src":"681:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6577,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6580,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"710:5:18","nodeType":"VariableDeclaration","scope":6584,"src":"702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6579,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6582,"indexed":false,"mutability":"mutable","name":"sold","nameLocation":"728:4:18","nodeType":"VariableDeclaration","scope":6584,"src":"723:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6581,"name":"bool","nodeType":"ElementaryTypeName","src":"723:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"620:118:18"},"src":"596:143:18"},{"anonymous":false,"eventSelector":"ef1fb2bd31f5ed737e6054243d9b5eacd3af967f35af45e8fb844ca6dbbe98f9","id":6594,"name":"NFTPurchased","nameLocation":"751:12:18","nodeType":"EventDefinition","parameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"788:7:18","nodeType":"VariableDeclaration","scope":6594,"src":"772:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6585,"name":"uint256","nodeType":"ElementaryTypeName","src":"772:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6588,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"819:5:18","nodeType":"VariableDeclaration","scope":6594,"src":"803:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6587,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6590,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"848:6:18","nodeType":"VariableDeclaration","scope":6594,"src":"832:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6589,"name":"address","nodeType":"ElementaryTypeName","src":"832:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6592,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"870:5:18","nodeType":"VariableDeclaration","scope":6594,"src":"862:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6591,"name":"uint256","nodeType":"ElementaryTypeName","src":"862:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:117:18"},"src":"745:137:18"},{"body":{"id":6609,"nodeType":"Block","src":"934:42:18","statements":[{"expression":{"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6601,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"942:5:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"958:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"962:6:18","memberName":"sender","nodeType":"MemberAccess","src":"958:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"950:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6602,"name":"address","nodeType":"ElementaryTypeName","src":"950:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"950:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"942:27:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6608,"nodeType":"ExpressionStatement","src":"942:27:18"}]},"id":6610,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"444f542773204e4654","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"911:11:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8a118c6c4693805cb6c80f69ce51cf6134aa92ccd7ab130f66226173c949db9","typeString":"literal_string \"DOT's NFT\""},"value":"DOT's NFT"},{"hexValue":"444f544e4654","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"924:8:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4713ff11ad184586da29ad5fb6125a443714b9f9cc39b8a45c894a9eea08394c","typeString":"literal_string \"DOTNFT\""},"value":"DOTNFT"}],"id":6599,"kind":"baseConstructorSpecifier","modifierName":{"id":6596,"name":"ERC721","nameLocations":["904:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1125,"src":"904:6:18"},"nodeType":"ModifierInvocation","src":"904:29:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[],"src":"901:2:18"},"returnParameters":{"id":6600,"nodeType":"ParameterList","parameters":[],"src":"934:0:18"},"scope":7212,"src":"890:86:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6627,"nodeType":"Block","src":"1045:131:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"1061:5:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1070:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1074:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1070:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1061:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206d61726b6574706c616365206f776e65722063616e20757064617465206c697374696e672070726963652e","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1082:50:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccaa2a4e55e27251ad85f5b4efa2cdd00f26f665c51f0decd4a23fb3c06a7e32","typeString":"literal_string \"Only marketplace owner can update listing price.\""},"value":"Only marketplace owner can update listing price."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccaa2a4e55e27251ad85f5b4efa2cdd00f26f665c51f0decd4a23fb3c06a7e32","typeString":"literal_string \"Only marketplace owner can update listing price.\""}],"id":6615,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1053:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1053:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6622,"nodeType":"ExpressionStatement","src":"1053:80:18"},{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6623,"name":"listingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"1141:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6624,"name":"_listingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"1156:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1141:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6626,"nodeType":"ExpressionStatement","src":"1141:28:18"}]},"functionSelector":"ae677aa3","id":6628,"implemented":true,"kind":"function","modifiers":[],"name":"updateListingPrice","nameLocation":"991:18:18","nodeType":"FunctionDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"_listingPrice","nameLocation":"1015:13:18","nodeType":"VariableDeclaration","scope":6628,"src":"1010:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6611,"name":"uint","nodeType":"ElementaryTypeName","src":"1010:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1009:20:18"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[],"src":"1045:0:18"},"scope":7212,"src":"982:194:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6635,"nodeType":"Block","src":"1239:34:18","statements":[{"expression":{"id":6633,"name":"listingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"1254:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6632,"id":6634,"nodeType":"Return","src":"1247:19:18"}]},"functionSelector":"12e85585","id":6636,"implemented":true,"kind":"function","modifiers":[],"name":"getListingPrice","nameLocation":"1191:15:18","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[],"src":"1206:2:18"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6636,"src":"1230:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"1230:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1229:9:18"},"scope":7212,"src":"1182:91:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6670,"nodeType":"Block","src":"1370:214:18","statements":[{"expression":{"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1378:11:18","subExpression":{"id":6645,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"1378:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6647,"nodeType":"ExpressionStatement","src":"1378:11:18"},{"assignments":[6649],"declarations":[{"constant":false,"id":6649,"mutability":"mutable","name":"newTokenId","nameLocation":"1406:10:18","nodeType":"VariableDeclaration","scope":6670,"src":"1398:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6651,"initialValue":{"id":6650,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"1419:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1398:30:18"},{"expression":{"arguments":[{"expression":{"id":6653,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1443:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1447:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1443:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6655,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"1455:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6652,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"1437:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6657,"nodeType":"ExpressionStatement","src":"1437:29:18"},{"expression":{"arguments":[{"id":6659,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"1487:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6660,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"1499:8:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6658,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"1474:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6662,"nodeType":"ExpressionStatement","src":"1474:34:18"},{"expression":{"arguments":[{"id":6664,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"1533:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6665,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"1545:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6663,"name":"createMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"1516:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1516:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6667,"nodeType":"ExpressionStatement","src":"1516:35:18"},{"expression":{"id":6668,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"1567:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6644,"id":6669,"nodeType":"Return","src":"1560:17:18"}]},"functionSelector":"72b3b620","id":6671,"implemented":true,"kind":"function","modifiers":[],"name":"createToken","nameLocation":"1289:11:18","nodeType":"FunctionDefinition","parameters":{"id":6641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"tokenURI","nameLocation":"1315:8:18","nodeType":"VariableDeclaration","scope":6671,"src":"1301:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6637,"name":"string","nodeType":"ElementaryTypeName","src":"1301:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6640,"mutability":"mutable","name":"price","nameLocation":"1333:5:18","nodeType":"VariableDeclaration","scope":6671,"src":"1325:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1325:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1300:39:18"},"returnParameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6671,"src":"1364:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint","nodeType":"ElementaryTypeName","src":"1364:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1363:6:18"},"scope":7212,"src":"1280:304:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6737,"nodeType":"Block","src":"1656:495:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6679,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"1673:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1673:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d757374206265206174206c65617374203120776569","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1684:30:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9","typeString":"literal_string \"Price must be at least 1 wei\""},"value":"Price must be at least 1 wei"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9","typeString":"literal_string \"Price must be at least 1 wei\""}],"id":6678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1665:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1665:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6684,"nodeType":"ExpressionStatement","src":"1665:50:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1732:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1736:5:18","memberName":"value","nodeType":"MemberAccess","src":"1732:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6688,"name":"listingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"1745:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1732:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d75737420626520657175616c20746f206c697374696e67207072696365","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:38:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1","typeString":"literal_string \"Price must be equal to listing price\""},"value":"Price must be equal to listing price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c4c9b34e8a44a82a4ba8962937a0e0f0afa9206f6a506fa182ac004768974dd1","typeString":"literal_string \"Price must be equal to listing price\""}],"id":6685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1724:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1724:74:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6692,"nodeType":"ExpressionStatement","src":"1724:74:18"},{"expression":{"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6693,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"1808:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6695,"indexExpression":{"id":6694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"1823:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1808:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"1855:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":6700,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1880:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1880:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1872:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6698,"name":"address","nodeType":"ElementaryTypeName","src":"1872:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"arguments":[{"id":6707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"1917:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1909:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6705,"name":"address","nodeType":"ElementaryTypeName","src":"1909:7:18","typeDescriptions":{}}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1909:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1901:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6703,"name":"address","nodeType":"ElementaryTypeName","src":"1901:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6710,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"1933:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1948:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6696,"name":"MarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"1835:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MarketItem_$6572_storage_ptr_$","typeString":"type(struct NFTMarketplace.MarketItem storage pointer)"}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:126:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"src":"1808:153:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6714,"nodeType":"ExpressionStatement","src":"1808:153:18"},{"expression":{"arguments":[{"expression":{"id":6716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1981:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1985:6:18","memberName":"sender","nodeType":"MemberAccess","src":"1981:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6720,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2001:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1993:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6718,"name":"address","nodeType":"ElementaryTypeName","src":"1993:7:18","typeDescriptions":{}}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6722,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"2008:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6715,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"1971:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6724,"nodeType":"ExpressionStatement","src":"1971:45:18"},{"eventCall":{"arguments":[{"id":6726,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6673,"src":"2056:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2073:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2077:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2073:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6731,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2101:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2093:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6729,"name":"address","nodeType":"ElementaryTypeName","src":"2093:7:18","typeDescriptions":{}}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2093:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6733,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"2116:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":6734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2131:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6725,"name":"MarketItemCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6584,"src":"2029:17:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,address,address,uint256,bool)"}},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2029:115:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6736,"nodeType":"EmitStatement","src":"2024:120:18"}]},"id":6738,"implemented":true,"kind":"function","modifiers":[],"name":"createMarketItem","nameLocation":"1599:16:18","nodeType":"FunctionDefinition","parameters":{"id":6676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6673,"mutability":"mutable","name":"tokenId","nameLocation":"1624:7:18","nodeType":"VariableDeclaration","scope":6738,"src":"1616:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"1616:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6675,"mutability":"mutable","name":"price","nameLocation":"1641:5:18","nodeType":"VariableDeclaration","scope":6738,"src":"1633:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1633:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1615:32:18"},"returnParameters":{"id":6677,"nodeType":"ParameterList","parameters":[],"src":"1656:0:18"},"scope":7212,"src":"1590:561:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":6815,"nodeType":"Block","src":"2226:472:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6746,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2242:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6748,"indexExpression":{"id":6747,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"2257:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2242:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2266:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6567,"src":"2242:29:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2275:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2275:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2242:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206974656d206f776e65722063616e20706572666f726d2074686973206f7065726174696f6e","id":6753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2287:44:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9074ba32ca71a33be0d5bad3f82b59a588b5f08f53731795bb0723c24a23290d","typeString":"literal_string \"Only item owner can perform this operation\""},"value":"Only item owner can perform this operation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9074ba32ca71a33be0d5bad3f82b59a588b5f08f53731795bb0723c24a23290d","typeString":"literal_string \"Only item owner can perform this operation\""}],"id":6745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2234:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:98:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6755,"nodeType":"ExpressionStatement","src":"2234:98:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2348:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2352:5:18","memberName":"value","nodeType":"MemberAccess","src":"2348:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6759,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"2361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2348:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d75737420626520657175616c2062792073656e6465722e76616c7565","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2368:37:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8cc4b4fde3f0a6028a7731bf1f4aa95cc0d2e9e8bbfb5b7d4ff0d7c2d585f","typeString":"literal_string \"Price must be equal by sender.value\""},"value":"Price must be equal by sender.value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3b8cc4b4fde3f0a6028a7731bf1f4aa95cc0d2e9e8bbfb5b7d4ff0d7c2d585f","typeString":"literal_string \"Price must be equal by sender.value\""}],"id":6756,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2340:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2340:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6763,"nodeType":"ExpressionStatement","src":"2340:66:18"},{"expression":{"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6764,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2414:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6766,"indexExpression":{"id":6765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"2429:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2414:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2438:4:18","memberName":"sold","nodeType":"MemberAccess","referencedDeclaration":6571,"src":"2414:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2445:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2414:36:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6770,"nodeType":"ExpressionStatement","src":"2414:36:18"},{"expression":{"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6771,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2458:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6773,"indexExpression":{"id":6772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"2473:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2458:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2482:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6569,"src":"2458:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6775,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"2490:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2458:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6777,"nodeType":"ExpressionStatement","src":"2458:37:18"},{"expression":{"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6778,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2503:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6780,"indexExpression":{"id":6779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"2518:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2503:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2527:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6565,"src":"2503:30:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6784,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2544:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2548:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2544:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2536:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6782,"name":"address","nodeType":"ElementaryTypeName","src":"2536:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2503:52:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6788,"nodeType":"ExpressionStatement","src":"2503:52:18"},{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6789,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2563:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6791,"indexExpression":{"id":6790,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"2578:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2563:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2587:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6567,"src":"2563:29:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6797,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2611:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2603:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6795,"name":"address","nodeType":"ElementaryTypeName","src":"2603:7:18","typeDescriptions":{}}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2603:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2595:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6793,"name":"address","nodeType":"ElementaryTypeName","src":"2595:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2595:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2563:54:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6801,"nodeType":"ExpressionStatement","src":"2563:54:18"},{"expression":{"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"2625:12:18","subExpression":{"id":6802,"name":"_itemsSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2625:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6804,"nodeType":"ExpressionStatement","src":"2625:12:18"},{"expression":{"arguments":[{"expression":{"id":6806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2656:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2660:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2656:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":6810,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"2676:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2668:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6808,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:18","typeDescriptions":{}}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"2683:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6805,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"2646:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2646:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6814,"nodeType":"ExpressionStatement","src":"2646:45:18"}]},"functionSelector":"e219fc75","id":6816,"implemented":true,"kind":"function","modifiers":[],"name":"resellToken","nameLocation":"2167:11:18","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6740,"mutability":"mutable","name":"tokenId","nameLocation":"2187:7:18","nodeType":"VariableDeclaration","scope":6816,"src":"2179:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6742,"mutability":"mutable","name":"price","nameLocation":"2204:5:18","nodeType":"VariableDeclaration","scope":6816,"src":"2196:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"2196:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2178:32:18"},"returnParameters":{"id":6744,"nodeType":"ParameterList","parameters":[],"src":"2226:0:18"},"scope":7212,"src":"2158:540:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6912,"nodeType":"Block","src":"2749:619:18","statements":[{"assignments":[6822],"declarations":[{"constant":false,"id":6822,"mutability":"mutable","name":"price","nameLocation":"2762:5:18","nodeType":"VariableDeclaration","scope":6912,"src":"2757:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint","nodeType":"ElementaryTypeName","src":"2757:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6827,"initialValue":{"expression":{"baseExpression":{"id":6823,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2770:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6825,"indexExpression":{"id":6824,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"2785:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2770:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2794:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6569,"src":"2770:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2757:42:18"},{"assignments":[6829],"declarations":[{"constant":false,"id":6829,"mutability":"mutable","name":"seller","nameLocation":"2823:6:18","nodeType":"VariableDeclaration","scope":6912,"src":"2807:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":6828,"name":"address","nodeType":"ElementaryTypeName","src":"2807:15:18","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":6834,"initialValue":{"expression":{"baseExpression":{"id":6830,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2832:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6832,"indexExpression":{"id":6831,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"2847:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2832:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2856:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6565,"src":"2832:30:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"2807:55:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2878:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:5:18","memberName":"value","nodeType":"MemberAccess","src":"2878:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6838,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"2891:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2878:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c65617365207375626d6974207468652061736b696e6720707269636520696e206f7264657220746f20636f6d706c65746520746865207075726368617365","id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2898:66:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564","typeString":"literal_string \"Please submit the asking price in order to complete the purchase\""},"value":"Please submit the asking price in order to complete the purchase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564","typeString":"literal_string \"Please submit the asking price in order to complete the purchase\""}],"id":6835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2870:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6842,"nodeType":"ExpressionStatement","src":"2870:95:18"},{"expression":{"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6843,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"2973:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6845,"indexExpression":{"id":6844,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"2988:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2973:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2997:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6567,"src":"2973:29:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3013:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3017:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3013:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3005:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6847,"name":"address","nodeType":"ElementaryTypeName","src":"3005:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3005:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2973:51:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6853,"nodeType":"ExpressionStatement","src":"2973:51:18"},{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6854,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3032:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6856,"indexExpression":{"id":6855,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"3047:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3032:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3056:4:18","memberName":"sold","nodeType":"MemberAccess","referencedDeclaration":6571,"src":"3032:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3063:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3032:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6860,"nodeType":"ExpressionStatement","src":"3032:35:18"},{"expression":{"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6861,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3075:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6863,"indexExpression":{"id":6862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"3090:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3075:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3099:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6565,"src":"3075:30:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":6869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3124:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6867,"name":"address","nodeType":"ElementaryTypeName","src":"3116:7:18","typeDescriptions":{}}},"id":6870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3108:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6865,"name":"address","nodeType":"ElementaryTypeName","src":"3108:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3075:52:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6873,"nodeType":"ExpressionStatement","src":"3075:52:18"},{"expression":{"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3135:12:18","subExpression":{"id":6874,"name":"_itemsSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"3135:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6876,"nodeType":"ExpressionStatement","src":"3135:12:18"},{"expression":{"arguments":[{"arguments":[{"id":6880,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3180:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3172:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6878,"name":"address","nodeType":"ElementaryTypeName","src":"3172:7:18","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3172:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3187:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3191:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3187:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"3199:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6877,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"3162:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3162:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6886,"nodeType":"ExpressionStatement","src":"3162:45:18"},{"expression":{"arguments":[{"id":6892,"name":"listingPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"3239:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6889,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"3223:5:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3215:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6887,"name":"address","nodeType":"ElementaryTypeName","src":"3215:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3215:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:8:18","memberName":"transfer","nodeType":"MemberAccess","src":"3215:23:18","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3215:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6894,"nodeType":"ExpressionStatement","src":"3215:37:18"},{"expression":{"arguments":[{"expression":{"id":6900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3285:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3289:5:18","memberName":"value","nodeType":"MemberAccess","src":"3285:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":6897,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3268:6:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":6896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3260:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":6895,"name":"address","nodeType":"ElementaryTypeName","src":"3260:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3276:8:18","memberName":"transfer","nodeType":"MemberAccess","src":"3260:24:18","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6903,"nodeType":"ExpressionStatement","src":"3260:35:18"},{"eventCall":{"arguments":[{"id":6905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"3321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3330:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3334:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3330:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6908,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6829,"src":"3342:6:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":6909,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"3350:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6904,"name":"NFTPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"3308:12:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,address,uint256)"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3308:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6911,"nodeType":"EmitStatement","src":"3303:53:18"}]},"functionSelector":"d96a094a","id":6913,"implemented":true,"kind":"function","modifiers":[],"name":"buy","nameLocation":"2713:3:18","nodeType":"FunctionDefinition","parameters":{"id":6819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6818,"mutability":"mutable","name":"tokenId","nameLocation":"2725:7:18","nodeType":"VariableDeclaration","scope":6913,"src":"2717:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2717:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2716:17:18"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[],"src":"2749:0:18"},"scope":7212,"src":"2704:664:18","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":6996,"nodeType":"Block","src":"3445:520:18","statements":[{"assignments":[6921],"declarations":[{"constant":false,"id":6921,"mutability":"mutable","name":"itemCount","nameLocation":"3458:9:18","nodeType":"VariableDeclaration","scope":6996,"src":"3453:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6920,"name":"uint","nodeType":"ElementaryTypeName","src":"3453:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6923,"initialValue":{"id":6922,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"3470:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3453:26:18"},{"assignments":[6925],"declarations":[{"constant":false,"id":6925,"mutability":"mutable","name":"unsoldItemCount","nameLocation":"3492:15:18","nodeType":"VariableDeclaration","scope":6996,"src":"3487:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6924,"name":"uint","nodeType":"ElementaryTypeName","src":"3487:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6929,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6926,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"3510:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6927,"name":"_itemsSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"3522:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3510:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3487:45:18"},{"assignments":[6931],"declarations":[{"constant":false,"id":6931,"mutability":"mutable","name":"currentIndex","nameLocation":"3545:12:18","nodeType":"VariableDeclaration","scope":6996,"src":"3540:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6930,"name":"uint","nodeType":"ElementaryTypeName","src":"3540:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6933,"initialValue":{"hexValue":"30","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3560:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3540:21:18"},{"assignments":[6938],"declarations":[{"constant":false,"id":6938,"mutability":"mutable","name":"items","nameLocation":"3590:5:18","nodeType":"VariableDeclaration","scope":6996,"src":"3570:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem[]"},"typeName":{"baseType":{"id":6936,"nodeType":"UserDefinedTypeName","pathNode":{"id":6935,"name":"MarketItem","nameLocations":["3570:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"3570:10:18"},"referencedDeclaration":6572,"src":"3570:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":6937,"nodeType":"ArrayTypeName","src":"3570:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}},"visibility":"internal"}],"id":6945,"initialValue":{"arguments":[{"id":6943,"name":"unsoldItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"3615:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3598:16:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct NFTMarketplace.MarketItem memory[] memory)"},"typeName":{"baseType":{"id":6940,"nodeType":"UserDefinedTypeName","pathNode":{"id":6939,"name":"MarketItem","nameLocations":["3602:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"3602:10:18"},"referencedDeclaration":6572,"src":"3602:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":6941,"nodeType":"ArrayTypeName","src":"3602:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}}},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3598:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3570:61:18"},{"body":{"id":6992,"nodeType":"Block","src":"3676:262:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6956,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3691:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6960,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3706:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3710:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3706:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3691:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":6961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3713:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6567,"src":"3691:27:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6964,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967268,"src":"3730:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NFTMarketplace_$7212","typeString":"contract NFTMarketplace"}],"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6962,"name":"address","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{}}},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3722:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3691:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6991,"nodeType":"IfStatement","src":"3687:243:18","trueBody":{"id":6990,"nodeType":"Block","src":"3737:193:18","statements":[{"assignments":[6968],"declarations":[{"constant":false,"id":6968,"mutability":"mutable","name":"currentId","nameLocation":"3755:9:18","nodeType":"VariableDeclaration","scope":6990,"src":"3750:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6967,"name":"uint","nodeType":"ElementaryTypeName","src":"3750:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6972,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3767:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3771:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3767:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3750:22:18"},{"assignments":[6975],"declarations":[{"constant":false,"id":6975,"mutability":"mutable","name":"currentItem","nameLocation":"3804:11:18","nodeType":"VariableDeclaration","scope":6990,"src":"3785:30:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"},"typeName":{"id":6974,"nodeType":"UserDefinedTypeName","pathNode":{"id":6973,"name":"MarketItem","nameLocations":["3785:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"3785:10:18"},"referencedDeclaration":6572,"src":"3785:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"visibility":"internal"}],"id":6979,"initialValue":{"baseExpression":{"id":6976,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"3818:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":6978,"indexExpression":{"id":6977,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6968,"src":"3833:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3818:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3785:58:18"},{"expression":{"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6980,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"3856:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"id":6982,"indexExpression":{"id":6981,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"3862:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3856:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6983,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"3878:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem storage pointer"}},"src":"3856:33:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"id":6985,"nodeType":"ExpressionStatement","src":"3856:33:18"},{"expression":{"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6986,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"3902:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3918:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3902:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6989,"nodeType":"ExpressionStatement","src":"3902:17:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6951,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6921,"src":"3660:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3656:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6993,"initializationExpression":{"assignments":[6947],"declarations":[{"constant":false,"id":6947,"mutability":"mutable","name":"i","nameLocation":"3649:1:18","nodeType":"VariableDeclaration","scope":6993,"src":"3644:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6946,"name":"uint","nodeType":"ElementaryTypeName","src":"3644:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6949,"initialValue":{"hexValue":"30","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3653:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3644:10:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3671:3:18","subExpression":{"id":6953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3671:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6955,"nodeType":"ExpressionStatement","src":"3671:3:18"},"nodeType":"ForStatement","src":"3639:299:18"},{"expression":{"id":6994,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"3953:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"functionReturnParameters":6919,"id":6995,"nodeType":"Return","src":"3946:12:18"}]},"functionSelector":"0f08efe0","id":6997,"implemented":true,"kind":"function","modifiers":[],"name":"fetchMarketItems","nameLocation":"3384:16:18","nodeType":"FunctionDefinition","parameters":{"id":6914,"nodeType":"ParameterList","parameters":[],"src":"3400:2:18"},"returnParameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6997,"src":"3424:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem[]"},"typeName":{"baseType":{"id":6916,"nodeType":"UserDefinedTypeName","pathNode":{"id":6915,"name":"MarketItem","nameLocations":["3424:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"3424:10:18"},"referencedDeclaration":6572,"src":"3424:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":6917,"nodeType":"ArrayTypeName","src":"3424:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}},"visibility":"internal"}],"src":"3423:21:18"},"scope":7212,"src":"3375:590:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7103,"nodeType":"Block","src":"4037:674:18","statements":[{"assignments":[7005],"declarations":[{"constant":false,"id":7005,"mutability":"mutable","name":"totalItemCount","nameLocation":"4050:14:18","nodeType":"VariableDeclaration","scope":7103,"src":"4045:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7004,"name":"uint","nodeType":"ElementaryTypeName","src":"4045:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7007,"initialValue":{"id":7006,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"4067:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4045:31:18"},{"assignments":[7009],"declarations":[{"constant":false,"id":7009,"mutability":"mutable","name":"itemCount","nameLocation":"4089:9:18","nodeType":"VariableDeclaration","scope":7103,"src":"4084:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7008,"name":"uint","nodeType":"ElementaryTypeName","src":"4084:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7011,"initialValue":{"hexValue":"30","id":7010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4101:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4084:18:18"},{"assignments":[7013],"declarations":[{"constant":false,"id":7013,"mutability":"mutable","name":"currentIndex","nameLocation":"4115:12:18","nodeType":"VariableDeclaration","scope":7103,"src":"4110:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7012,"name":"uint","nodeType":"ElementaryTypeName","src":"4110:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7015,"initialValue":{"hexValue":"30","id":7014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4130:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4110:21:18"},{"body":{"id":7041,"nodeType":"Block","src":"4183:134:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7026,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"4229:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":7030,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"4244:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4244:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4229:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":7031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4251:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6567,"src":"4229:27:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7032,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4260:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4264:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4260:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4229:41:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7040,"nodeType":"IfStatement","src":"4225:84:18","trueBody":{"id":7039,"nodeType":"Block","src":"4272:37:18","statements":[{"expression":{"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7035,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"4284:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4297:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4284:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7038,"nodeType":"ExpressionStatement","src":"4284:14:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7020,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"4158:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7021,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"4162:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4158:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7042,"initializationExpression":{"assignments":[7017],"declarations":[{"constant":false,"id":7017,"mutability":"mutable","name":"i","nameLocation":"4151:1:18","nodeType":"VariableDeclaration","scope":7042,"src":"4146:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7016,"name":"uint","nodeType":"ElementaryTypeName","src":"4146:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7019,"initialValue":{"hexValue":"30","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4146:10:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4178:3:18","subExpression":{"id":7023,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7017,"src":"4178:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7025,"nodeType":"ExpressionStatement","src":"4178:3:18"},"nodeType":"ForStatement","src":"4141:176:18"},{"assignments":[7047],"declarations":[{"constant":false,"id":7047,"mutability":"mutable","name":"items","nameLocation":"4345:5:18","nodeType":"VariableDeclaration","scope":7103,"src":"4325:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem[]"},"typeName":{"baseType":{"id":7045,"nodeType":"UserDefinedTypeName","pathNode":{"id":7044,"name":"MarketItem","nameLocations":["4325:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"4325:10:18"},"referencedDeclaration":6572,"src":"4325:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":7046,"nodeType":"ArrayTypeName","src":"4325:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}},"visibility":"internal"}],"id":7054,"initialValue":{"arguments":[{"id":7052,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7009,"src":"4370:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4353:16:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct NFTMarketplace.MarketItem memory[] memory)"},"typeName":{"baseType":{"id":7049,"nodeType":"UserDefinedTypeName","pathNode":{"id":7048,"name":"MarketItem","nameLocations":["4357:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"4357:10:18"},"referencedDeclaration":6572,"src":"4357:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":7050,"nodeType":"ArrayTypeName","src":"4357:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4353:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4325:55:18"},{"body":{"id":7099,"nodeType":"Block","src":"4430:255:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7065,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"4445:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":7069,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"4460:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4464:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4460:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4445:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":7070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4467:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":6567,"src":"4445:27:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4476:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4480:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4476:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4445:41:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7098,"nodeType":"IfStatement","src":"4441:236:18","trueBody":{"id":7097,"nodeType":"Block","src":"4488:189:18","statements":[{"assignments":[7075],"declarations":[{"constant":false,"id":7075,"mutability":"mutable","name":"currentId","nameLocation":"4505:9:18","nodeType":"VariableDeclaration","scope":7097,"src":"4500:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7074,"name":"uint","nodeType":"ElementaryTypeName","src":"4500:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7079,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7076,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"4517:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4521:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4517:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4500:22:18"},{"assignments":[7082],"declarations":[{"constant":false,"id":7082,"mutability":"mutable","name":"currentItem","nameLocation":"4553:11:18","nodeType":"VariableDeclaration","scope":7097,"src":"4534:30:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"},"typeName":{"id":7081,"nodeType":"UserDefinedTypeName","pathNode":{"id":7080,"name":"MarketItem","nameLocations":["4534:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"4534:10:18"},"referencedDeclaration":6572,"src":"4534:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"visibility":"internal"}],"id":7086,"initialValue":{"baseExpression":{"id":7083,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"4567:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":7085,"indexExpression":{"id":7084,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"4582:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4567:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4534:58:18"},{"expression":{"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7087,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"4604:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"id":7089,"indexExpression":{"id":7088,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"4610:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4604:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7090,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"4626:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem storage pointer"}},"src":"4604:33:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"id":7092,"nodeType":"ExpressionStatement","src":"4604:33:18"},{"expression":{"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7093,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7013,"src":"4649:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4665:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4649:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7096,"nodeType":"ExpressionStatement","src":"4649:17:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7059,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"4405:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7060,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"4409:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4405:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7100,"initializationExpression":{"assignments":[7056],"declarations":[{"constant":false,"id":7056,"mutability":"mutable","name":"i","nameLocation":"4398:1:18","nodeType":"VariableDeclaration","scope":7100,"src":"4393:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7055,"name":"uint","nodeType":"ElementaryTypeName","src":"4393:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7058,"initialValue":{"hexValue":"30","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4402:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4393:10:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4425:3:18","subExpression":{"id":7062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7056,"src":"4425:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7064,"nodeType":"ExpressionStatement","src":"4425:3:18"},"nodeType":"ForStatement","src":"4388:297:18"},{"expression":{"id":7101,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"4699:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"functionReturnParameters":7003,"id":7102,"nodeType":"Return","src":"4692:12:18"}]},"functionSelector":"202e3740","id":7104,"implemented":true,"kind":"function","modifiers":[],"name":"fetchMyNFTs","nameLocation":"3981:11:18","nodeType":"FunctionDefinition","parameters":{"id":6998,"nodeType":"ParameterList","parameters":[],"src":"3992:2:18"},"returnParameters":{"id":7003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7002,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7104,"src":"4016:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem[]"},"typeName":{"baseType":{"id":7000,"nodeType":"UserDefinedTypeName","pathNode":{"id":6999,"name":"MarketItem","nameLocations":["4016:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"4016:10:18"},"referencedDeclaration":6572,"src":"4016:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":7001,"nodeType":"ArrayTypeName","src":"4016:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}},"visibility":"internal"}],"src":"4015:21:18"},"scope":7212,"src":"3972:739:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7210,"nodeType":"Block","src":"4787:649:18","statements":[{"assignments":[7112],"declarations":[{"constant":false,"id":7112,"mutability":"mutable","name":"totalItemCount","nameLocation":"4800:14:18","nodeType":"VariableDeclaration","scope":7210,"src":"4795:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7111,"name":"uint","nodeType":"ElementaryTypeName","src":"4795:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7114,"initialValue":{"id":7113,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"4817:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4795:31:18"},{"assignments":[7116],"declarations":[{"constant":false,"id":7116,"mutability":"mutable","name":"itemCount","nameLocation":"4839:9:18","nodeType":"VariableDeclaration","scope":7210,"src":"4834:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7115,"name":"uint","nodeType":"ElementaryTypeName","src":"4834:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7118,"initialValue":{"hexValue":"30","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4851:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4834:18:18"},{"assignments":[7120],"declarations":[{"constant":false,"id":7120,"mutability":"mutable","name":"currentIndex","nameLocation":"4865:12:18","nodeType":"VariableDeclaration","scope":7210,"src":"4860:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7119,"name":"uint","nodeType":"ElementaryTypeName","src":"4860:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7122,"initialValue":{"hexValue":"30","id":7121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4880:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4860:21:18"},{"body":{"id":7148,"nodeType":"Block","src":"4932:103:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7133,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"4946:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":7137,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"4961:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4965:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4961:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4946:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":7138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4968:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6565,"src":"4946:28:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4978:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4982:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4978:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4946:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7147,"nodeType":"IfStatement","src":"4942:85:18","trueBody":{"id":7146,"nodeType":"Block","src":"4990:37:18","statements":[{"expression":{"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7142,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"5002:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5015:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5002:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7145,"nodeType":"ExpressionStatement","src":"5002:14:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"4907:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7128,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"4911:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4907:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7149,"initializationExpression":{"assignments":[7124],"declarations":[{"constant":false,"id":7124,"mutability":"mutable","name":"i","nameLocation":"4900:1:18","nodeType":"VariableDeclaration","scope":7149,"src":"4895:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7123,"name":"uint","nodeType":"ElementaryTypeName","src":"4895:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7126,"initialValue":{"hexValue":"30","id":7125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4904:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4895:10:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4927:3:18","subExpression":{"id":7130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"4927:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7132,"nodeType":"ExpressionStatement","src":"4927:3:18"},"nodeType":"ForStatement","src":"4890:145:18"},{"assignments":[7154],"declarations":[{"constant":false,"id":7154,"mutability":"mutable","name":"items","nameLocation":"5063:5:18","nodeType":"VariableDeclaration","scope":7210,"src":"5043:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem[]"},"typeName":{"baseType":{"id":7152,"nodeType":"UserDefinedTypeName","pathNode":{"id":7151,"name":"MarketItem","nameLocations":["5043:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"5043:10:18"},"referencedDeclaration":6572,"src":"5043:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":7153,"nodeType":"ArrayTypeName","src":"5043:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}},"visibility":"internal"}],"id":7161,"initialValue":{"arguments":[{"id":7159,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"5088:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5071:16:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct NFTMarketplace.MarketItem memory[] memory)"},"typeName":{"baseType":{"id":7156,"nodeType":"UserDefinedTypeName","pathNode":{"id":7155,"name":"MarketItem","nameLocations":["5075:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"5075:10:18"},"referencedDeclaration":6572,"src":"5075:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":7157,"nodeType":"ArrayTypeName","src":"5075:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5071:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5043:55:18"},{"body":{"id":7206,"nodeType":"Block","src":"5148:255:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7172,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5162:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":7176,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7173,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"5177:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5177:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"id":7177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5184:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6565,"src":"5162:28:18","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"5194:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5198:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5194:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5162:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7205,"nodeType":"IfStatement","src":"5158:237:18","trueBody":{"id":7204,"nodeType":"Block","src":"5206:189:18","statements":[{"assignments":[7182],"declarations":[{"constant":false,"id":7182,"mutability":"mutable","name":"currentId","nameLocation":"5223:9:18","nodeType":"VariableDeclaration","scope":7204,"src":"5218:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7181,"name":"uint","nodeType":"ElementaryTypeName","src":"5218:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7186,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"5235:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5239:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5235:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5218:22:18"},{"assignments":[7189],"declarations":[{"constant":false,"id":7189,"mutability":"mutable","name":"currentItem","nameLocation":"5271:11:18","nodeType":"VariableDeclaration","scope":7204,"src":"5252:30:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"},"typeName":{"id":7188,"nodeType":"UserDefinedTypeName","pathNode":{"id":7187,"name":"MarketItem","nameLocations":["5252:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"5252:10:18"},"referencedDeclaration":6572,"src":"5252:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"visibility":"internal"}],"id":7193,"initialValue":{"baseExpression":{"id":7190,"name":"idToMarketItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"5285:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_MarketItem_$6572_storage_$","typeString":"mapping(uint256 => struct NFTMarketplace.MarketItem storage ref)"}},"id":7192,"indexExpression":{"id":7191,"name":"currentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"5300:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5285:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage","typeString":"struct NFTMarketplace.MarketItem storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5252:58:18"},{"expression":{"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7194,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"5322:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"id":7196,"indexExpression":{"id":7195,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"5328:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5322:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7197,"name":"currentItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"5344:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem storage pointer"}},"src":"5322:33:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory"}},"id":7199,"nodeType":"ExpressionStatement","src":"5322:33:18"},{"expression":{"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7200,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7120,"src":"5367:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5383:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5367:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7203,"nodeType":"ExpressionStatement","src":"5367:17:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"5123:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7167,"name":"totalItemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"5127:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5123:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7207,"initializationExpression":{"assignments":[7163],"declarations":[{"constant":false,"id":7163,"mutability":"mutable","name":"i","nameLocation":"5116:1:18","nodeType":"VariableDeclaration","scope":7207,"src":"5111:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7162,"name":"uint","nodeType":"ElementaryTypeName","src":"5111:4:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7165,"initialValue":{"hexValue":"30","id":7164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5120:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5111:10:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5143:3:18","subExpression":{"id":7169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"5143:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7171,"nodeType":"ExpressionStatement","src":"5143:3:18"},"nodeType":"ForStatement","src":"5106:297:18"},{"expression":{"id":7208,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"5424:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem memory[] memory"}},"functionReturnParameters":7110,"id":7209,"nodeType":"Return","src":"5417:12:18"}]},"functionSelector":"45f8fa80","id":7211,"implemented":true,"kind":"function","modifiers":[],"name":"fetchItemsListed","nameLocation":"4726:16:18","nodeType":"FunctionDefinition","parameters":{"id":7105,"nodeType":"ParameterList","parameters":[],"src":"4742:2:18"},"returnParameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7211,"src":"4766:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_memory_ptr_$dyn_memory_ptr","typeString":"struct NFTMarketplace.MarketItem[]"},"typeName":{"baseType":{"id":7107,"nodeType":"UserDefinedTypeName","pathNode":{"id":7106,"name":"MarketItem","nameLocations":["4766:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":6572,"src":"4766:10:18"},"referencedDeclaration":6572,"src":"4766:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_MarketItem_$6572_storage_ptr","typeString":"struct NFTMarketplace.MarketItem"}},"id":7108,"nodeType":"ArrayTypeName","src":"4766:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MarketItem_$6572_storage_$dyn_storage_ptr","typeString":"struct NFTMarketplace.MarketItem[]"}},"visibility":"internal"}],"src":"4765:21:18"},"scope":7212,"src":"4717:719:18","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7213,"src":"197:5241:18","usedErrors":[79,84,93,98,103,110,115,120],"usedEvents":[19,26,1141,1150,1159,6584,6594]}],"src":"32:5408:18"}}},"contracts":{"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":""},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":""},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x2b27b58570ff2456c7e65022a356c7e4f205bfabf95d0e870855a86587bb1356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51268bd4266abe09ec07cac04b84c63ed97d2f847fd821e681428b1df7991b1\",\"dweb:/ipfs/QmQBHj8tsrtiXBdegQZeqcxmBEQd2PMzPSKQ5jUELedEHb\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n","bytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"deployedBytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\"\nobject \"ERC721Utils_1491\" {\n    code {\n        {\n            /// @src 9:431:1919  \"library ERC721Utils {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ERC721Utils_1491_deployed\")\n            codecopy(_1, dataoffset(\"ERC721Utils_1491_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\"\n    object \"ERC721Utils_1491_deployed\" {\n        code {\n            {\n                /// @src 9:431:1919  \"library ERC721Utils {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f1efc6c786136e499b0947cfd60cfa98d56fce325ff077a944490b0d3c60264064736f6c634300081a0033\"\n    }\n}\n","hash":"173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n","bytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"deployedBytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/utils/Panic.sol\"\nobject \"Panic_1573\" {\n    code {\n        {\n            /// @src 11:657:1972  \"library Panic {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Panic_1573_deployed\")\n            codecopy(_1, dataoffset(\"Panic_1573_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/utils/Panic.sol\"\n    object \"Panic_1573_deployed\" {\n        code {\n            {\n                /// @src 11:657:1972  \"library Panic {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220875cb6d7fa60a2f3d1ac62594dc3110765650535dcdb720d44e8917b1f400fc164736f6c634300081a0033\"\n    }\n}\n","hash":"173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n","bytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"deployedBytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 12:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2975\" {\n    code {\n        {\n            /// @src 12:297:19277  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2975_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2975_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 12:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2975_deployed\" {\n        code {\n            {\n                /// @src 12:297:19277  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207eea2224760c0c0e41201dc22b412869cbc4a17dc2d31e2459f2565b817849ea64736f6c634300081a0033\"\n    }\n}\n","hash":"173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","evm":{"bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n","bytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"deployedBytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_4632\" {\n    code {\n        {\n            /// @src 15:281:32144  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_4632_deployed\")\n            codecopy(_1, dataoffset(\"Math_4632_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_4632_deployed\" {\n        code {\n            {\n                /// @src 15:281:32144  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201066a50bbf2708396eebc1116f27b5172b582c57e83b0d7b1ee702aeaf4617e264736f6c634300081a0033\"\n    }\n}\n","hash":"173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n","bytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"deployedBytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 16:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\nobject \"SafeCast_6397\" {\n    code {\n        {\n            /// @src 16:769:34942  \"library SafeCast {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SafeCast_6397_deployed\")\n            codecopy(_1, dataoffset(\"SafeCast_6397_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 16:\"@openzeppelin/contracts/utils/math/SafeCast.sol\"\n    object \"SafeCast_6397_deployed\" {\n        code {\n            {\n                /// @src 16:769:34942  \"library SafeCast {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220da4a91c9f056c61d4c0751a2be9ad4e7624a803d5107c981062952aae4310fea64736f6c634300081a0033\"\n    }\n}\n","hash":"173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 4/65616 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 220\n// Code size = 663 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20000]\n     5: jump @20 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30030\n    14: i32 a0 = a0 + 0\n    16: ecalli 4 // 'set_immutable_data'\n    18: jump @20\n      : @2 [@dyn 1] (gas: 71)\n    21: a1 = reverse s1\n    23: a2 = reverse s0\n    25: a3 = u64 [sp]\n    27: a3 = reverse a3\n    29: a4 = u64 [sp + 0x8]\n    32: a4 = reverse a4\n    34: u8 [a0 + 0x18] = a4\n    37: u8 [a0 + 0x10] = a3\n    40: u8 [a0 + 0x8] = a2\n    43: u8 [a0] = a1\n    45: a5 = a4 >> 0x38\n    48: u8 [a0 + 0x1f] = a5\n    51: a5 = a4 >> 0x30\n    54: u8 [a0 + 0x1e] = a5\n    57: a5 = a4 >> 0x28\n    60: u8 [a0 + 0x1d] = a5\n    63: a5 = a4 >> 0x20\n    66: u8 [a0 + 0x1c] = a5\n    69: a5 = a4 >> 0x18\n    72: u8 [a0 + 0x1b] = a5\n    75: a5 = a4 >> 0x10\n    78: u8 [a0 + 0x1a] = a5\n    81: a4 = a4 >> 0x8\n    84: u8 [a0 + 0x19] = a4\n    87: a4 = a3 >> 0x38\n    90: u8 [a0 + 0x17] = a4\n    93: a4 = a3 >> 0x30\n    96: u8 [a0 + 0x16] = a4\n    99: a4 = a3 >> 0x28\n   102: u8 [a0 + 0x15] = a4\n   105: a4 = a3 >> 0x20\n   108: u8 [a0 + 0x14] = a4\n   111: a4 = a3 >> 0x18\n   114: u8 [a0 + 0x13] = a4\n   117: a4 = a3 >> 0x10\n   120: u8 [a0 + 0x12] = a4\n   123: a3 = a3 >> 0x8\n   126: u8 [a0 + 0x11] = a3\n   129: a3 = a2 >> 0x38\n   132: u8 [a0 + 0xf] = a3\n   135: a3 = a2 >> 0x30\n   138: u8 [a0 + 0xe] = a3\n   141: a3 = a2 >> 0x28\n   144: u8 [a0 + 0xd] = a3\n   147: a3 = a2 >> 0x20\n   150: u8 [a0 + 0xc] = a3\n   153: a3 = a2 >> 0x18\n   156: u8 [a0 + 0xb] = a3\n   159: a3 = a2 >> 0x10\n   162: u8 [a0 + 0xa] = a3\n   165: a2 = a2 >> 0x8\n   168: u8 [a0 + 0x9] = a2\n   171: a2 = a1 >> 0x38\n   174: u8 [a0 + 0x7] = a2\n   177: a2 = a1 >> 0x30\n   180: u8 [a0 + 0x6] = a2\n   183: a2 = a1 >> 0x28\n   186: u8 [a0 + 0x5] = a2\n   189: a2 = a1 >> 0x20\n   192: u8 [a0 + 0x4] = a2\n   195: a2 = a1 >> 0x18\n   198: u8 [a0 + 0x3] = a2\n   201: a2 = a1 >> 0x10\n   204: u8 [a0 + 0x2] = a2\n   207: a1 = a1 >> 0x8\n   210: u8 [a0 + 0x1] = a1\n   213: ra = u64 [sp + 0x20]\n   216: s0 = u64 [sp + 0x18]\n   219: s1 = u64 [sp + 0x10]\n   222: sp = sp + 0x28\n   225: ret\n      : @3 (gas: 2)\n   227: i32 a2 = a0 >> 0x10\n   230: jump @8 if a2 != 0\n      : @4 (gas: 4)\n   233: a1 = a1 + a0\n   236: i32 a1 = a1 + 0x1f\n   239: a1 = a1 & 0xffffffffffffffe0\n   242: jump @8 if a1 >u 65536\n      : @5 (gas: 3)\n   248: a2 = 0x20008\n   253: a3 = i32 [0x20008]\n   258: jump @7 if a3 >=u a1\n      : @6 (gas: 2)\n   261: u32 [0x20008] = a1\n   266: fallthrough\n      : @7 (gas: 4)\n   267: a1 = 0x20010\n   272: i32 a0 = a0 + 0\n   274: a0 = a0 + a1\n   277: ret\n      : @8 (gas: 1)\n   279: trap\n      : @9 (gas: 6)\n   280: sp = sp + 0xfffffffffffffff0\n   283: u64 [sp + 0x8] = ra\n   286: u64 [sp] = s0\n   288: s0 = a0 & 0x1\n   291: ecalli 2 // 'call_data_size'\n   293: fallthrough\n      : @10 (gas: 2)\n   294: u32 [0x20004] = a0\n   299: jump @12 if s0 == 0\n      : @11 (gas: 1)\n   302: ra = 4, jump @13\n      : @12 [@dyn 2] (gas: 1)\n   306: ra = 6, jump @22\n      : @13 [@dyn 3] (gas: 26)\n   311: sp = sp + 0xffffffffffffffa0\n   314: u64 [sp + 0x58] = ra\n   317: u64 [sp + 0x50] = s0\n   320: u64 [sp + 0x48] = s1\n   323: s0 = sp + 0x60\n   326: sp = sp & 0xffffffffffffffe0\n   329: u64 [sp + 24] = 0\n   332: u64 [sp + 16] = 0\n   335: u64 [sp + 0] = 0x80\n   339: a0 = 0x40\n   342: a1 = sp\n   344: u64 [sp + 8] = 0\n   347: ra = 0x8\n   350: sp = sp + 0xffffffffffffffd8\n   353: u64 [sp + 0x20] = ra\n   356: u64 [sp + 0x18] = s0\n   359: u64 [sp + 0x10] = s1\n   362: a2 = u64 [a1]\n   364: u64 [sp + 0x8] = a2\n   367: a2 = u64 [a1 + 0x8]\n   370: u64 [sp] = a2\n   372: s0 = u64 [a1 + 0x10]\n   375: s1 = u64 [a1 + 0x18]\n   378: a1 = 0x20\n   381: ra = 0x2\n   384: jump @3\n      : @14 [@dyn 4] (gas: 7)\n   387: u64 [sp + 56] = 0\n   390: u64 [sp + 48] = 0\n   393: u64 [sp + 40] = 0\n   396: u64 [sp + 32] = 0\n   399: i32 a0 = sp + 0x20\n   402: ecalli 5 // 'value_transferred'\n   404: fallthrough\n      : @15 (gas: 8)\n   405: a0 = u64 [sp + 0x30]\n   408: a1 = u64 [sp + 0x38]\n   411: a2 = u64 [sp + 0x28]\n   414: a3 = u64 [sp + 0x20]\n   417: a1 = a1 | a2\n   420: a0 = a0 | a3\n   423: a0 = a0 | a1\n   426: jump @17 if a0 == 0\n      : @16 (gas: 7)\n   429: a1 = 0x20010\n   434: i32 a1 = a1 + 0\n   436: a0 = 0x1\n   439: a2 = 0\n   441: ra = 0xc\n   444: ecalli 3 // 'seal_return'\n   446: jump @22\n      : @17 (gas: 2)\n   449: a1 = i32 [0x20008]\n   454: jump @19 if a1 >u 127\n      : @18 (gas: 2)\n   458: u32 [0x20008] = 0x80\n   465: fallthrough\n      : @19 (gas: 26)\n   466: a0 = 0x20010\n   471: i32 a0 = a0 + 0x80\n   475: a1 = 0\n   477: a2 = 0\n   479: ecalli 1 // 'call_data_copy'\n   481: s1 = 0x30010\n   486: i32 a0 = s1 + 0\n   488: ecalli 0 // 'address'\n   489: a0 = u64 [0x30018]\n   494: a1 = i32 [0x30020]\n   499: a2 = u64 [0x30010]\n   504: a0 = reverse a0\n   506: a3 = a0 << 0x20\n   509: a1 = reverse a1\n   511: a1 = a1 >> 0x20\n   514: a1 = a1 | a3\n   517: a0 = a0 >> 0x20\n   520: a2 = reverse a2\n   522: a4 = a2 << 0x20\n   525: a0 = a0 | a4\n   528: a2 = a2 >> 0x20\n   531: u64 [0x30048] = 0\n   536: u64 [0x30040] = a2\n   541: u64 [0x30038] = a0\n   546: u64 [0x30030] = a1\n   551: jump @0\n      : @20 (gas: 3)\n   554: a0 = 0x80\n   558: a1 = 0\n   560: ra = 10, jump @3\n      : @21 [@dyn 5] (gas: 6)\n   565: i32 a1 = a0 + 0\n   567: a0 = 0\n   569: a2 = 0\n   571: ra = 0xc\n   574: ecalli 3 // 'seal_return'\n   576: fallthrough\n      : @22 [@dyn 6] (gas: 10)\n   577: sp = sp + 0xfffffffffffffff8\n   580: u64 [sp] = ra\n   582: a1 = 0x20010\n   587: i32 a1 = a1 + 0\n   589: a0 = 0x1\n   592: a2 = 0\n   594: ecalli 3 // 'seal_return'\n   596: a0 = 0\n   598: ra = 0xe\n   601: jump @9\n      : @23 [export #0: 'call'] (gas: 2)\n   604: a0 = 0\n   606: ra = 14, jump @9\n      : @24 [@dyn 7] [export #1: 'deploy'] (gas: 2)\n   611: a0 = 0x1\n   614: ra = 16, jump @9\n      : @25 [@dyn 8] (gas: 16)\n   619: a4 = u64 [a3]\n   621: u64 [sp + 0x18] = a4\n   624: a4 = u64 [a3 + 0x8]\n   627: u64 [sp + 0x20] = a4\n   630: a4 = u64 [a3 + 0x10]\n   633: u64 [sp + 0x28] = a4\n   636: a3 = u64 [a3 + 0x18]\n   639: u64 [sp + 0x30] = a3\n   642: s1 = u64 [a2]\n   644: a3 = u64 [a2 + 0x8]\n   647: u64 [sp] = a3\n   649: a3 = u64 [a2 + 0x10]\n   652: u64 [sp + 0x8] = a3\n   655: a2 = u64 [a2 + 0x18]\n   658: u64 [sp + 0x10] = a2\n   661: jump [t0]\n","bytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"deployedBytecode":{"object":"50564d00009d03000000000000010700c15000c00080030420000000046a06000000000700000015000000230000002e000000400000006164647265737363616c6c5f646174615f636f707963616c6c5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f6461746176616c75655f7472616e73666572726564051102825c0463616c6c8263066465706c6f790682fe0802829715003201370183013502410263026b02390800000251082502330730000383770a042818026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832008b7910520931c8780883881f8488e05638000001253309080002390a080002ae8a093d080800020133081000028377c887073200009511f07b10087b158475010a02013d07040002510507501004095010060f019511a07b10587b15507b16489515608411e04911184911104901800033074064184911083300089511d87b10207b15187b161082897b19088289087b198285108286183308203300022863ff4911384911304911284911208317200a0501821730821838821928821a20d49808d4a707d4870751071733081000028388330701330933000c0a03288300390808000256187f0c2003080002800001330710000283778000330833090a01330610000383670a3a0718000339082000033a091000036f77977a206f88988820d4a8089877206f99979b20d4b70798992021034800033e094000033e073800033e0830000328d9fd33078000330850100ab3fe83783307330933000c0a03019511f87b103308100002838833070133090a03330733000e28bffe330750100ebafe330701501010b2fe82ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b191032022142a52a2529499224499224499224499224499224499224499224494a920421240ca5496948842449924849929494244992344992249452420486a8424308a5242509218444a14a532855524828499294922400"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 17:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_6541\" {\n    code {\n        {\n            /// @src 17:258:2612  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_6541_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_6541_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 17:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_6541_deployed\" {\n        code {\n            {\n                /// @src 17:258:2612  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122016ef2ce8f39cfc75c98078c3b0698c2ebe4d9eee57a45656cf0979ec79b18ba164736f6c634300081a0033\"\n    }\n}\n","hash":"173b0d399f1248ac064523042527c41383f3069767308e67be13a294546b6aee","factoryDependencies":{}}},"contracts/NftMarketplace.sol":{"NFTMarketplace":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"bool","name":"sold","type":"bool"}],"name":"MarketItemCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"NFTPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"string","name":"tokenURI","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"createToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"fetchItemsListed","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"}],"internalType":"struct NFTMarketplace.MarketItem[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchMarketItems","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"}],"internalType":"struct NFTMarketplace.MarketItem[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchMyNFTs","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address payable","name":"seller","type":"address"},{"internalType":"address payable","name":"owner","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"}],"internalType":"struct NFTMarketplace.MarketItem[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getListingPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"resellToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_listingPrice","type":"uint256"}],"name":"updateListingPrice","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.1.0-dev.16+commit.0421869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"name\":\"MarketItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchItemsListed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMyNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"}],\"internalType\":\"struct NFTMarketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"resellToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_listingPrice\",\"type\":\"uint256\"}],\"name\":\"updateListingPrice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftMarketplace.sol\":\"NFTMarketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f\",\"dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x2b27b58570ff2456c7e65022a356c7e4f205bfabf95d0e870855a86587bb1356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51268bd4266abe09ec07cac04b84c63ed97d2f847fd821e681428b1df7991b1\",\"dweb:/ipfs/QmQBHj8tsrtiXBdegQZeqcxmBEQd2PMzPSKQ5jUELedEHb\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NftMarketplace.sol\":{\"keccak256\":\"0xe0484d43ea7d78922220b69cc85c29bc3469c18023788368c13e186760dea133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4118a642fa822c7428c65414b238d4d7d9c0203adfb48bbb7775e9c02b9fc0d\",\"dweb:/ipfs/QmUwQPGt1PmHDhLBhdciwYPeBdeFnDSSUcxLBHrT8Re8nA\"]}},\"version\":1}","solc_version":"0.8.26+commit.8a97fa7a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 520/66112 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 15824\n// Code size = 56493 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20210]\n   117: jump @226 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30240\n   126: i32 a0 = a0 + 0\n   128: ecalli 14 // 'set_immutable_data'\n   130: jump @226\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @34\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @34\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 43)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 8 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: t0 = 6, jump @2004\n      : @22 [@dyn 3] (gas: 1)\n   807: ret\n      : @23 (gas: 40)\n   809: sp = sp + 0xffffffffffffffa0\n   812: u64 [sp + 0x58] = ra\n   815: u64 [sp + 0x50] = s0\n   818: s0 = sp + 0x60\n   821: sp = sp & 0xffffffffffffffe0\n   824: t0 = u64 [a0]\n   826: a3 = u64 [a0 + 0x8]\n   829: a4 = u64 [a0 + 0x10]\n   832: a0 = u64 [a0 + 0x18]\n   835: t1 = u64 [a1]\n   837: a2 = u64 [a1 + 0x8]\n   840: a5 = u64 [a1 + 0x10]\n   843: a1 = u64 [a1 + 0x18]\n   846: t2 = reverse a0\n   848: a4 = reverse a4\n   850: a3 = reverse a3\n   852: a0 = reverse t0\n   854: t0 = reverse a1\n   856: a5 = reverse a5\n   858: a2 = reverse a2\n   860: a1 = reverse t1\n   862: u64 [sp + 0x18] = a0\n   865: u64 [sp + 0x10] = a3\n   868: u64 [sp + 0x8] = a4\n   871: u64 [sp] = t2\n   873: u64 [sp + 0x38] = a1\n   876: u64 [sp + 0x30] = a2\n   879: u64 [sp + 0x28] = a5\n   882: u64 [sp + 0x20] = t0\n   885: i32 a1 = sp + 0\n   887: i32 a3 = sp + 0x20\n   890: a2 = 0xffffffffffffffff\n   893: a4 = 0x20\n   896: a0 = 0\n   898: ecalli 15 // 'set_storage'\n   900: sp = s0 + 0xffffffffffffffa0\n   903: ra = u64 [sp + 0x58]\n   906: s0 = u64 [sp + 0x50]\n   909: sp = sp + 0x60\n   912: ret\n      : @24 [@dyn 4] (gas: 1)\n   914: t0 = 10, jump @1992\n      : @25 [@dyn 5] (gas: 10)\n   920: u64 [sp + 0x38] = a4\n   923: u64 [sp + 0x30] = a3\n   926: u64 [sp + 0x28] = a2\n   929: u64 [sp + 0x20] = a1\n   932: i32 a2 = a0 + 0\n   934: i32 a3 = s1 + 0\n   936: i32 a0 = sp + 0x20\n   939: a1 = 0x1\n   942: ecalli 7 // 'deposit_event'\n   944: t0 = 12, jump @2004\n      : @26 [@dyn 6] (gas: 1)\n   950: ret\n      : @27 [@dyn 7] (gas: 1)\n   952: t0 = 16, jump @1992\n      : @28 [@dyn 8] (gas: 27)\n   958: u64 [sp + 0x58] = a4\n   961: u64 [sp + 0x50] = a3\n   964: u64 [sp + 0x48] = a2\n   967: u64 [sp + 0x40] = a1\n   970: a1 = u64 [sp + 0x20]\n   973: a1 = reverse a1\n   975: a2 = u64 [sp + 0x28]\n   978: a2 = reverse a2\n   980: a3 = u64 [sp + 0x30]\n   983: a3 = reverse a3\n   985: a4 = u64 [sp + 0x38]\n   988: a4 = reverse a4\n   990: u64 [sp + 0x78] = a4\n   993: u64 [sp + 0x70] = a3\n   996: u64 [sp + 0x68] = a2\n   999: u64 [sp + 0x60] = a1\n  1002: i32 a2 = a0 + 0\n  1004: i32 a3 = s1 + 0\n  1006: i32 a0 = sp + 0x40\n  1009: a1 = 0x2\n  1012: ecalli 7 // 'deposit_event'\n  1014: sp = s0 + 0xffffffffffffff60\n  1018: ra = u64 [sp + 0x98]\n  1022: s0 = u64 [sp + 0x90]\n  1026: s1 = u64 [sp + 0x88]\n  1030: sp = sp + 0xa0\n  1034: ret\n      : @29 [@dyn 9] (gas: 2)\n  1036: u64 [sp + 0x38] = a1\n  1039: ra = 20, jump @34\n      : @30 [@dyn 10] (gas: 46)\n  1044: a1 = reverse s1\n  1046: u64 [sp + 0x78] = a1\n  1049: a1 = u64 [sp]\n  1051: a1 = reverse a1\n  1053: u64 [sp + 0x70] = a1\n  1056: a1 = u64 [sp + 0x8]\n  1059: a1 = reverse a1\n  1061: u64 [sp + 0x68] = a1\n  1064: a1 = u64 [sp + 0x10]\n  1067: a1 = reverse a1\n  1069: u64 [sp + 0x60] = a1\n  1072: a1 = u64 [sp + 0x18]\n  1075: a1 = reverse a1\n  1077: u64 [sp + 0x98] = a1\n  1081: a1 = u64 [sp + 0x20]\n  1084: a1 = reverse a1\n  1086: u64 [sp + 0x90] = a1\n  1090: a1 = u64 [sp + 0x28]\n  1093: a1 = reverse a1\n  1095: u64 [sp + 0x88] = a1\n  1099: a1 = u64 [sp + 0x30]\n  1102: a1 = reverse a1\n  1104: u64 [sp + 0x80] = a1\n  1108: a1 = u64 [sp + 0x40]\n  1111: a1 = reverse a1\n  1113: u64 [sp + 0xb8] = a1\n  1117: a1 = u64 [sp + 0x48]\n  1120: a1 = reverse a1\n  1122: u64 [sp + 0xb0] = a1\n  1126: a1 = u64 [sp + 0x50]\n  1129: a1 = reverse a1\n  1131: u64 [sp + 0xa8] = a1\n  1135: a1 = u64 [sp + 0x58]\n  1138: a1 = reverse a1\n  1140: u64 [sp + 0xa0] = a1\n  1144: i32 a2 = a0 + 0\n  1146: a3 = i32 [sp + 0x38]\n  1149: i32 a0 = sp + 0x60\n  1152: a1 = 0x3\n  1155: ecalli 7 // 'deposit_event'\n  1157: sp = s0 + 0xffffffffffffff20\n  1161: ra = u64 [sp + 0xd8]\n  1165: s0 = u64 [sp + 0xd0]\n  1169: s1 = u64 [sp + 0xc8]\n  1173: sp = sp + 0xe0\n  1177: ret\n      : @31 (gas: 23)\n  1179: sp = sp + 0xfffffffffffffee0\n  1183: u64 [sp + 0x118] = ra\n  1187: u64 [sp + 0x110] = s0\n  1191: u64 [sp + 0x108] = s1\n  1195: s0 = sp + 0x120\n  1199: sp = sp & 0xffffffffffffffe0\n  1202: s1 = u64 [a5]\n  1204: u64 [sp + 0x60] = s1\n  1207: s1 = u64 [a5 + 0x8]\n  1210: u64 [sp + 0x68] = s1\n  1213: s1 = u64 [a5 + 0x10]\n  1216: u64 [sp + 0x70] = s1\n  1219: a5 = u64 [a5 + 0x18]\n  1222: u64 [sp + 0x78] = a5\n  1225: a5 = u64 [a4]\n  1227: u64 [sp + 0x38] = a5\n  1230: a5 = u64 [a4 + 0x8]\n  1233: u64 [sp + 0x40] = a5\n  1236: a5 = u64 [a4 + 0x10]\n  1239: u64 [sp + 0x48] = a5\n  1242: a4 = u64 [a4 + 0x18]\n  1245: u64 [sp + 0x50] = a4\n  1248: t0 = 22, jump @1970\n      : @32 [@dyn 11] (gas: 2)\n  1254: u64 [sp + 0x58] = a1\n  1257: ra = 24, jump @34\n      : @33 [@dyn 12] (gas: 58)\n  1262: a1 = reverse s1\n  1264: u64 [sp + 0x98] = a1\n  1268: a1 = u64 [sp]\n  1270: a1 = reverse a1\n  1272: u64 [sp + 0x90] = a1\n  1276: a1 = u64 [sp + 0x8]\n  1279: a1 = reverse a1\n  1281: u64 [sp + 0x88] = a1\n  1285: a1 = u64 [sp + 0x10]\n  1288: a1 = reverse a1\n  1290: u64 [sp + 0x80] = a1\n  1294: a1 = u64 [sp + 0x18]\n  1297: a1 = reverse a1\n  1299: u64 [sp + 0xb8] = a1\n  1303: a1 = u64 [sp + 0x20]\n  1306: a1 = reverse a1\n  1308: u64 [sp + 0xb0] = a1\n  1312: a1 = u64 [sp + 0x28]\n  1315: a1 = reverse a1\n  1317: u64 [sp + 0xa8] = a1\n  1321: a1 = u64 [sp + 0x30]\n  1324: a1 = reverse a1\n  1326: u64 [sp + 0xa0] = a1\n  1330: a1 = u64 [sp + 0x38]\n  1333: a1 = reverse a1\n  1335: u64 [sp + 0xd8] = a1\n  1339: a1 = u64 [sp + 0x40]\n  1342: a1 = reverse a1\n  1344: u64 [sp + 0xd0] = a1\n  1348: a1 = u64 [sp + 0x48]\n  1351: a1 = reverse a1\n  1353: u64 [sp + 0xc8] = a1\n  1357: a1 = u64 [sp + 0x50]\n  1360: a1 = reverse a1\n  1362: u64 [sp + 0xc0] = a1\n  1366: a1 = u64 [sp + 0x60]\n  1369: a1 = reverse a1\n  1371: u64 [sp + 0xf8] = a1\n  1375: a1 = u64 [sp + 0x68]\n  1378: a1 = reverse a1\n  1380: u64 [sp + 0xf0] = a1\n  1384: a1 = u64 [sp + 0x70]\n  1387: a1 = reverse a1\n  1389: u64 [sp + 0xe8] = a1\n  1393: a1 = u64 [sp + 0x78]\n  1396: a1 = reverse a1\n  1398: u64 [sp + 0xe0] = a1\n  1402: i32 a2 = a0 + 0\n  1404: a3 = i32 [sp + 0x58]\n  1407: i32 a0 = sp + 0x80\n  1411: a1 = 0x4\n  1414: ecalli 7 // 'deposit_event'\n  1416: sp = s0 + 0xfffffffffffffee0\n  1420: ra = u64 [sp + 0x118]\n  1424: s0 = u64 [sp + 0x110]\n  1428: s1 = u64 [sp + 0x108]\n  1432: sp = sp + 0x120\n  1436: ret\n      : @34 (gas: 2)\n  1438: i32 a2 = a0 >> 0x10\n  1441: jump @39 if a2 != 0\n      : @35 (gas: 4)\n  1444: a1 = a1 + a0\n  1447: i32 a1 = a1 + 0x1f\n  1450: a1 = a1 & 0xffffffffffffffe0\n  1453: jump @39 if a1 >u 65536\n      : @36 (gas: 3)\n  1459: a2 = 0x2020c\n  1464: a3 = i32 [0x2020c]\n  1469: jump @38 if a3 >=u a1\n      : @37 (gas: 2)\n  1472: u32 [0x2020c] = a1\n  1477: fallthrough\n      : @38 (gas: 4)\n  1478: a1 = 0x20220\n  1483: i32 a0 = a0 + 0\n  1485: a0 = a0 + a1\n  1488: ret\n      : @39 (gas: 1)\n  1490: trap\n      : @40 (gas: 6)\n  1491: sp = sp + 0xfffffffffffffff0\n  1494: u64 [sp + 0x8] = ra\n  1497: u64 [sp] = s0\n  1499: s0 = a0 & 0x1\n  1502: ecalli 4 // 'call_data_size'\n  1504: fallthrough\n      : @41 (gas: 2)\n  1505: u32 [0x20208] = a0\n  1510: jump @43 if s0 == 0\n      : @42 (gas: 1)\n  1513: ra = 26, jump @44\n      : @43 [@dyn 13] (gas: 18)\n  1517: ra = 0x1c\n  1520: sp = sp + 0xfffffffffffffe10\n  1524: u64 [sp + 0x1e8] = ra\n  1528: u64 [sp + 0x1e0] = s0\n  1532: u64 [sp + 0x1d8] = s1\n  1536: s0 = sp + 0x1f0\n  1540: sp = sp + 0xffffffffffffc230\n  1544: sp = sp & 0xffffffffffffffe0\n  1547: s1 = sp\n  1549: a2 = s1 + 0x30d8\n  1553: u64 [a2 + 320] = 0\n  1557: u64 [a2 + 312] = 0\n  1561: u64 [a2 + 296] = 0x80\n  1567: a0 = 0x40\n  1570: a1 = s1 + 0x3200\n  1574: u64 [a2 + 304] = 0\n  1578: ra = 0xec\n  1582: jump @19\n      : @44 [@dyn 14] (gas: 15)\n  1585: sp = sp + 0xfffffffffffffe10\n  1589: u64 [sp + 0x1e8] = ra\n  1593: u64 [sp + 0x1e0] = s0\n  1597: u64 [sp + 0x1d8] = s1\n  1601: s0 = sp + 0x1f0\n  1605: sp = sp + 0xfffffffffffff950\n  1609: sp = sp & 0xffffffffffffffe0\n  1612: s1 = sp\n  1614: u64 [s1 + 1464] = 0\n  1618: u64 [s1 + 1456] = 0\n  1622: u64 [s1 + 1440] = 0x80\n  1628: a0 = 0x40\n  1631: a1 = s1 + 0x5a0\n  1635: u64 [s1 + 1448] = 0\n  1639: ra = 30, jump @19\n      : @45 [@dyn 15] (gas: 7)\n  1644: u64 [s1 + 1496] = 0\n  1648: u64 [s1 + 1488] = 0\n  1652: u64 [s1 + 1480] = 0\n  1656: u64 [s1 + 1472] = 0\n  1660: i32 a0 = s1 + 0x5c0\n  1664: ecalli 16 // 'value_transferred'\n  1666: fallthrough\n      : @46 (gas: 9)\n  1667: a4 = s1 + 0x500\n  1671: a0 = u64 [a4 + 0xd0]\n  1675: a1 = u64 [a4 + 0xd8]\n  1679: a2 = u64 [a4 + 0xc8]\n  1683: a3 = u64 [a4 + 0xc0]\n  1687: a1 = a1 | a2\n  1690: a0 = a0 | a3\n  1693: a0 = a0 | a1\n  1696: jump @48 if a0 == 0\n      : @47 (gas: 1)\n  1699: jump @186\n      : @48 (gas: 3)\n  1702: a0 = s1 + 0x580\n  1706: a1 = 0x40\n  1709: ra = 32, jump @17\n      : @49 [@dyn 16] (gas: 15)\n  1714: t1 = u64 [s1 + 0x598]\n  1718: a4 = u64 [s1 + 0x590]\n  1722: a5 = u64 [s1 + 0x588]\n  1726: t2 = u64 [s1 + 0x580]\n  1730: a0 = t1 >u 0\n  1732: a1 = a4 >u 0\n  1734: a1 = a0 if t1 != 0\n  1737: a0 = a5 >u 0\n  1739: a2 = t2 <u 0xffffffffffffffc0\n  1742: a2 = a2 ^ 0x1\n  1745: a2 = a0 if a5 != 0\n  1748: a0 = a4 | t1\n  1751: u64 [s1 + 0x118] = a0\n  1755: a2 = a1 if a0 != 0\n  1758: jump @51 if a2 == 0\n      : @50 (gas: 1)\n  1761: jump @187\n      : @51 (gas: 20)\n  1764: a0 = t2 + 0x40\n  1767: a1 = a0 <u t2\n  1770: a2 = a5 + a1\n  1773: a3 = a2 <u a5\n  1776: a3 = a1 if a1 == 0\n  1779: a3 = a3 + a4\n  1782: a1 = a3 <u a4\n  1785: t0 = t1 + a1\n  1788: a1 = s1 + 0x500\n  1792: u64 [a1 + 0x60] = a0\n  1795: u64 [a1 + 0x68] = a2\n  1798: u64 [a1 + 0x70] = a3\n  1801: a0 = 0x40\n  1804: a1 = s1 + 0x560\n  1808: u64 [s1 + 0x578] = t0\n  1812: u64 [s1 + 0xa0] = t1\n  1816: u64 [s1 + 0x98] = a4\n  1820: u64 [s1 + 0xa8] = a5\n  1824: u64 [s1 + 0xb0] = t2\n  1828: ra = 34, jump @19\n      : @52 [@dyn 17] (gas: 12)\n  1833: a0 = u64 [s1 + 0xb0]\n  1837: a2 = u64 [s1 + 0x98]\n  1841: a4 = a0 | a2\n  1844: a1 = u64 [s1 + 0xa0]\n  1848: a3 = u64 [s1 + 0xa8]\n  1852: a1 = a1 | a3\n  1855: a4 = a4 | a1\n  1858: a4 = a4 >> 0x20\n  1861: a1 = a1 | a2\n  1864: a1 = a1 << 0x20\n  1867: a1 = a1 | a4\n  1870: jump @54 if a1 == 0\n      : @53 (gas: 1)\n  1873: jump @185\n      : @54 (gas: 6)\n  1876: u64 [s1 + 1368] = 0\n  1880: u64 [s1 + 1360] = 0\n  1884: u64 [s1 + 1352] = 0\n  1888: a1 = s1 + 0x540\n  1892: u64 [s1 + 1344] = 0x9\n  1897: ra = 36, jump @19\n      : @55 [@dyn 18] (gas: 8)\n  1902: a2 = u64 [s1 + 0xb0]\n  1906: a0 = 0xffffffe0\n  1916: a0 = a2 <u a0\n  1919: a1 = u64 [s1 + 0xa8]\n  1923: a0 = 0 if a1 != 0\n  1925: a1 = u64 [s1 + 0x118]\n  1929: a0 = 0 if a1 != 0\n  1931: jump @57 if a0 != 0\n      : @56 (gas: 1)\n  1934: jump @185\n      : @57 (gas: 10)\n  1937: i32 a0 = a2 + 0x20\n  1940: a1 = u64 [0x20000]\n  1945: u64 [s1 + 1320] = 0\n  1949: u64 [s1 + 1312] = 0\n  1953: u64 [s1 + 0x538] = a1\n  1957: a2 = 0x5400000000000000\n  1967: a1 = s1 + 0x520\n  1971: u64 [s1 + 0x530] = a2\n  1975: u64 [s1 + 0xd0] = a0\n  1979: ra = 38, jump @19\n      : @58 [@dyn 19] (gas: 3)\n  1984: a0 = s1 + 0x500\n  1988: a1 = 0x40\n  1991: ra = 40, jump @17\n      : @59 [@dyn 20] (gas: 16)\n  1996: t2 = u64 [s1 + 0x518]\n  2000: a1 = s1 + 0x500\n  2004: a5 = u64 [a1 + 0x10]\n  2007: a4 = u64 [a1 + 0x8]\n  2010: a0 = u64 [a1]\n  2012: a2 = t2 >u 0\n  2014: a1 = a5 >u 0\n  2016: a1 = a2 if t2 != 0\n  2019: a3 = a4 >u 0\n  2021: a2 = a0 <u 0xffffffffffffffc0\n  2024: a2 = a2 ^ 0x1\n  2027: a2 = a3 if a4 != 0\n  2030: a3 = a5 | t2\n  2033: u64 [s1 + 0x118] = a3\n  2037: a2 = a1 if a3 != 0\n  2040: jump @61 if a2 == 0\n      : @60 (gas: 1)\n  2043: jump @193\n      : @61 (gas: 19)\n  2046: t1 = a0 + 0x40\n  2049: a1 = t1 <u a0\n  2052: a2 = a4 + a1\n  2055: a3 = a2 <u a4\n  2058: a3 = a1 if a1 == 0\n  2061: a3 = a3 + a5\n  2064: a1 = a3 <u a5\n  2067: u64 [s1 + 0x80] = a0\n  2071: t0 = t2 + a1\n  2074: u64 [s1 + 0x4e0] = t1\n  2078: u64 [s1 + 0x4e8] = a2\n  2082: u64 [s1 + 0x4f0] = a3\n  2086: a0 = 0x40\n  2089: a1 = s1 + 0x4e0\n  2093: u64 [s1 + 0x4f8] = t0\n  2097: u64 [s1 + 0x70] = a5\n  2100: u64 [s1 + 0x78] = a4\n  2103: u64 [s1 + 0x68] = t2\n  2106: ra = 42, jump @19\n      : @62 [@dyn 21] (gas: 12)\n  2111: a0 = u64 [s1 + 0x80]\n  2115: a2 = u64 [s1 + 0x70]\n  2118: a3 = a0 | a2\n  2121: a1 = u64 [s1 + 0x78]\n  2124: a4 = u64 [s1 + 0x68]\n  2127: a1 = a1 | a4\n  2130: a3 = a3 | a1\n  2133: a3 = a3 >> 0x20\n  2136: a1 = a1 | a2\n  2139: a1 = a1 << 0x20\n  2142: a1 = a1 | a3\n  2145: jump @64 if a1 == 0\n      : @63 (gas: 1)\n  2148: jump @185\n      : @64 (gas: 6)\n  2151: u64 [s1 + 1240] = 0\n  2155: u64 [s1 + 1232] = 0\n  2159: u64 [s1 + 1224] = 0\n  2163: a1 = s1 + 0x4c0\n  2167: u64 [s1 + 1216] = 0x6\n  2172: ra = 44, jump @19\n      : @65 [@dyn 22] (gas: 8)\n  2177: a2 = u64 [s1 + 0x80]\n  2181: a0 = 0xffffffe0\n  2191: a0 = a2 <u a0\n  2194: a1 = u64 [s1 + 0x78]\n  2197: a0 = 0 if a1 != 0\n  2199: a1 = u64 [s1 + 0x118]\n  2203: a0 = 0 if a1 != 0\n  2205: jump @67 if a0 != 0\n      : @66 (gas: 1)\n  2208: jump @185\n      : @67 (gas: 9)\n  2211: i32 a0 = a2 + 0x20\n  2214: u64 [s1 + 1200] = 0\n  2218: a2 = u64 [0x20008]\n  2223: u64 [s1 + 1192] = 0\n  2227: u64 [s1 + 1184] = 0\n  2231: a1 = s1 + 0x4a0\n  2235: u64 [s1 + 0x4b8] = a2\n  2239: u64 [s1 + 0x18] = a0\n  2242: ra = 46, jump @19\n      : @68 [@dyn 23] (gas: 3)\n  2247: a0 = s1 + 0x480\n  2251: a1 = u64 [s1 + 0xb0]\n  2255: ra = 48, jump @17\n      : @69 [@dyn 24] (gas: 17)\n  2260: a0 = s1 + 0x400\n  2264: a3 = u64 [a0 + 0x98]\n  2268: a1 = u64 [a0 + 0x90]\n  2272: a2 = u64 [a0 + 0x88]\n  2276: a0 = a3 >u 0\n  2278: a4 = a1 >u 0\n  2280: a4 = a0 if a3 != 0\n  2283: u64 [s1 + 0xc8] = a2\n  2287: a0 = a2 >u 0\n  2289: u64 [s1 + 0x58] = a1\n  2292: u64 [s1 + 0xc0] = a3\n  2296: a1 = a1 | a3\n  2299: u64 [s1 + 0x50] = a0\n  2302: u64 [s1 + 0x88] = a4\n  2306: u64 [s1 + 0xb8] = a1\n  2310: a0 = a4 if a1 != 0\n  2313: jump @71 if a0 == 0\n      : @70 (gas: 1)\n  2316: jump @199\n      : @71 (gas: 9)\n  2319: a0 = u64 [s1 + 0x480]\n  2323: u64 [s1 + 0x60] = a0\n  2326: u64 [s1 + 1528] = 0\n  2330: u64 [s1 + 1520] = 0\n  2334: u64 [s1 + 1512] = 0\n  2338: u64 [s1 + 1504] = 0\n  2342: a0 = s1 + 0x460\n  2346: a1 = s1 + 0x5e0\n  2350: ra = 50, jump @21\n      : @72 [@dyn 25] (gas: 6)\n  2355: a4 = s1 + 0x400\n  2359: a0 = u64 [a4 + 0x70]\n  2362: a1 = u64 [a4 + 0x68]\n  2365: a2 = u64 [a4 + 0x60]\n  2368: a3 = u64 [a4 + 0x78]\n  2371: t0 = 52, jump @1957\n      : @73 [@dyn 26] (gas: 12)\n  2377: t0 = a2 <u 0x1\n  2380: ra = a1 & 0x7f\n  2383: t2 = a5 & a0\n  2386: a4 = a5 & t1\n  2389: ra = a1 if a2 != 0\n  2392: a1 = ra <u 0x20\n  2395: a5 = a5 & a3\n  2398: a2 = a1\n  2400: a2 = 0 if a4 != 0\n  2402: a0 = t2 | a5\n  2405: a2 = 0 if a0 != 0\n  2407: jump @75 if t0 == a2\n      : @74 (gas: 1)\n  2410: jump @205\n      : @75 (gas: 1)\n  2413: t0 = 54, jump @1971\n      : @76 [@dyn 27] (gas: 4)\n  2419: a0 = u64 [s1 + 0x60]\n  2422: a0 = a0 <u 0x20\n  2425: u64 [s1 + 0x90] = a0\n  2429: jump @89 if a3 == 0\n      : @77 (gas: 11)\n  2433: u64 [s1 + 0xf0] = a4\n  2437: u64 [s1 + 0xf8] = ra\n  2441: u64 [s1 + 0x100] = a5\n  2445: u64 [s1 + 0x110] = t2\n  2449: u64 [s1 + 1112] = 0\n  2453: u64 [s1 + 1104] = 0\n  2457: u64 [s1 + 1096] = 0\n  2461: a1 = s1 + 0x440\n  2465: u64 [s1 + 1088] = 0\n  2469: a0 = 0\n  2471: ra = 56, jump @19\n      : @78 [@dyn 28] (gas: 2)\n  2476: a1 = i32 [0x2020c]\n  2481: jump @80 if a1 >u 31\n      : @79 (gas: 4)\n  2485: a1 = 0x20\n  2488: u32 [0x2020c] = a1\n  2493: t0 = 0x3a\n  2496: jump @1945\n      : @80 (gas: 1)\n  2500: t0 = 58, jump @1945\n      : @81 [@dyn 29] (gas: 7)\n  2506: a0 = 0x20220\n  2511: i32 a0 = a0 + 0\n  2513: i32 a2 = a2 + 0\n  2515: a1 = 0x20\n  2518: ra = 0x3c\n  2521: ecalli 9 // 'hash_keccak_256'\n  2523: fallthrough\n      : @82 [@dyn 30] (gas: 9)\n  2524: a0 = u64 [s1 + 0x60]\n  2527: a1 = a0 + 0x1f\n  2530: a0 = a1 <u a0\n  2533: a5 = u64 [s1 + 0xc8]\n  2537: a2 = a5 + a0\n  2540: a3 = a2 <u a5\n  2543: a3 = a0 if a0 == 0\n  2546: a4 = u64 [s1 + 0x58]\n  2549: t0 = 62, jump @1946\n      : @83 [@dyn 31] (gas: 35)\n  2555: a1 = u64 [s1 + 0x90]\n  2559: a1 = 0 if a5 != 0\n  2561: a3 = u64 [s1 + 0xb8]\n  2565: a1 = 0 if a3 != 0\n  2567: a4 = 0 if a1 != 0\n  2569: a0 = 0 if a1 != 0\n  2571: t0 = t2 + a0\n  2574: a0 = t0 <u t2\n  2577: a5 = a2 + a0\n  2580: a4 = a4 + a5\n  2583: u64 [s1 + 0x118] = a4\n  2587: a5 = a4 ^ a2\n  2590: a3 = a4 <u a2\n  2593: a3 = a0 if a5 == 0\n  2596: u64 [s1 + 0xe0] = a3\n  2600: a0 = u64 [s1 + 0xf8]\n  2604: ra = a0 + 0x1f\n  2607: a4 = ra <u a0\n  2610: a3 = u64 [s1 + 0xf0]\n  2614: a0 = a3 + a4\n  2617: a5 = a0 <u a3\n  2620: a5 = a4 if a4 == 0\n  2623: t1 = u64 [s1 + 0x110]\n  2627: t1 = t1 + a5\n  2630: a4 = t1 << 0x3b\n  2633: a3 = a0 >> 0x5\n  2636: a3 = a3 | a4\n  2639: a0 = a0 << 0x3b\n  2642: a4 = ra >> 0x5\n  2645: a0 = a0 | a4\n  2648: a0 = a0 + t2\n  2651: u64 [s1 + 0xf8] = a0\n  2655: a0 = a0 <u t2\n  2658: t2 = t0\n  2660: t0 = 64, jump @1995\n      : @84 [@dyn 32] (gas: 16)\n  2666: a0 = u64 [s1 + 0x58]\n  2669: a0 = a4 <u a0\n  2672: a3 = u64 [s1 + 0xc0]\n  2676: a0 = a0 + a3\n  2679: a3 = a4 >> 0x5\n  2682: a4 = a0 << 0x3b\n  2685: a3 = a3 | a4\n  2688: a4 = u64 [s1 + 0x108]\n  2692: t0 = u64 [a4]\n  2694: a4 = u64 [a4 + 0x8]\n  2697: a0 = a0 >> 0x5\n  2700: a3 = 0 if a1 != 0\n  2702: a0 = 0 if a1 != 0\n  2704: a1 = reverse a4\n  2706: a4 = reverse t0\n  2708: t0 = 66, jump @2008\n      : @85 [@dyn 33] (gas: 24)\n  2714: t0 = a0 + a3\n  2717: a0 = u64 [s1 + 0x110]\n  2721: a0 = t1 <u a0\n  2724: a3 = u64 [s1 + 0x100]\n  2728: a0 = a0 + a3\n  2731: a3 = t1 >> 0x5\n  2734: a5 = a0 << 0x3b\n  2737: a3 = a3 | a5\n  2740: a0 = a0 >> 0x5\n  2743: a0 = a0 + a4\n  2746: a4 = u64 [s1 + 0x118]\n  2750: a3 = a3 + a1\n  2753: a1 = a3 <u a1\n  2756: a0 = a0 + a1\n  2759: a2 = a2 + a3\n  2762: u64 [s1 + 0xe8] = a2\n  2766: a1 = a2 <u a3\n  2769: a0 = a0 + a1\n  2772: u64 [s1 + 0xe0] = a0\n  2776: a0 = sp + 0xffffffffffffffe0\n  2779: t1 = a0 & 0xffffffffffffffe0\n  2782: sp = t1\n  2784: u64 [s1 + 0xd8] = t1\n  2788: fallthrough\n      : @86 (gas: 20)\n  2789: a0 = u64 [s1 + 0xf8]\n  2793: a0 = t2 <u a0\n  2796: a2 = u64 [s1 + 0xf0]\n  2800: a1 = a4 ^ a2\n  2803: a2 = a4 <u a2\n  2806: a2 = a0 if a1 == 0\n  2809: a5 = u64 [s1 + 0xe8]\n  2813: a0 = ra <u a5\n  2816: a3 = u64 [s1 + 0xe0]\n  2820: a1 = t0 ^ a3\n  2823: a3 = t0 <u a3\n  2826: a3 = a0 if a1 == 0\n  2829: a0 = ra ^ a5\n  2832: a0 = a0 | a1\n  2835: a3 = a2 if a0 == 0\n  2838: u64 [t1] = t2\n  2840: u64 [t1 + 0x8] = a4\n  2843: u64 [t1 + 0x10] = ra\n  2846: u64 [t1 + 0x18] = t0\n  2849: jump @89 if a3 == 0\n      : @87 (gas: 11)\n  2852: u64 [s1 + 1560] = 0\n  2856: u64 [s1 + 1552] = 0\n  2860: u64 [s1 + 1544] = 0\n  2864: u64 [s1 + 1536] = 0\n  2868: a1 = s1 + 0x600\n  2872: a0 = t1\n  2874: u64 [s1 + 0x110] = t2\n  2878: u64 [s1 + 0x118] = a4\n  2882: u64 [s1 + 0x108] = t0\n  2886: u64 [s1 + 0x100] = ra\n  2890: ra = 68, jump @23\n      : @88 [@dyn 34] (gas: 15)\n  2895: t1 = u64 [s1 + 0xd8]\n  2899: t0 = u64 [s1 + 0x108]\n  2903: a4 = u64 [s1 + 0x118]\n  2907: t2 = u64 [s1 + 0x110]\n  2911: t2 = t2 + 0x1\n  2914: a0 = t2 <u 0x1\n  2917: a4 = a4 + a0\n  2920: a0 = t2 | a4\n  2923: a0 = a0 <u 0x1\n  2926: a1 = u64 [s1 + 0x100]\n  2930: a0 = a0 + a1\n  2933: a1 = a0 <u a1\n  2936: t0 = t0 + a1\n  2939: ra = a0\n  2941: jump @86\n      : @89 (gas: 26)\n  2944: a0 = u64 [s1 + 0x90]\n  2948: a0 = a0 ^ 0x1\n  2951: a4 = u64 [s1 + 0xc8]\n  2955: a1 = u64 [s1 + 0x50]\n  2958: a0 = a1 if a4 != 0\n  2961: a1 = u64 [s1 + 0x88]\n  2965: a2 = u64 [s1 + 0xb8]\n  2969: a0 = a1 if a2 != 0\n  2972: t1 = u64 [s1 + 0xc0]\n  2976: t0 = a4 | t1\n  2979: a1 = u64 [s1 + 0x58]\n  2982: a2 = a1 >> 0x3f\n  2985: u64 [s1 + 0x50] = a2\n  2988: t1 = t1 << 0x1\n  2991: a5 = a4 >> 0x3f\n  2994: t2 = a1 << 0x1\n  2997: a3 = u64 [s1 + 0x60]\n  3000: ra = a3 >> 0x3f\n  3003: a4 = a4 << 0x1\n  3006: a2 = a3 << 0x1\n  3009: u64 [s1 + 0x40] = a2\n  3012: u64 [s1 + 0x38] = t1\n  3015: u64 [s1 + 0x30] = ra\n  3018: u64 [s1 + 0x28] = a5\n  3021: u64 [s1 + 0x48] = t2\n  3024: jump @99 if a0 == 0\n      : @90 (gas: 11)\n  3028: u64 [s1 + 0x88] = t0\n  3032: u64 [s1 + 0x20] = a4\n  3035: a3 = a3 & 0xffffffffffffffe0\n  3038: u64 [s1 + 0x90] = a3\n  3042: u64 [s1 + 1048] = 0\n  3046: u64 [s1 + 1040] = 0\n  3050: u64 [s1 + 1032] = 0\n  3054: a1 = s1 + 0x400\n  3058: u64 [s1 + 1024] = 0\n  3062: a0 = 0\n  3064: ra = 70, jump @19\n      : @91 [@dyn 35] (gas: 7)\n  3069: a0 = sp + 0xffffffffffffffe0\n  3072: a0 = a0 & 0xffffffffffffffe0\n  3075: u64 [s1 + 0xf8] = a0\n  3079: sp = a0\n  3081: a1 = 0x20\n  3084: a0 = 0\n  3086: ra = 72, jump @34\n      : @92 [@dyn 36] (gas: 35)\n  3091: a1 = sp + 0xffffffffffffffe0\n  3094: a1 = a1 & 0xffffffffffffffe0\n  3097: u64 [s1 + 0xf0] = a1\n  3101: sp = a1\n  3103: i32 a0 = a0 + 0\n  3105: i32 a2 = a1 + 0\n  3107: a1 = 0x20\n  3110: ecalli 9 // 'hash_keccak_256'\n  3112: u64 [s1 + 280] = 0x20\n  3117: t0 = 0\n  3119: u64 [s1 + 272] = 0\n  3123: u64 [s1 + 264] = 0\n  3127: a4 = 0\n  3129: a5 = 0\n  3131: ra = 0\n  3133: u64 [s1 + 256] = 0\n  3137: a3 = u64 [s1 + 0xf0]\n  3141: a0 = u64 [a3 + 0x18]\n  3144: a1 = u64 [a3 + 0x10]\n  3147: a2 = u64 [a3 + 0x8]\n  3150: t1 = u64 [a3]\n  3152: a0 = reverse a0\n  3154: a1 = reverse a1\n  3156: a3 = reverse a2\n  3158: t1 = reverse t1\n  3160: t2 = t1\n  3162: a2 = u64 [s1 + 0xf8]\n  3166: u64 [a2 + 0x18] = t1\n  3169: u64 [s1 + 0xd0] = a3\n  3173: u64 [a2 + 0x10] = a3\n  3176: u64 [s1 + 0xf0] = a1\n  3180: u64 [a2 + 0x8] = a1\n  3183: a3 = a0\n  3185: u64 [a2] = a0\n  3187: fallthrough\n      : @93 (gas: 25)\n  3188: u64 [s1 + 0xe8] = t2\n  3192: t1 = a3\n  3194: a0 = u64 [s1 + 0x90]\n  3198: u64 [s1 + 0xe0] = a4\n  3202: a0 = a4 <u a0\n  3205: a4 = a0 ^ 0x1\n  3208: u64 [s1 + 0xd8] = a5\n  3212: a4 = 0x1 if a5 != 0\n  3215: a5 = s1 + 0x100\n  3219: a0 = u64 [a5]\n  3221: a0 = ra | a0\n  3224: a4 = 0x1 if a0 != 0\n  3227: a1 = u64 [s1 + 0xb0]\n  3231: a0 = u64 [a5 + 0x18]\n  3234: a1 = a1 + a0\n  3237: a3 = u64 [s1 + 0xa8]\n  3241: a3 = a3 + t0\n  3244: a2 = u64 [s1 + 0x98]\n  3248: a0 = u64 [a5 + 0x10]\n  3251: a2 = a2 + a0\n  3254: a0 = u64 [s1 + 0xa0]\n  3258: t2 = u64 [s1 + 0x108]\n  3262: t2 = t2 + a0\n  3265: a0 = u64 [s1 + 0x88]\n  3269: jump @101 if a4 != 0\n      : @94 (gas: 9)\n  3273: a0 = u64 [s1 + 0x118]\n  3277: a4 = a1 <u a0\n  3280: a3 = a3 + a4\n  3283: a0 = t0\n  3285: t0 = a3 ^ t0\n  3288: u64 [s1 + 0xc0] = a0\n  3292: a5 = a3 <u a0\n  3295: a5 = a4 if t0 == 0\n  3298: t0 = 74, jump @1954\n      : @95 [@dyn 37] (gas: 2)\n  3304: u64 [s1 + 0xc8] = t1\n  3308: jump @185 if a0 != 0\n      : @96 (gas: 3)\n  3312: a0 = s1 + 0x220\n  3316: u64 [s1 + 0xb8] = ra\n  3320: ra = 76, jump @17\n      : @97 [@dyn 38] (gas: 13)\n  3325: a4 = s1 + 0x200\n  3329: a0 = u64 [a4 + 0x38]\n  3332: a1 = u64 [a4 + 0x30]\n  3335: a2 = u64 [a4 + 0x28]\n  3338: a3 = u64 [a4 + 0x20]\n  3341: a4 = s1 + 0x600\n  3345: u64 [a4 + 0x38] = a0\n  3348: u64 [a4 + 0x30] = a1\n  3351: u64 [a4 + 0x28] = a2\n  3354: u64 [a4 + 0x20] = a3\n  3357: a1 = s1 + 0x620\n  3361: a0 = u64 [s1 + 0xf8]\n  3365: ra = 78, jump @23\n      : @98 [@dyn 39] (gas: 57)\n  3370: t2 = u64 [s1 + 0xc8]\n  3374: t2 = t2 + 0x1\n  3377: a0 = t2 <u 0x1\n  3380: t0 = u64 [s1 + 0xf0]\n  3384: t0 = t0 + a0\n  3387: a0 = t2 | t0\n  3390: a0 = a0 <u 0x1\n  3393: a1 = u64 [s1 + 0xd0]\n  3397: t1 = a1 + a0\n  3400: a1 = t1 <u a1\n  3403: a0 = u64 [s1 + 0xe8]\n  3407: a0 = a0 + a1\n  3410: a1 = u64 [s1 + 0x118]\n  3414: a2 = a1 + 0x20\n  3417: u64 [s1 + 0xe8] = a2\n  3421: a3 = a2 <u a1\n  3424: a1 = u64 [s1 + 0xc0]\n  3428: a2 = a1 + a3\n  3431: u64 [s1 + 0xc8] = a2\n  3435: a4 = a2 <u a1\n  3438: a4 = a3 if a3 == 0\n  3441: a1 = u64 [s1 + 0x110]\n  3445: ra = a1 + a4\n  3448: a4 = ra <u a1\n  3451: a1 = u64 [s1 + 0x108]\n  3455: a1 = a1 + a4\n  3458: u64 [s1 + 0x108] = a1\n  3462: a1 = u64 [s1 + 0xe0]\n  3466: a4 = a1 + 0x20\n  3469: a5 = a4 <u a1\n  3472: a2 = u64 [s1 + 0xd8]\n  3476: a1 = a2 + a5\n  3479: a2 = a1 <u a2\n  3482: a2 = a5 if a5 == 0\n  3485: a3 = u64 [s1 + 0xb8]\n  3489: a2 = a2 + a3\n  3492: a5 = a2 <u a3\n  3495: a3 = u64 [s1 + 0x100]\n  3499: a3 = a3 + a5\n  3502: u64 [s1 + 0x100] = a3\n  3506: a3 = t0\n  3508: u64 [s1 + 0xf0] = a3\n  3512: a5 = u64 [s1 + 0xf8]\n  3516: u64 [a5 + 0x8] = a3\n  3519: a3 = t2\n  3521: u64 [a5] = t2\n  3523: u64 [a5 + 0x10] = t1\n  3526: t2 = a0\n  3528: u64 [a5 + 0x18] = a0\n  3531: u64 [s1 + 0xd0] = t1\n  3535: a0 = u64 [s1 + 0xe8]\n  3539: u64 [s1 + 0x118] = a0\n  3543: t0 = u64 [s1 + 0xc8]\n  3547: u64 [s1 + 0x110] = ra\n  3551: a5 = a1\n  3553: ra = a2\n  3555: jump @93\n      : @99 (gas: 4)\n  3558: a2 = u64 [s1 + 0x50]\n  3561: a0 = a3 | a1\n  3564: a0 = a0 | t0\n  3567: jump @115 if a0 != 0\n      : @100 (gas: 9)\n  3571: u64 [s1 + 256] = 0\n  3575: u64 [s1 + 248] = 0\n  3579: u64 [s1 + 264] = 0\n  3583: u64 [s1 + 272] = 0\n  3587: t1 = u64 [s1 + 0x38]\n  3590: t0 = u64 [s1 + 0x30]\n  3593: a1 = u64 [s1 + 0x28]\n  3596: a5 = u64 [s1 + 0x48]\n  3599: jump @117\n      : @101 (gas: 10)\n  3602: ra = t0\n  3604: t1 = u64 [s1 + 0x60]\n  3607: a4 = u64 [s1 + 0x90]\n  3611: a4 = a4 ^ t1\n  3614: a5 = u64 [s1 + 0x58]\n  3617: a4 = a4 | a5\n  3620: a4 = a4 | a0\n  3623: t0 = u64 [s1 + 0x20]\n  3626: a5 = u64 [s1 + 0x48]\n  3629: jump @114 if a4 == 0\n      : @102 (gas: 7)\n  3633: a0 = u64 [s1 + 0x118]\n  3637: a4 = a1 <u a0\n  3640: a3 = a3 + a4\n  3643: t0 = a3 ^ ra\n  3646: a5 = a3 <u ra\n  3649: a5 = a4 if t0 == 0\n  3652: t0 = 80, jump @1954\n      : @103 [@dyn 40] (gas: 1)\n  3658: jump @185 if a0 != 0\n      : @104 (gas: 2)\n  3662: a0 = s1 + 0x3e0\n  3666: ra = 82, jump @17\n      : @105 [@dyn 41] (gas: 11)\n  3671: a1 = s1 + 0x300\n  3675: a0 = u64 [a1 + 0xf8]\n  3679: u64 [s1 + 0x110] = a0\n  3683: a0 = u64 [a1 + 0xf0]\n  3687: u64 [s1 + 0x108] = a0\n  3691: a0 = u64 [a1 + 0xe8]\n  3695: u64 [s1 + 0x100] = a0\n  3699: a0 = u64 [a1 + 0xe0]\n  3703: u64 [s1 + 0xf0] = a0\n  3707: a0 = u64 [s1 + 0x60]\n  3710: t0 = 84, jump @1996\n      : @106 [@dyn 42] (gas: 1)\n  3716: ra = 86, jump @2025\n      : @107 [@dyn 43] (gas: 6)\n  3722: u64 [s1 + 0xe8] = a0\n  3726: u64 [s1 + 0xd0] = a1\n  3730: a0 = 0xffffffffffffffff\n  3733: a1 = 0xffffffffffffffff\n  3736: a2 = u64 [s1 + 0x118]\n  3740: ra = 88, jump @2020\n      : @108 [@dyn 44] (gas: 1)\n  3746: t0 = 90, jump @2000\n      : @109 [@dyn 45] (gas: 1)\n  3752: ra = 92, jump @2020\n      : @110 [@dyn 46] (gas: 1)\n  3758: t0 = 94, jump @1933\n      : @111 [@dyn 47] (gas: 2)\n  3764: a2 = u64 [s1 + 0x100]\n  3768: t0 = 96, jump @2012\n      : @112 [@dyn 48] (gas: 8)\n  3774: a4 = s1 + 0x600\n  3778: u64 [a4 + 0x58] = a3\n  3781: u64 [a4 + 0x50] = a2\n  3784: u64 [a4 + 0x48] = a1\n  3787: u64 [a4 + 0x40] = a0\n  3790: a1 = s1 + 0x640\n  3794: a0 = u64 [s1 + 0xf8]\n  3798: ra = 98, jump @23\n      : @113 [@dyn 49] (gas: 3)\n  3803: a5 = u64 [s1 + 0x48]\n  3806: t0 = u64 [s1 + 0x20]\n  3809: fallthrough\n      : @114 (gas: 22)\n  3810: a0 = u64 [s1 + 0x50]\n  3813: a1 = u64 [s1 + 0x38]\n  3816: a0 = a0 | a1\n  3819: a1 = u64 [s1 + 0x28]\n  3822: a1 = a1 | a5\n  3825: a2 = u64 [s1 + 0x30]\n  3828: a2 = t0 | a2\n  3831: a3 = u64 [s1 + 0x40]\n  3834: a3 = a3 + 0x1\n  3837: u64 [s1 + 1656] = 0\n  3841: u64 [s1 + 1648] = 0\n  3845: u64 [s1 + 1640] = 0\n  3849: u64 [s1 + 1632] = 0\n  3853: a4 = s1 + 0x600\n  3857: u64 [a4 + 0x80] = a3\n  3861: u64 [a4 + 0x88] = a2\n  3865: u64 [a4 + 0x90] = a1\n  3869: u64 [a4 + 0x98] = a0\n  3873: a0 = s1 + 0x660\n  3877: a1 = s1 + 0x680\n  3881: ra = 0x72\n  3884: jump @23\n      : @115 (gas: 4)\n  3887: a0 = s1 + 0x420\n  3891: a1 = u64 [s1 + 0xd0]\n  3895: u64 [s1 + 0x20] = a4\n  3898: ra = 100, jump @17\n      : @116 [@dyn 50] (gas: 16)\n  3903: a5 = u64 [s1 + 0x48]\n  3906: a4 = u64 [s1 + 0x20]\n  3909: a1 = u64 [s1 + 0x28]\n  3912: t0 = u64 [s1 + 0x30]\n  3915: t1 = u64 [s1 + 0x38]\n  3918: a2 = u64 [s1 + 0x50]\n  3921: a3 = u64 [s1 + 0x60]\n  3924: a0 = u64 [s1 + 0x438]\n  3928: u64 [s1 + 0x110] = a0\n  3932: a0 = u64 [s1 + 0x430]\n  3936: u64 [s1 + 0x108] = a0\n  3940: a0 = u64 [s1 + 0x428]\n  3944: u64 [s1 + 0xf8] = a0\n  3948: a0 = u64 [s1 + 0x420]\n  3952: u64 [s1 + 0x100] = a0\n  3956: fallthrough\n      : @117 (gas: 7)\n  3957: a0 = a5 | a1\n  3960: u64 [s1 + 0xf0] = a0\n  3964: a0 = t1 | a2\n  3967: u64 [s1 + 0xe8] = a0\n  3971: a0 = a4 | t0\n  3974: u64 [s1 + 0xe0] = a0\n  3978: t0 = 102, jump @2010\n      : @118 [@dyn 51] (gas: 1)\n  3984: ra = 104, jump @2025\n      : @119 [@dyn 52] (gas: 7)\n  3990: u64 [s1 + 0xc0] = a0\n  3994: u64 [s1 + 0xd8] = a1\n  3998: a0 = u64 [s1 + 0x60]\n  4001: i32 a2 = a0 << 0x3\n  4004: a0 = 0xffffffffffffffff\n  4007: a1 = 0xffffffffffffffff\n  4010: ra = 106, jump @2020\n      : @120 [@dyn 53] (gas: 10)\n  4016: u64 [s1 + 0xd0] = a0\n  4020: u64 [s1 + 0xc8] = a1\n  4024: a1 = u64 [s1 + 0xc0]\n  4028: a0 = a0 | a1\n  4031: u64 [s1 + 0xc0] = a0\n  4035: a0 = u64 [s1 + 0x118]\n  4039: i32 a2 = a0 + 0xffffffffffffff80\n  4042: a0 = 0xffffffffffffffff\n  4045: a1 = 0xffffffffffffffff\n  4048: ra = 108, jump @2020\n      : @121 [@dyn 54] (gas: 7)\n  4054: a4 = u64 [s1 + 0x118]\n  4058: a2 = a4 <u 0x80\n  4062: a3 = u64 [s1 + 0xc0]\n  4066: a0 = a3 if a2 != 0\n  4069: a5 = u64 [s1 + 0xc8]\n  4073: a3 = u64 [s1 + 0xd8]\n  4077: t0 = 110, jump @1964\n      : @122 [@dyn 55] (gas: 2)\n  4083: a4 = u64 [s1 + 0xd0]\n  4087: t0 = 112, jump @1960\n      : @123 [@dyn 56] (gas: 20)\n  4093: a4 = u64 [s1 + 0x40]\n  4096: a0 = a0 | a4\n  4099: a4 = u64 [s1 + 0xe0]\n  4103: a1 = a1 | a4\n  4106: a4 = u64 [s1 + 0xe8]\n  4110: a3 = a3 | a4\n  4113: a4 = u64 [s1 + 0xf0]\n  4117: a2 = a2 | a4\n  4120: a4 = s1 + 0x600\n  4124: u64 [a4 + 0xd0] = a2\n  4128: u64 [a4 + 0xd8] = a3\n  4132: u64 [a4 + 0xc8] = a1\n  4136: u64 [a4 + 0xc0] = a0\n  4140: u64 [s1 + 1720] = 0\n  4144: u64 [s1 + 1712] = 0\n  4148: u64 [s1 + 1704] = 0\n  4152: u64 [s1 + 1696] = 0\n  4156: a0 = s1 + 0x6a0\n  4160: a1 = s1 + 0x6c0\n  4164: ra = 114, jump @23\n      : @124 [@dyn 57] (gas: 3)\n  4169: a0 = s1 + 0x3c0\n  4173: a1 = u64 [s1 + 0x80]\n  4177: ra = 116, jump @17\n      : @125 [@dyn 58] (gas: 17)\n  4182: a0 = s1 + 0x300\n  4186: a3 = u64 [a0 + 0xd8]\n  4190: a2 = u64 [a0 + 0xd0]\n  4194: a1 = u64 [a0 + 0xc8]\n  4198: a0 = a3 >u 0\n  4200: a4 = a2 >u 0\n  4202: a4 = a0 if a3 != 0\n  4205: u64 [s1 + 0x98] = a1\n  4209: a0 = a1 >u 0\n  4211: u64 [s1 + 0x90] = a2\n  4215: u64 [s1 + 0x88] = a3\n  4219: a2 = a2 | a3\n  4222: u64 [s1 + 0xb8] = a0\n  4226: u64 [s1 + 0xc0] = a4\n  4230: u64 [s1 + 0xd0] = a2\n  4234: a0 = a4 if a2 != 0\n  4237: jump @211 if a0 != 0\n      : @126 (gas: 9)\n  4241: a0 = u64 [s1 + 0x3c0]\n  4245: u64 [s1 + 0xa0] = a0\n  4249: u64 [s1 + 1784] = 0\n  4253: u64 [s1 + 1776] = 0\n  4257: u64 [s1 + 1768] = 0\n  4261: u64 [s1 + 1760] = 0x1\n  4266: a0 = s1 + 0x3a0\n  4270: a1 = s1 + 0x6e0\n  4274: ra = 118, jump @21\n      : @127 [@dyn 59] (gas: 6)\n  4279: a4 = s1 + 0x300\n  4283: a0 = u64 [a4 + 0xb0]\n  4287: a1 = u64 [a4 + 0xa8]\n  4291: a2 = u64 [a4 + 0xa0]\n  4295: a3 = u64 [a4 + 0xb8]\n  4299: t0 = 120, jump @1957\n      : @128 [@dyn 60] (gas: 12)\n  4305: t0 = a2 <u 0x1\n  4308: ra = a1 & 0x7f\n  4311: t2 = a5 & a0\n  4314: a4 = a5 & t1\n  4317: ra = a1 if a2 != 0\n  4320: a1 = ra <u 0x20\n  4323: a5 = a5 & a3\n  4326: a2 = a1\n  4328: a2 = 0 if a4 != 0\n  4330: a0 = t2 | a5\n  4333: a2 = 0 if a0 != 0\n  4335: jump @217 if t0 != a2\n      : @129 (gas: 1)\n  4339: t0 = 122, jump @1971\n      : @130 [@dyn 61] (gas: 4)\n  4345: a0 = u64 [s1 + 0xa0]\n  4349: a0 = a0 <u 0x20\n  4352: u64 [s1 + 0xc8] = a0\n  4356: jump @143 if a3 == 0\n      : @131 (gas: 11)\n  4360: u64 [s1 + 0xf0] = a4\n  4364: u64 [s1 + 0xf8] = ra\n  4368: u64 [s1 + 0x100] = a5\n  4372: u64 [s1 + 0x110] = t2\n  4376: u64 [s1 + 920] = 0\n  4380: u64 [s1 + 912] = 0\n  4384: u64 [s1 + 904] = 0\n  4388: a1 = s1 + 0x380\n  4392: u64 [s1 + 896] = 0x1\n  4397: a0 = 0\n  4399: ra = 124, jump @19\n      : @132 [@dyn 62] (gas: 2)\n  4404: a1 = i32 [0x2020c]\n  4409: jump @134 if a1 >u 31\n      : @133 (gas: 4)\n  4413: a1 = 0x20\n  4416: u32 [0x2020c] = a1\n  4421: t0 = 0x7e\n  4424: jump @1945\n      : @134 (gas: 1)\n  4428: t0 = 126, jump @1945\n      : @135 [@dyn 63] (gas: 7)\n  4434: a0 = 0x20220\n  4439: i32 a0 = a0 + 0\n  4441: i32 a2 = a2 + 0\n  4443: a1 = 0x20\n  4446: ra = 0x80\n  4450: ecalli 9 // 'hash_keccak_256'\n  4452: fallthrough\n      : @136 [@dyn 64] (gas: 9)\n  4453: a0 = u64 [s1 + 0xa0]\n  4457: a1 = a0 + 0x1f\n  4460: a0 = a1 <u a0\n  4463: a5 = u64 [s1 + 0x98]\n  4467: a2 = a5 + a0\n  4470: a3 = a2 <u a5\n  4473: a3 = a0 if a0 == 0\n  4476: a4 = u64 [s1 + 0x90]\n  4480: t0 = 130, jump @1946\n      : @137 [@dyn 65] (gas: 35)\n  4487: a1 = u64 [s1 + 0xc8]\n  4491: a1 = 0 if a5 != 0\n  4493: a3 = u64 [s1 + 0xd0]\n  4497: a1 = 0 if a3 != 0\n  4499: a4 = 0 if a1 != 0\n  4501: a0 = 0 if a1 != 0\n  4503: t0 = t2 + a0\n  4506: a0 = t0 <u t2\n  4509: a5 = a2 + a0\n  4512: a4 = a4 + a5\n  4515: u64 [s1 + 0x118] = a4\n  4519: a5 = a4 ^ a2\n  4522: a3 = a4 <u a2\n  4525: a3 = a0 if a5 == 0\n  4528: u64 [s1 + 0xe0] = a3\n  4532: a0 = u64 [s1 + 0xf8]\n  4536: ra = a0 + 0x1f\n  4539: a4 = ra <u a0\n  4542: a3 = u64 [s1 + 0xf0]\n  4546: a0 = a3 + a4\n  4549: a5 = a0 <u a3\n  4552: a5 = a4 if a4 == 0\n  4555: t1 = u64 [s1 + 0x110]\n  4559: t1 = t1 + a5\n  4562: a4 = t1 << 0x3b\n  4565: a3 = a0 >> 0x5\n  4568: a3 = a3 | a4\n  4571: a0 = a0 << 0x3b\n  4574: a4 = ra >> 0x5\n  4577: a0 = a0 | a4\n  4580: a0 = a0 + t2\n  4583: u64 [s1 + 0xf8] = a0\n  4587: a0 = a0 <u t2\n  4590: t2 = t0\n  4592: t0 = 132, jump @1995\n      : @138 [@dyn 66] (gas: 16)\n  4599: a0 = u64 [s1 + 0x90]\n  4603: a0 = a4 <u a0\n  4606: a3 = u64 [s1 + 0x88]\n  4610: a0 = a0 + a3\n  4613: a3 = a4 >> 0x5\n  4616: a4 = a0 << 0x3b\n  4619: a3 = a3 | a4\n  4622: a4 = u64 [s1 + 0x108]\n  4626: t0 = u64 [a4]\n  4628: a4 = u64 [a4 + 0x8]\n  4631: a0 = a0 >> 0x5\n  4634: a3 = 0 if a1 != 0\n  4636: a0 = 0 if a1 != 0\n  4638: a1 = reverse a4\n  4640: a4 = reverse t0\n  4642: t0 = 134, jump @2008\n      : @139 [@dyn 67] (gas: 24)\n  4649: t0 = a0 + a3\n  4652: a0 = u64 [s1 + 0x110]\n  4656: a0 = t1 <u a0\n  4659: a3 = u64 [s1 + 0x100]\n  4663: a0 = a0 + a3\n  4666: a3 = t1 >> 0x5\n  4669: a5 = a0 << 0x3b\n  4672: a3 = a3 | a5\n  4675: a0 = a0 >> 0x5\n  4678: a0 = a0 + a4\n  4681: a4 = u64 [s1 + 0x118]\n  4685: a3 = a3 + a1\n  4688: a1 = a3 <u a1\n  4691: a0 = a0 + a1\n  4694: a2 = a2 + a3\n  4697: u64 [s1 + 0xe8] = a2\n  4701: a1 = a2 <u a3\n  4704: a0 = a0 + a1\n  4707: u64 [s1 + 0xe0] = a0\n  4711: a0 = sp + 0xffffffffffffffe0\n  4714: t1 = a0 & 0xffffffffffffffe0\n  4717: sp = t1\n  4719: u64 [s1 + 0xd8] = t1\n  4723: fallthrough\n      : @140 (gas: 20)\n  4724: a0 = u64 [s1 + 0xf8]\n  4728: a0 = t2 <u a0\n  4731: a2 = u64 [s1 + 0xf0]\n  4735: a1 = a4 ^ a2\n  4738: a2 = a4 <u a2\n  4741: a2 = a0 if a1 == 0\n  4744: a5 = u64 [s1 + 0xe8]\n  4748: a0 = ra <u a5\n  4751: a3 = u64 [s1 + 0xe0]\n  4755: a1 = t0 ^ a3\n  4758: a3 = t0 <u a3\n  4761: a3 = a0 if a1 == 0\n  4764: a0 = ra ^ a5\n  4767: a0 = a0 | a1\n  4770: a3 = a2 if a0 == 0\n  4773: u64 [t1] = t2\n  4775: u64 [t1 + 0x8] = a4\n  4778: u64 [t1 + 0x10] = ra\n  4781: u64 [t1 + 0x18] = t0\n  4784: jump @143 if a3 == 0\n      : @141 (gas: 11)\n  4787: u64 [s1 + 1816] = 0\n  4791: u64 [s1 + 1808] = 0\n  4795: u64 [s1 + 1800] = 0\n  4799: u64 [s1 + 1792] = 0\n  4803: a1 = s1 + 0x700\n  4807: a0 = t1\n  4809: u64 [s1 + 0x110] = t2\n  4813: u64 [s1 + 0x118] = a4\n  4817: u64 [s1 + 0x108] = t0\n  4821: u64 [s1 + 0x100] = ra\n  4825: ra = 136, jump @23\n      : @142 [@dyn 68] (gas: 15)\n  4831: t1 = u64 [s1 + 0xd8]\n  4835: t0 = u64 [s1 + 0x108]\n  4839: a4 = u64 [s1 + 0x118]\n  4843: t2 = u64 [s1 + 0x110]\n  4847: t2 = t2 + 0x1\n  4850: a0 = t2 <u 0x1\n  4853: a4 = a4 + a0\n  4856: a0 = t2 | a4\n  4859: a0 = a0 <u 0x1\n  4862: a1 = u64 [s1 + 0x100]\n  4866: a0 = a0 + a1\n  4869: a1 = a0 <u a1\n  4872: t0 = t0 + a1\n  4875: ra = a0\n  4877: jump @140\n      : @143 (gas: 9)\n  4880: a0 = u64 [s1 + 0xc8]\n  4884: a0 = a0 ^ 0x1\n  4887: a2 = u64 [s1 + 0x98]\n  4891: a1 = u64 [s1 + 0xb8]\n  4895: a0 = a1 if a2 != 0\n  4898: a1 = u64 [s1 + 0xc0]\n  4902: a3 = u64 [s1 + 0xd0]\n  4906: a0 = a1 if a3 != 0\n  4909: jump @153 if a0 == 0\n      : @144 (gas: 10)\n  4913: a0 = u64 [s1 + 0xa0]\n  4917: a0 = a0 & 0xffffffffffffffe0\n  4920: u64 [s1 + 0xa8] = a0\n  4924: u64 [s1 + 856] = 0\n  4928: u64 [s1 + 848] = 0\n  4932: u64 [s1 + 840] = 0\n  4936: a1 = s1 + 0x340\n  4940: u64 [s1 + 832] = 0x1\n  4945: a0 = 0\n  4947: ra = 138, jump @19\n      : @145 [@dyn 69] (gas: 7)\n  4953: a0 = sp + 0xffffffffffffffe0\n  4956: a0 = a0 & 0xffffffffffffffe0\n  4959: u64 [s1 + 0x100] = a0\n  4963: sp = a0\n  4965: a1 = 0x20\n  4968: a0 = 0\n  4970: ra = 140, jump @34\n      : @146 [@dyn 70] (gas: 40)\n  4976: a1 = sp + 0xffffffffffffffe0\n  4979: a1 = a1 & 0xffffffffffffffe0\n  4982: u64 [s1 + 0xf8] = a1\n  4986: sp = a1\n  4988: i32 a0 = a0 + 0\n  4990: i32 a2 = a1 + 0\n  4992: a1 = 0x20\n  4995: ecalli 9 // 'hash_keccak_256'\n  4997: u64 [s1 + 280] = 0x20\n  5002: a5 = 0\n  5004: u64 [s1 + 264] = 0\n  5008: u64 [s1 + 272] = 0\n  5012: a4 = 0\n  5014: a3 = 0\n  5016: a2 = 0\n  5018: t1 = 0\n  5020: a0 = u64 [s1 + 0xf8]\n  5024: t0 = u64 [a0 + 0x18]\n  5027: a1 = u64 [a0 + 0x10]\n  5030: ra = u64 [a0 + 0x8]\n  5033: a0 = u64 [a0]\n  5035: u64 [s1 + 0xf0] = a0\n  5039: a0 = reverse t0\n  5041: u64 [s1 + 0xf8] = a0\n  5045: t2 = reverse a1\n  5047: t0 = reverse ra\n  5049: a0 = u64 [s1 + 0xf0]\n  5053: a1 = reverse a0\n  5055: ra = a1\n  5057: a0 = u64 [s1 + 0x100]\n  5061: u64 [a0 + 0x18] = a1\n  5064: a1 = t0\n  5066: u64 [s1 + 0xb8] = a1\n  5070: u64 [a0 + 0x10] = a1\n  5073: a1 = t2\n  5075: u64 [s1 + 0xe8] = a1\n  5079: u64 [a0 + 0x8] = a1\n  5082: a1 = u64 [s1 + 0xf8]\n  5086: u64 [a0] = a1\n  5088: fallthrough\n      : @147 (gas: 24)\n  5089: u64 [s1 + 0xe0] = ra\n  5093: a0 = u64 [s1 + 0xa8]\n  5097: u64 [s1 + 0xd0] = a4\n  5101: a0 = a4 <u a0\n  5104: a4 = a0 ^ 0x1\n  5107: u64 [s1 + 0xc8] = a3\n  5111: a4 = 0x1 if a3 != 0\n  5114: u64 [s1 + 0xf0] = t1\n  5118: u64 [s1 + 0xd8] = a2\n  5122: a0 = a2 | t1\n  5125: a4 = 0x1 if a0 != 0\n  5128: a0 = u64 [s1 + 0x80]\n  5132: a1 = u64 [s1 + 0x118]\n  5136: a1 = a1 + a0\n  5139: a3 = u64 [s1 + 0x78]\n  5142: u64 [s1 + 0xc0] = a5\n  5146: t0 = a3 + a5\n  5149: t2 = u64 [s1 + 0x70]\n  5152: a2 = u64 [s1 + 0x108]\n  5156: a2 = a2 + t2\n  5159: t1 = u64 [s1 + 0x68]\n  5162: a5 = u64 [s1 + 0x110]\n  5166: t1 = t1 + a5\n  5169: jump @155 if a4 != 0\n      : @148 (gas: 6)\n  5173: ra = a1 <u a0\n  5176: a4 = t0 + ra\n  5179: t0 = a4 ^ a3\n  5182: a5 = a4 <u a3\n  5185: a5 = ra if t0 == 0\n  5188: t0 = 142, jump @1963\n      : @149 [@dyn 71] (gas: 1)\n  5195: jump @185 if a0 != 0\n      : @150 (gas: 2)\n  5199: a0 = s1 + 0x2c0\n  5203: ra = 144, jump @17\n      : @151 [@dyn 72] (gas: 13)\n  5209: a4 = s1 + 0x200\n  5213: a0 = u64 [a4 + 0xd8]\n  5217: a1 = u64 [a4 + 0xd0]\n  5221: a2 = u64 [a4 + 0xc8]\n  5225: a3 = u64 [a4 + 0xc0]\n  5229: a4 = s1 + 0x700\n  5233: u64 [a4 + 0x38] = a0\n  5236: u64 [a4 + 0x30] = a1\n  5239: u64 [a4 + 0x28] = a2\n  5242: u64 [a4 + 0x20] = a3\n  5245: a1 = s1 + 0x720\n  5249: a0 = u64 [s1 + 0x100]\n  5253: ra = 146, jump @23\n      : @152 [@dyn 73] (gas: 55)\n  5259: ra = u64 [s1 + 0xf8]\n  5263: ra = ra + 0x1\n  5266: a0 = ra <u 0x1\n  5269: a3 = u64 [s1 + 0xe8]\n  5273: a3 = a3 + a0\n  5276: a0 = ra | a3\n  5279: a0 = a0 <u 0x1\n  5282: a1 = u64 [s1 + 0xb8]\n  5286: a0 = a0 + a1\n  5289: a1 = a0 <u a1\n  5292: t0 = u64 [s1 + 0xe0]\n  5296: t0 = t0 + a1\n  5299: a1 = u64 [s1 + 0x118]\n  5303: a2 = a1 + 0x20\n  5306: u64 [s1 + 0xe0] = a2\n  5310: a1 = a2 <u a1\n  5313: a2 = u64 [s1 + 0xc0]\n  5317: a4 = a2 + a1\n  5320: u64 [s1 + 0xb0] = a4\n  5324: a4 = a4 <u a2\n  5327: a4 = a1 if a1 == 0\n  5330: a1 = u64 [s1 + 0x108]\n  5334: t2 = a1 + a4\n  5337: a4 = t2 <u a1\n  5340: a1 = u64 [s1 + 0x110]\n  5344: a1 = a1 + a4\n  5347: u64 [s1 + 0x110] = a1\n  5351: a1 = u64 [s1 + 0xd0]\n  5355: a4 = a1 + 0x20\n  5358: a5 = a4 <u a1\n  5361: a2 = u64 [s1 + 0xc8]\n  5365: a1 = a2 + a5\n  5368: a2 = a1 <u a2\n  5371: a2 = a5 if a5 == 0\n  5374: a5 = u64 [s1 + 0xd8]\n  5378: a2 = a2 + a5\n  5381: a5 = a2 <u a5\n  5384: t1 = u64 [s1 + 0xf0]\n  5388: t1 = t1 + a5\n  5391: u64 [s1 + 0xe8] = a3\n  5395: a5 = u64 [s1 + 0x100]\n  5399: u64 [a5 + 0x8] = a3\n  5402: a3 = ra\n  5404: u64 [s1 + 0xf8] = a3\n  5408: u64 [a5] = a3\n  5410: u64 [a5 + 0x10] = a0\n  5413: ra = t0\n  5415: u64 [a5 + 0x18] = t0\n  5418: u64 [s1 + 0xb8] = a0\n  5422: a0 = u64 [s1 + 0xe0]\n  5426: u64 [s1 + 0x118] = a0\n  5430: a5 = u64 [s1 + 0xb0]\n  5434: u64 [s1 + 0x108] = t2\n  5438: a3 = a1\n  5440: jump @147\n      : @153 (gas: 7)\n  5443: a3 = u64 [s1 + 0xa0]\n  5447: a4 = u64 [s1 + 0x90]\n  5451: a0 = a3 | a4\n  5454: a5 = u64 [s1 + 0x88]\n  5458: a1 = a2 | a5\n  5461: a0 = a0 | a1\n  5464: jump @169 if a0 != 0\n      : @154 (gas: 5)\n  5468: u64 [s1 + 256] = 0\n  5472: u64 [s1 + 248] = 0\n  5476: u64 [s1 + 264] = 0\n  5480: u64 [s1 + 272] = 0\n  5484: jump @171\n      : @155 (gas: 12)\n  5487: a4 = u64 [s1 + 0xa8]\n  5491: a5 = u64 [s1 + 0xa0]\n  5495: a4 = a4 ^ a5\n  5498: ra = u64 [s1 + 0x90]\n  5502: a4 = a4 | ra\n  5505: u64 [s1 + 0x118] = a4\n  5509: a5 = u64 [s1 + 0x98]\n  5513: a4 = u64 [s1 + 0x88]\n  5517: a5 = a5 | a4\n  5520: a4 = u64 [s1 + 0x118]\n  5524: a4 = a4 | a5\n  5527: jump @168 if a4 == 0\n      : @156 (gas: 6)\n  5531: ra = a1 <u a0\n  5534: a4 = t0 + ra\n  5537: t0 = a4 ^ a3\n  5540: a5 = a4 <u a3\n  5543: a5 = ra if t0 == 0\n  5546: t0 = 148, jump @1963\n      : @157 [@dyn 74] (gas: 1)\n  5553: jump @185 if a0 != 0\n      : @158 (gas: 2)\n  5557: a0 = s1 + 0x320\n  5561: ra = 150, jump @17\n      : @159 [@dyn 75] (gas: 11)\n  5567: a1 = s1 + 0x300\n  5571: a0 = u64 [a1 + 0x38]\n  5574: u64 [s1 + 0x110] = a0\n  5578: a0 = u64 [a1 + 0x30]\n  5581: u64 [s1 + 0x108] = a0\n  5585: a0 = u64 [a1 + 0x28]\n  5588: u64 [s1 + 0xf8] = a0\n  5592: a0 = u64 [a1 + 0x20]\n  5595: u64 [s1 + 0xf0] = a0\n  5599: a0 = u64 [s1 + 0xa0]\n  5603: t0 = 152, jump @1996\n      : @160 [@dyn 76] (gas: 1)\n  5610: ra = 154, jump @2025\n      : @161 [@dyn 77] (gas: 6)\n  5617: u64 [s1 + 0xe8] = a0\n  5621: u64 [s1 + 0xd0] = a1\n  5625: a0 = 0xffffffffffffffff\n  5628: a1 = 0xffffffffffffffff\n  5631: a2 = u64 [s1 + 0x118]\n  5635: ra = 156, jump @2020\n      : @162 [@dyn 78] (gas: 1)\n  5642: t0 = 158, jump @2000\n      : @163 [@dyn 79] (gas: 1)\n  5649: ra = 160, jump @2020\n      : @164 [@dyn 80] (gas: 1)\n  5656: t0 = 162, jump @1933\n      : @165 [@dyn 81] (gas: 2)\n  5663: a2 = u64 [s1 + 0xf8]\n  5667: t0 = 164, jump @2012\n      : @166 [@dyn 82] (gas: 8)\n  5674: a4 = s1 + 0x700\n  5678: u64 [a4 + 0x58] = a3\n  5681: u64 [a4 + 0x50] = a2\n  5684: u64 [a4 + 0x48] = a1\n  5687: u64 [a4 + 0x40] = a0\n  5690: a1 = s1 + 0x740\n  5694: a0 = u64 [s1 + 0x100]\n  5698: ra = 166, jump @23\n      : @167 [@dyn 83] (gas: 2)\n  5704: ra = u64 [s1 + 0x90]\n  5708: fallthrough\n      : @168 (gas: 27)\n  5709: a0 = ra >> 0x3f\n  5712: a1 = u64 [s1 + 0x88]\n  5716: a1 = a1 << 0x1\n  5719: a0 = a0 | a1\n  5722: a3 = u64 [s1 + 0x98]\n  5726: a1 = a3 >> 0x3f\n  5729: a2 = ra << 0x1\n  5732: a1 = a1 | a2\n  5735: a4 = u64 [s1 + 0xa0]\n  5739: a2 = a4 >> 0x3f\n  5742: a3 = a3 << 0x1\n  5745: a2 = a2 | a3\n  5748: a3 = a4 << 0x1\n  5751: a3 = a3 + 0x1\n  5754: u64 [s1 + 1912] = 0\n  5758: u64 [s1 + 1904] = 0\n  5762: u64 [s1 + 1896] = 0\n  5766: a5 = s1 + 0x700\n  5770: u64 [a5 + 96] = 0x1\n  5774: u64 [a5 + 0x80] = a3\n  5778: u64 [a5 + 0x88] = a2\n  5782: u64 [a5 + 0x90] = a1\n  5786: u64 [a5 + 0x98] = a0\n  5790: a0 = s1 + 0x760\n  5794: a1 = s1 + 0x780\n  5798: ra = 0xb6\n  5802: jump @23\n      : @169 (gas: 3)\n  5805: a0 = s1 + 0x360\n  5809: a1 = u64 [s1 + 0x18]\n  5812: ra = 168, jump @17\n      : @170 [@dyn 84] (gas: 14)\n  5818: a5 = u64 [s1 + 0x88]\n  5822: a4 = u64 [s1 + 0x90]\n  5826: a2 = u64 [s1 + 0x98]\n  5830: a3 = u64 [s1 + 0xa0]\n  5834: a1 = s1 + 0x300\n  5838: a0 = u64 [a1 + 0x78]\n  5841: u64 [s1 + 0x110] = a0\n  5845: a0 = u64 [a1 + 0x70]\n  5848: u64 [s1 + 0x108] = a0\n  5852: a0 = u64 [a1 + 0x68]\n  5855: u64 [s1 + 0xf8] = a0\n  5859: a0 = u64 [a1 + 0x60]\n  5862: u64 [s1 + 0x100] = a0\n  5866: fallthrough\n      : @171 (gas: 15)\n  5867: a0 = a2 >> 0x3f\n  5870: a1 = a4 << 0x1\n  5873: a0 = a0 | a1\n  5876: u64 [s1 + 0xf0] = a0\n  5880: a0 = a4 >> 0x3f\n  5883: a1 = a5 << 0x1\n  5886: a0 = a0 | a1\n  5889: u64 [s1 + 0xe8] = a0\n  5893: a0 = a3 >> 0x3f\n  5896: a1 = a2 << 0x1\n  5899: a0 = a0 | a1\n  5902: u64 [s1 + 0xe0] = a0\n  5906: a0 = a3 << 0x1\n  5909: u64 [s1 + 0xd8] = a0\n  5913: t0 = 170, jump @2010\n      : @172 [@dyn 85] (gas: 1)\n  5920: ra = 172, jump @2025\n      : @173 [@dyn 86] (gas: 7)\n  5927: u64 [s1 + 0xb8] = a0\n  5931: u64 [s1 + 0xd0] = a1\n  5935: a0 = u64 [s1 + 0xa0]\n  5939: i32 a2 = a0 << 0x3\n  5942: a0 = 0xffffffffffffffff\n  5945: a1 = 0xffffffffffffffff\n  5948: ra = 174, jump @2020\n      : @174 [@dyn 87] (gas: 10)\n  5955: u64 [s1 + 0xc8] = a0\n  5959: u64 [s1 + 0xc0] = a1\n  5963: a1 = u64 [s1 + 0xb8]\n  5967: a0 = a0 | a1\n  5970: u64 [s1 + 0xb8] = a0\n  5974: a0 = u64 [s1 + 0x118]\n  5978: i32 a2 = a0 + 0xffffffffffffff80\n  5981: a0 = 0xffffffffffffffff\n  5984: a1 = 0xffffffffffffffff\n  5987: ra = 176, jump @2020\n      : @175 [@dyn 88] (gas: 7)\n  5994: a4 = u64 [s1 + 0x118]\n  5998: a2 = a4 <u 0x80\n  6002: a3 = u64 [s1 + 0xb8]\n  6006: a0 = a3 if a2 != 0\n  6009: a5 = u64 [s1 + 0xc0]\n  6013: a3 = u64 [s1 + 0xd0]\n  6017: t0 = 178, jump @1964\n      : @176 [@dyn 89] (gas: 2)\n  6024: a4 = u64 [s1 + 0xc8]\n  6028: t0 = 180, jump @1960\n      : @177 [@dyn 90] (gas: 20)\n  6035: a4 = u64 [s1 + 0xd8]\n  6039: a0 = a0 | a4\n  6042: a4 = u64 [s1 + 0xe0]\n  6046: a1 = a1 | a4\n  6049: a4 = u64 [s1 + 0xe8]\n  6053: a3 = a3 | a4\n  6056: a4 = u64 [s1 + 0xf0]\n  6060: a2 = a2 | a4\n  6063: a5 = s1 + 0x700\n  6067: u64 [a5 + 160] = 0x1\n  6072: u64 [a5 + 0xd0] = a2\n  6076: u64 [a5 + 0xd8] = a3\n  6080: u64 [a5 + 0xc8] = a1\n  6084: u64 [a5 + 0xc0] = a0\n  6088: u64 [s1 + 1976] = 0\n  6092: u64 [s1 + 1968] = 0\n  6096: u64 [s1 + 1960] = 0\n  6100: a0 = s1 + 0x7a0\n  6104: a1 = s1 + 0x7c0\n  6108: ra = 182, jump @23\n      : @178 [@dyn 91] (gas: 17)\n  6114: u64 [s1 + 2040] = 0\n  6118: u64 [s1 + 2032] = 0\n  6122: u64 [s1 + 2024] = 0\n  6126: u64 [s1 + 2016] = 0x9\n  6131: a0 = s1 + 0x1000\n  6135: u64 [a0 + 4294965272] = 0\n  6139: a0 = s1 + 0x1000\n  6143: u64 [a0 + 4294965264] = 0\n  6147: a0 = s1 + 0x1000\n  6151: u64 [a0 + 4294965256] = 0\n  6155: a0 = 0xe35fa931a000\n  6165: a1 = s1 + 0x1000\n  6169: u64 [a1 + 0xfffffffffffff800] = a0\n  6173: a0 = s1 + 0x7e0\n  6177: a1 = s1 + 0x7ff\n  6181: a1 = a1 + 0x1\n  6184: ra = 184, jump @23\n      : @179 [@dyn 92] (gas: 8)\n  6190: a0 = 0x30220\n  6195: u64 [s1 + 0x118] = a0\n  6199: i32 a0 = a0 + 0\n  6201: ra = 0xba\n  6205: ecalli 5 // 'caller'\n  6207: a2 = u64 [s1 + 0x118]\n  6211: t0 = 0xbc\n  6215: jump @1948\n      : @180 [@dyn 93] (gas: 2)\n  6219: a2 = u64 [s1 + 0x118]\n  6223: t0 = 188, jump @1948\n      : @181 [@dyn 94] (gas: 20)\n  6230: u64 [s1 + 0x118] = a1\n  6234: a0 = a0 >> 0x20\n  6237: a1 = reverse a2\n  6239: a2 = a1 << 0x20\n  6242: a0 = a0 | a2\n  6245: u64 [s1 + 0x110] = a0\n  6249: a1 = a1 >> 0x20\n  6252: u64 [s1 + 0x108] = a1\n  6256: a0 = s1 + 0x1000\n  6260: u64 [a0 + 4294965304] = 0\n  6264: a0 = s1 + 0x1000\n  6268: u64 [a0 + 4294965296] = 0\n  6272: a0 = s1 + 0x1000\n  6276: u64 [a0 + 4294965288] = 0\n  6280: a1 = s1 + 0x1000\n  6284: u64 [a1 + 4294965280] = 0xa\n  6289: a0 = s1 + 0x300\n  6293: a1 = s1 + 0x7ff\n  6297: a1 = a1 + 0x21\n  6300: ra = 190, jump @21\n      : @182 [@dyn 95] (gas: 29)\n  6306: a0 = u32 [s1 + 0x314]\n  6310: a0 = a0 << 0x20\n  6313: a1 = u64 [s1 + 0x318]\n  6317: a4 = s1 + 0x100\n  6321: a2 = u64 [a4 + 0x8]\n  6324: a0 = a0 | a2\n  6327: a2 = s1 + 0x1000\n  6331: u64 [a2 + 4294965336] = 0\n  6335: a2 = s1 + 0x1000\n  6339: u64 [a2 + 4294965328] = 0\n  6343: a2 = s1 + 0x1000\n  6347: u64 [a2 + 4294965320] = 0\n  6351: a3 = s1 + 0x1000\n  6355: u64 [a3 + 4294965312] = 0xa\n  6360: a2 = s1 + 0x1000\n  6364: u64 [a2 + 0xfffffffffffff878] = a1\n  6368: a1 = u64 [a4 + 0x10]\n  6371: a2 = s1 + 0x1000\n  6375: u64 [a2 + 0xfffffffffffff868] = a1\n  6379: a1 = u64 [a4 + 0x18]\n  6382: a2 = s1 + 0x1000\n  6386: u64 [a2 + 0xfffffffffffff860] = a1\n  6390: a1 = s1 + 0x1000\n  6394: u64 [a1 + 0xfffffffffffff870] = a0\n  6398: a0 = s1 + 0x7ff\n  6402: a0 = a0 + 0x41\n  6405: a1 = s1 + 0x7ff\n  6409: a1 = a1 + 0x61\n  6412: ra = 192, jump @23\n      : @183 [@dyn 96] (gas: 3)\n  6418: a0 = s1 + 0x2e0\n  6422: a1 = 0x40\n  6425: ra = 194, jump @17\n      : @184 [@dyn 97] (gas: 13)\n  6431: a4 = s1 + 0x200\n  6435: a3 = u64 [a4 + 0xf8]\n  6439: a1 = u64 [a4 + 0xf0]\n  6443: a2 = u64 [a4 + 0xe8]\n  6447: a0 = u64 [a4 + 0xe0]\n  6451: a3 = a3 | a2\n  6454: a2 = a0 | a1\n  6457: a2 = a2 | a3\n  6460: a2 = a2 >> 0x20\n  6463: a1 = a1 | a3\n  6466: a1 = a1 << 0x20\n  6469: a1 = a1 | a2\n  6472: jump @224 if a1 == 0\n      : @185 (gas: 1)\n  6476: trap\n      : @186 (gas: 6)\n  6477: a1 = 0x20220\n  6482: i32 a1 = a1 + 0\n  6484: a0 = 0x1\n  6487: a2 = 0\n  6489: ecalli 13 // 'seal_return'\n  6491: fallthrough\n      : @187 (gas: 6)\n  6492: u64 [s1 + 336] = 0\n  6496: u64 [s1 + 328] = 0\n  6500: u64 [s1 + 320] = 0\n  6504: t0 = 0xc4\n  6508: a0 = 0x4e487b7100000000\n  6518: fallthrough\n      : @188 [@dyn 98] (gas: 4)\n  6519: a1 = s1 + 0x140\n  6523: u64 [s1 + 0x158] = a0\n  6527: a0 = 0\n  6529: ra = 198, jump @19\n      : @189 [@dyn 99] (gas: 7)\n  6535: u64 [s1 + 312] = 0\n  6539: u64 [s1 + 304] = 0\n  6543: u64 [s1 + 288] = 0x41\n  6548: a0 = 0x4\n  6551: a1 = s1 + 0x120\n  6555: u64 [s1 + 296] = 0\n  6559: ra = 200, jump @19\n      : @190 [@dyn 100] (gas: 2)\n  6565: a1 = i32 [0x2020c]\n  6570: jump @192 if a1 >u 63\n      : @191 (gas: 3)\n  6574: u32 [0x2020c] = 0x40\n  6580: a1 = 0x20220\n  6585: jump @223\n      : @192 (gas: 2)\n  6588: a1 = 0x20220\n  6593: jump @223\n      : @193 (gas: 6)\n  6596: u64 [s1 + 400] = 0\n  6600: u64 [s1 + 392] = 0\n  6604: u64 [s1 + 384] = 0\n  6608: t0 = 0xca\n  6612: a0 = 0x4e487b7100000000\n  6622: fallthrough\n      : @194 [@dyn 101] (gas: 4)\n  6623: a1 = s1 + 0x180\n  6627: u64 [s1 + 0x198] = a0\n  6631: a0 = 0\n  6633: ra = 204, jump @19\n      : @195 [@dyn 102] (gas: 7)\n  6639: u64 [s1 + 376] = 0\n  6643: u64 [s1 + 368] = 0\n  6647: u64 [s1 + 352] = 0x41\n  6652: a0 = 0x4\n  6655: a1 = s1 + 0x160\n  6659: u64 [s1 + 360] = 0\n  6663: ra = 206, jump @19\n      : @196 [@dyn 103] (gas: 2)\n  6669: a1 = i32 [0x2020c]\n  6674: jump @198 if a1 >u 63\n      : @197 (gas: 3)\n  6678: u32 [0x2020c] = 0x40\n  6684: a1 = 0x20220\n  6689: jump @223\n      : @198 (gas: 2)\n  6692: a1 = 0x20220\n  6697: jump @223\n      : @199 (gas: 6)\n  6700: u64 [s1 + 464] = 0\n  6704: u64 [s1 + 456] = 0\n  6708: u64 [s1 + 448] = 0\n  6712: t0 = 0xd0\n  6716: a0 = 0x4e487b7100000000\n  6726: fallthrough\n      : @200 [@dyn 104] (gas: 4)\n  6727: a1 = s1 + 0x1c0\n  6731: u64 [s1 + 0x1d8] = a0\n  6735: a0 = 0\n  6737: ra = 210, jump @19\n      : @201 [@dyn 105] (gas: 7)\n  6743: u64 [s1 + 440] = 0\n  6747: u64 [s1 + 432] = 0\n  6751: u64 [s1 + 416] = 0x41\n  6756: a0 = 0x4\n  6759: a1 = s1 + 0x1a0\n  6763: u64 [s1 + 424] = 0\n  6767: ra = 212, jump @19\n      : @202 [@dyn 106] (gas: 2)\n  6773: a1 = i32 [0x2020c]\n  6778: jump @204 if a1 >u 63\n      : @203 (gas: 3)\n  6782: u32 [0x2020c] = 0x40\n  6788: a1 = 0x20220\n  6793: jump @223\n      : @204 (gas: 2)\n  6796: a1 = 0x20220\n  6801: jump @223\n      : @205 (gas: 6)\n  6804: u64 [s1 + 528] = 0\n  6808: u64 [s1 + 520] = 0\n  6812: u64 [s1 + 512] = 0\n  6816: t0 = 0xd6\n  6820: a0 = 0x4e487b7100000000\n  6830: fallthrough\n      : @206 [@dyn 107] (gas: 4)\n  6831: a1 = s1 + 0x200\n  6835: u64 [s1 + 0x218] = a0\n  6839: a0 = 0\n  6841: ra = 216, jump @19\n      : @207 [@dyn 108] (gas: 7)\n  6847: u64 [s1 + 504] = 0\n  6851: u64 [s1 + 496] = 0\n  6855: u64 [s1 + 480] = 0x22\n  6860: a0 = 0x4\n  6863: a1 = s1 + 0x1e0\n  6867: u64 [s1 + 488] = 0\n  6871: ra = 218, jump @19\n      : @208 [@dyn 109] (gas: 2)\n  6877: a1 = i32 [0x2020c]\n  6882: jump @210 if a1 >u 63\n      : @209 (gas: 3)\n  6886: u32 [0x2020c] = 0x40\n  6892: a1 = 0x20220\n  6897: jump @223\n      : @210 (gas: 2)\n  6900: a1 = 0x20220\n  6905: jump @223\n      : @211 (gas: 6)\n  6908: u64 [s1 + 624] = 0\n  6912: u64 [s1 + 616] = 0\n  6916: u64 [s1 + 608] = 0\n  6920: t0 = 0xdc\n  6924: a0 = 0x4e487b7100000000\n  6934: fallthrough\n      : @212 [@dyn 110] (gas: 4)\n  6935: a1 = s1 + 0x260\n  6939: u64 [s1 + 0x278] = a0\n  6943: a0 = 0\n  6945: ra = 222, jump @19\n      : @213 [@dyn 111] (gas: 7)\n  6951: u64 [s1 + 600] = 0\n  6955: u64 [s1 + 592] = 0\n  6959: u64 [s1 + 576] = 0x41\n  6964: a0 = 0x4\n  6967: a1 = s1 + 0x240\n  6971: u64 [s1 + 584] = 0\n  6975: ra = 224, jump @19\n      : @214 [@dyn 112] (gas: 2)\n  6981: a1 = i32 [0x2020c]\n  6986: jump @216 if a1 >u 63\n      : @215 (gas: 3)\n  6990: u32 [0x2020c] = 0x40\n  6996: a1 = 0x20220\n  7001: jump @223\n      : @216 (gas: 2)\n  7003: a1 = 0x20220\n  7008: jump @223\n      : @217 (gas: 6)\n  7010: u64 [s1 + 688] = 0\n  7014: u64 [s1 + 680] = 0\n  7018: u64 [s1 + 672] = 0\n  7022: t0 = 0xe2\n  7026: a0 = 0x4e487b7100000000\n  7036: fallthrough\n      : @218 [@dyn 113] (gas: 4)\n  7037: a1 = s1 + 0x2a0\n  7041: u64 [s1 + 0x2b8] = a0\n  7045: a0 = 0\n  7047: ra = 228, jump @19\n      : @219 [@dyn 114] (gas: 7)\n  7053: u64 [s1 + 664] = 0\n  7057: u64 [s1 + 656] = 0\n  7061: u64 [s1 + 640] = 0x22\n  7066: a0 = 0x4\n  7069: a1 = s1 + 0x280\n  7073: u64 [s1 + 648] = 0\n  7077: ra = 230, jump @19\n      : @220 [@dyn 115] (gas: 2)\n  7083: a1 = i32 [0x2020c]\n  7088: jump @222 if a1 >u 63\n      : @221 (gas: 3)\n  7092: u32 [0x2020c] = 0x40\n  7098: a1 = 0x20220\n  7103: jump @223\n      : @222 (gas: 2)\n  7105: a1 = 0x20220\n  7110: fallthrough\n      : @223 (gas: 7)\n  7111: i32 a1 = a1 + 0\n  7113: a0 = 0x1\n  7116: a2 = 0x24\n  7119: ecalli 13 // 'seal_return'\n  7121: u64 [s1 + 0x118] = a0\n  7125: ra = 0xe8\n  7129: jump @34\n      : @224 (gas: 2)\n  7132: u64 [s1 + 0x118] = a0\n  7136: ra = 232, jump @34\n      : @225 [@dyn 116] (gas: 5)\n  7142: i32 a0 = a0 + 0\n  7144: a1 = 0\n  7146: a2 = 0\n  7148: ecalli 2 // 'call_data_copy'\n  7150: jump @15\n      : @226 (gas: 3)\n  7153: a0 = u64 [s1 + 0x118]\n  7157: a1 = 0\n  7159: ra = 234, jump @34\n      : @227 [@dyn 117] (gas: 5)\n  7165: i32 a1 = a0 + 0\n  7167: a0 = 0\n  7169: a2 = 0\n  7171: ecalli 13 // 'seal_return'\n  7173: jump @187\n      : @228 [@dyn 118] (gas: 4)\n  7176: a0 = 0x20208\n  7181: u64 [s1 + 0x158] = a0\n  7185: a0 = i32 [0x20208]\n  7190: jump @230 if a0 >=u 4\n      : @229 (gas: 1)\n  7194: jump @1371\n      : @230 (gas: 6)\n  7197: a0 = s1 + 0x3000\n  7201: i32 a0 = a0 + 0x220\n  7205: a1 = 0\n  7207: ra = 0xee\n  7211: ecalli 3 // 'call_data_load'\n  7213: fallthrough\n      : @231 [@dyn 119] (gas: 3)\n  7214: a2 = s1 + 0x30d8\n  7218: a0 = i32 [a2 + 0x164]\n  7222: jump @263 if a0 == 252243936\n      : @232 (gas: 1)\n  7230: jump @333 if a0 == 539899712\n      : @233 (gas: 1)\n  7238: jump @235 if a0 == 1173944960\n      : @234 (gas: 1)\n  7245: jump @501\n      : @235 (gas: 8)\n  7248: u64 [a2 + 1344] = 0\n  7252: u64 [a2 + 1336] = 0\n  7256: u64 [a2 + 1328] = 0\n  7260: u64 [a2 + 1320] = 0\n  7264: a0 = s1 + 0x3000\n  7268: i32 a0 = a0 + 0x600\n  7272: ecalli 16 // 'value_transferred'\n  7274: fallthrough\n      : @236 (gas: 10)\n  7275: a4 = s1 + 0x30d8\n  7279: a5 = a4 + 0x500\n  7283: a0 = u64 [a5 + 0x38]\n  7286: a1 = u64 [a5 + 0x40]\n  7289: a2 = u64 [a5 + 0x30]\n  7292: a3 = u64 [a5 + 0x28]\n  7295: a1 = a1 | a2\n  7298: a0 = a0 | a3\n  7301: a0 = a0 | a1\n  7304: jump @238 if a0 == 0\n      : @237 (gas: 1)\n  7307: jump @1213\n      : @238 (gas: 3)\n  7310: a0 = u64 [s1 + 0x158]\n  7314: a0 = i32 [a0]\n  7316: jump @240 if a0 >u 3\n      : @239 (gas: 1)\n  7320: jump @1214\n      : @240 (gas: 7)\n  7323: u64 [a4 + 1376] = 0\n  7327: u64 [a4 + 1368] = 0\n  7331: u64 [a4 + 1360] = 0\n  7335: u64 [a4 + 1352] = 0x7\n  7340: a0 = s1 + 0x1720\n  7344: a1 = s1 + 0x3620\n  7348: ra = 240, jump @21\n      : @241 [@dyn 120] (gas: 1)\n  7354: t0 = 242, jump @2002\n      : @242 [@dyn 121] (gas: 19)\n  7361: a1 = 0x30220\n  7366: a0 = 0x2020c\n  7371: u64 [s1 + 0x100] = a0\n  7375: a5 = s1 + 0x10d8\n  7379: a2 = a5 + 0x600\n  7383: a0 = u64 [a2 + 0x60]\n  7386: u64 [s1 + 0xf0] = a0\n  7390: a0 = u64 [a2 + 0x58]\n  7393: u64 [s1 + 0xe8] = a0\n  7397: a0 = u64 [a2 + 0x50]\n  7400: u64 [s1 + 0xe0] = a0\n  7404: a0 = u64 [a2 + 0x48]\n  7407: u64 [s1 + 0xd8] = a0\n  7411: u64 [s1 + 0xd0] = a1\n  7415: i32 a1 = a1 + 0\n  7417: u64 [s1 + 0xc8] = a1\n  7421: a0 = a4\n  7423: t0 = 0xf4\n  7427: jump @1999\n      : @243 (gas: 3)\n  7431: a0 = a4\n  7433: t0 = 0xf4\n  7437: jump @1999\n      : @244 (gas: 1)\n  7441: t0 = 244, jump @1999\n      : @245 [@dyn 122] (gas: 9)\n  7448: t0 = a0 <u a1\n  7451: a4 = u64 [s1 + 0xf0]\n  7455: a2 = ra ^ a4\n  7458: a4 = ra <u a4\n  7461: a4 = t0 if a2 == 0\n  7464: a1 = a1 ^ a0\n  7467: a1 = a1 | a2\n  7470: a4 = a3 if a1 == 0\n  7473: jump @361 if a4 == 0\n      : @246 (gas: 1)\n  7477: t0 = 246, jump @1975\n      : @247 [@dyn 123] (gas: 10)\n  7484: u64 [a5 + 0x228] = t1\n  7488: u64 [s1 + 0x150] = t2\n  7492: u64 [a5 + 0x230] = t2\n  7496: u64 [s1 + 0x140] = a1\n  7500: u64 [a5 + 0x238] = a1\n  7504: a1 = s1 + 0x1300\n  7508: u64 [s1 + 0x148] = ra\n  7512: u64 [a5 + 0x240] = ra\n  7516: a0 = 0\n  7518: ra = 248, jump @19\n      : @248 [@dyn 124] (gas: 9)\n  7524: a0 = s1 + 0x10d8\n  7528: u64 [a0 + 544] = 0\n  7532: u64 [a0 + 536] = 0\n  7536: u64 [a0 + 528] = 0\n  7540: a3 = a0\n  7542: a0 = 0x20\n  7545: a1 = s1 + 0x12e0\n  7549: u64 [a3 + 520] = 0xb\n  7554: ra = 250, jump @19\n      : @249 [@dyn 125] (gas: 4)\n  7560: a0 = u64 [s1 + 0xc8]\n  7564: ra = 0xfc\n  7568: ecalli 5 // 'caller'\n  7570: fallthrough\n      : @250 [@dyn 126] (gas: 3)\n  7571: a0 = u64 [s1 + 0x100]\n  7575: a0 = i32 [a0]\n  7577: jump @252 if a0 >=u 64\n      : @251 (gas: 4)\n  7581: a0 = u64 [s1 + 0x100]\n  7585: u32 [a0 + 0] = 0x40\n  7588: t0 = 0xfe\n  7592: jump @1926\n      : @252 (gas: 1)\n  7596: t0 = 254, jump @1926\n      : @253 [@dyn 127] (gas: 10)\n  7603: a0 = 0x20220\n  7608: i32 a0 = a0 + 0\n  7610: i32 a2 = a2 + 0\n  7612: a1 = 0x40\n  7615: u64 [s1 + 0x118] = a0\n  7619: ra = 0x100\n  7623: ecalli 9 // 'hash_keccak_256'\n  7625: a3 = u64 [s1 + 0x120]\n  7629: t0 = 0x102\n  7633: jump @1929\n      : @254 [@dyn 128] (gas: 2)\n  7637: a3 = u64 [s1 + 0x120]\n  7641: t0 = 258, jump @1929\n      : @255 [@dyn 129] (gas: 7)\n  7648: u64 [a5 + 0x68] = a3\n  7651: u64 [a5 + 0x70] = a2\n  7654: u64 [a5 + 0x78] = a4\n  7657: u64 [a5 + 0x80] = a0\n  7661: a0 = s1 + 0x12c0\n  7665: a1 = s1 + 0x3640\n  7669: ra = 260, jump @21\n      : @256 [@dyn 130] (gas: 5)\n  7675: a5 = s1 + 0x10d8\n  7679: a0 = u32 [a5 + 0x1f8]\n  7683: a1 = u64 [a5 + 0x1e8]\n  7687: a2 = u64 [a5 + 0x1f0]\n  7691: t0 = 262, jump @1941\n      : @257 [@dyn 131] (gas: 1)\n  7698: jump @244 if a1 != 0\n      : @258 (gas: 1)\n  7702: t0 = 264, jump @1986\n      : @259 [@dyn 132] (gas: 12)\n  7709: t0 = a1 + a0\n  7712: a1 = t0 <u a1\n  7715: a0 = u64 [s1 + 0x110]\n  7719: a0 = a0 + a1\n  7722: u64 [s1 + 0x110] = a0\n  7726: u64 [s1 + 0xf8] = a2\n  7730: a1 = a2 | a0\n  7733: u64 [s1 + 0x108] = a3\n  7737: a2 = a3 | t0\n  7740: a1 = a1 | a2\n  7743: u64 [s1 + 0xc0] = t0\n  7747: jump @243 if a1 != 0\n      : @260 (gas: 8)\n  7751: u64 [a5 + 472] = 0\n  7755: u64 [a5 + 464] = 0\n  7759: u64 [a5 + 456] = 0\n  7763: a0 = 0x4e487b7100000000\n  7773: a1 = s1 + 0x12a0\n  7777: u64 [a5 + 0x1e0] = a0\n  7781: a0 = 0\n  7783: ra = 266, jump @19\n      : @261 [@dyn 133] (gas: 3)\n  7789: t0 = 0x10c\n  7793: a1 = s1 + 0x10d8\n  7797: fallthrough\n      : @262 [@dyn 134] (gas: 9)\n  7798: u64 [a1 + 448] = 0\n  7802: u64 [a1 + 440] = 0\n  7806: u64 [a1 + 424] = 0x11\n  7811: a2 = a1\n  7813: a0 = 0x4\n  7816: a1 = s1 + 0x1280\n  7820: u64 [a2 + 432] = 0\n  7824: ra = 0x176\n  7828: jump @19\n      : @263 (gas: 8)\n  7831: u64 [a2 + 704] = 0\n  7835: u64 [a2 + 696] = 0\n  7839: u64 [a2 + 688] = 0\n  7843: u64 [a2 + 680] = 0\n  7847: a0 = s1 + 0x3000\n  7851: i32 a0 = a0 + 0x380\n  7855: ecalli 16 // 'value_transferred'\n  7857: fallthrough\n      : @264 (gas: 10)\n  7858: a4 = s1 + 0x30d8\n  7862: a5 = a4 + 0x200\n  7866: a0 = u64 [a5 + 0xb8]\n  7870: a1 = u64 [a5 + 0xc0]\n  7874: a2 = u64 [a5 + 0xb0]\n  7878: a3 = u64 [a5 + 0xa8]\n  7882: a1 = a1 | a2\n  7885: a0 = a0 | a3\n  7888: a0 = a0 | a1\n  7891: jump @266 if a0 == 0\n      : @265 (gas: 1)\n  7894: jump @1215\n      : @266 (gas: 3)\n  7897: a0 = u64 [s1 + 0x158]\n  7901: a0 = i32 [a0]\n  7903: jump @268 if a0 >u 3\n      : @267 (gas: 1)\n  7907: jump @1216\n      : @268 (gas: 8)\n  7910: u64 [a4 + 736] = 0\n  7914: u64 [a4 + 728] = 0\n  7918: u64 [a4 + 720] = 0\n  7922: u64 [a4 + 712] = 0x7\n  7927: a0 = s1 + 0x7ff\n  7931: a0 = a0 + 0x2e1\n  7935: a1 = s1 + 0x33a0\n  7939: ra = 270, jump @21\n      : @269 [@dyn 135] (gas: 21)\n  7945: a1 = s1 + 0x7ff\n  7949: a1 = a1 + 0xd9\n  7953: a2 = a1 + 0x200\n  7957: a0 = u64 [a2 + 0x20]\n  7960: u64 [s1 + 0xf0] = a0\n  7964: a0 = u64 [a2 + 0x18]\n  7967: u64 [s1 + 0xd8] = a0\n  7971: a0 = u64 [a2 + 0x10]\n  7974: u64 [s1 + 0xe8] = a0\n  7978: a0 = u64 [a2 + 0x8]\n  7981: u64 [s1 + 0xe0] = a0\n  7985: a0 = s1 + 0x30d8\n  7989: u64 [a0 + 768] = 0\n  7993: u64 [a0 + 760] = 0\n  7997: u64 [a0 + 752] = 0\n  8001: a1 = a0\n  8003: u64 [a1 + 744] = 0x8\n  8008: a0 = s1 + 0x7ff\n  8012: a0 = a0 + 0x2c1\n  8016: a1 = s1 + 0x33c0\n  8020: ra = 272, jump @21\n      : @270 [@dyn 136] (gas: 25)\n  8026: a0 = s1 + 0x7ff\n  8030: a0 = a0 + 0xd9\n  8034: t1 = u64 [a0 + 0x200]\n  8038: t2 = u64 [a0 + 0x1f8]\n  8042: t0 = u64 [a0 + 0x1f0]\n  8046: a1 = u64 [a0 + 0x1e8]\n  8050: a0 = u64 [s1 + 0xf0]\n  8054: a4 = a0 ^ t1\n  8057: a5 = a0 <u t1\n  8060: a2 = u64 [s1 + 0xd8]\n  8064: a0 = a2 <u t2\n  8067: u64 [s1 + 0x150] = a0\n  8071: a5 = a0 if a4 == 0\n  8074: a0 = u64 [s1 + 0xe8]\n  8078: ra = a0 ^ t0\n  8081: a0 = a0 <u t0\n  8084: u64 [s1 + 0x158] = a1\n  8088: a3 = u64 [s1 + 0xe0]\n  8092: a1 = a3 <u a1\n  8095: a0 = a1 if ra == 0\n  8098: ra = a1\n  8100: a1 = a2 ^ t2\n  8103: a1 = a1 | a4\n  8106: a5 = a0 if a1 == 0\n  8109: jump @272 if a5 == 0\n      : @271 (gas: 1)\n  8112: jump @1217\n      : @272 (gas: 28)\n  8115: a1 = a2 - t2\n  8118: a2 = u64 [s1 + 0xf0]\n  8122: a2 = a2 - t1\n  8125: a3 = u64 [s1 + 0x150]\n  8129: a2 = a2 - a3\n  8132: a3 = a1 <u a0\n  8135: a2 = a2 - a3\n  8138: a1 = a1 - a0\n  8141: a0 = u64 [s1 + 0xe8]\n  8145: a0 = a0 - t0\n  8148: a0 = a0 - ra\n  8151: a3 = 0xffffffff\n  8161: u64 [s1 + 0x78] = a3\n  8164: a3 = u64 [s1 + 0xe0]\n  8168: a4 = u64 [s1 + 0x158]\n  8172: a3 = a3 - a4\n  8175: a4 = s1 + 0x7ff\n  8179: a4 = a4 + 0xd9\n  8183: a5 = a4 + 0x100\n  8187: u64 [a5 + 0xa8] = a3\n  8191: u64 [a5 + 0xb0] = a0\n  8195: u64 [a5 + 0xb8] = a1\n  8199: a0 = s1 + 0x7ff\n  8203: a0 = a0 + 0x2a1\n  8207: a1 = s1 + 0x7ff\n  8211: a1 = a1 + 0x281\n  8215: u64 [a5 + 0xc0] = a2\n  8219: ra = 274, jump @1575\n      : @273 [@dyn 137] (gas: 23)\n  8226: t2 = 0\n  8228: u64 [s1 + 192] = 0\n  8232: t0 = 0\n  8234: a4 = 0\n  8236: a2 = 0\n  8238: a3 = 0\n  8240: ra = 0\n  8242: t1 = 0\n  8244: a5 = s1 + 0x7ff\n  8248: a5 = a5 + 0xd9\n  8252: a0 = u64 [a5 + 0x1e0]\n  8256: u64 [s1 + 0x98] = a0\n  8260: a1 = 0x100000000\n  8270: a0 = u64 [a5 + 0x1d8]\n  8274: u64 [s1 + 0x80] = a0\n  8278: a0 = u64 [a5 + 0x1d0]\n  8282: u64 [s1 + 0x88] = a0\n  8286: a0 = u64 [a5 + 0x1c8]\n  8290: u64 [s1 + 0x90] = a0\n  8294: u64 [s1 + 0xa0] = a1\n  8298: a1 = 0xffffffe0\n  8308: u64 [s1 + 0x70] = a1\n  8311: fallthrough\n      : @274 (gas: 19)\n  8312: u64 [s1 + 0x148] = a4\n  8316: u64 [s1 + 0x150] = t0\n  8320: u64 [s1 + 0x158] = t2\n  8324: a0 = u64 [s1 + 0xe0]\n  8328: a1 = a2 <u a0\n  8331: a0 = u64 [s1 + 0xe8]\n  8335: a4 = a3 ^ a0\n  8338: t2 = a3 <u a0\n  8341: t2 = a1 if a4 == 0\n  8344: a1 = u64 [s1 + 0xd8]\n  8348: a0 = ra <u a1\n  8351: a4 = u64 [s1 + 0xf0]\n  8355: t0 = t1 ^ a4\n  8358: a4 = t1 <u a4\n  8361: a4 = a0 if t0 == 0\n  8364: a1 = ra ^ a1\n  8367: a1 = a1 | t0\n  8370: a4 = t2 if a1 == 0\n  8373: jump @276 if a4 != 0\n      : @275 (gas: 1)\n  8376: jump @483\n      : @276 (gas: 21)\n  8379: a2 = a2 + 0x1\n  8382: a1 = a2 <u 0x1\n  8385: a3 = a3 + a1\n  8388: a1 = a2 | a3\n  8391: a1 = a1 <u 0x1\n  8394: a1 = a1 + ra\n  8397: a0 = a1 <u ra\n  8400: t1 = t1 + a0\n  8403: u64 [s1 + 0x140] = a2\n  8407: a0 = a5 + 0x100\n  8411: u64 [a0 + 0x8] = a2\n  8414: u64 [s1 + 0x138] = a3\n  8418: u64 [a0 + 0x10] = a3\n  8421: u64 [s1 + 0x128] = a1\n  8425: u64 [a0 + 0x18] = a1\n  8428: a1 = s1 + 0x7ff\n  8432: a1 = a1 + 0x1e1\n  8436: u64 [s1 + 0x130] = t1\n  8440: u64 [a5 + 0x120] = t1\n  8444: a0 = 0\n  8446: ra = 276, jump @19\n      : @277 [@dyn 138] (gas: 11)\n  8452: a0 = s1 + 0x7ff\n  8456: a0 = a0 + 0xd9\n  8460: u64 [a0 + 256] = 0\n  8464: u64 [a0 + 248] = 0\n  8468: u64 [a0 + 240] = 0\n  8472: a3 = a0\n  8474: a0 = 0x20\n  8477: a1 = s1 + 0x7ff\n  8481: a1 = a1 + 0x1c1\n  8485: u64 [a3 + 232] = 0xb\n  8490: ra = 278, jump @19\n      : @278 [@dyn 139] (gas: 6)\n  8496: a0 = 0x30220\n  8501: u64 [s1 + 0x120] = a0\n  8505: i32 a0 = a0 + 0\n  8507: ra = 0x118\n  8511: ecalli 0 // 'address'\n  8512: fallthrough\n      : @279 [@dyn 140] (gas: 3)\n  8513: a2 = 0x2020c\n  8518: a0 = i32 [0x2020c]\n  8523: jump @281 if a0 >=u 64\n      : @280 (gas: 2)\n  8527: u32 [0x2020c] = 0x40\n  8533: fallthrough\n      : @281 (gas: 3)\n  8534: u64 [s1 + 0x100] = a2\n  8538: a2 = u64 [s1 + 0x120]\n  8542: t0 = 282, jump @1911\n      : @282 [@dyn 141] (gas: 9)\n  8549: a0 = 0x20220\n  8554: i32 a0 = a0 + 0\n  8556: i32 a2 = a2 + 0\n  8558: a1 = 0x40\n  8561: u64 [s1 + 0xf8] = a0\n  8565: ra = 0x11c\n  8569: ecalli 9 // 'hash_keccak_256'\n  8571: t0 = 0x11e\n  8575: jump @1924\n      : @283 [@dyn 142] (gas: 1)\n  8579: t0 = 286, jump @1924\n      : @284 [@dyn 143] (gas: 9)\n  8586: a3 = a1 + 0x300\n  8590: u64 [a3 + 0x8] = a4\n  8593: u64 [a3 + 0x10] = a5\n  8596: u64 [a3 + 0x18] = a2\n  8599: u64 [a3 + 0x20] = a0\n  8602: a0 = s1 + 0x7ff\n  8606: a0 = a0 + 0x1a1\n  8610: a1 = s1 + 0x33e0\n  8614: ra = 288, jump @21\n      : @285 [@dyn 144] (gas: 22)\n  8620: a5 = s1 + 0x7ff\n  8624: a5 = a5 + 0xd9\n  8628: a0 = u32 [a5 + 0xd8]\n  8632: a1 = u64 [a5 + 0xc8]\n  8636: a2 = u64 [a5 + 0xd0]\n  8640: a3 = u64 [s1 + 0x110]\n  8644: a0 = a0 ^ a3\n  8647: a3 = u64 [s1 + 0x118]\n  8651: a1 = a1 ^ a3\n  8654: a0 = a0 | a1\n  8657: a1 = u64 [s1 + 0x120]\n  8661: a1 = a1 ^ a2\n  8664: a1 = a1 | a0\n  8667: a0 = u64 [s1 + 0x128]\n  8671: ra = a0\n  8673: t2 = u64 [s1 + 0x158]\n  8677: t0 = u64 [s1 + 0x150]\n  8681: a4 = u64 [s1 + 0x148]\n  8685: a2 = u64 [s1 + 0x140]\n  8689: a3 = u64 [s1 + 0x138]\n  8693: t1 = u64 [s1 + 0x130]\n  8697: jump @274 if a1 != 0\n      : @286 (gas: 8)\n  8701: u64 [a5 + 0xa8] = a2\n  8705: u64 [a5 + 0xb0] = a3\n  8709: u64 [a5 + 0xb8] = a0\n  8713: a1 = s1 + 0x7ff\n  8717: a1 = a1 + 0x181\n  8721: u64 [a5 + 0xc0] = t1\n  8725: a0 = 0\n  8727: ra = 290, jump @19\n      : @287 [@dyn 145] (gas: 11)\n  8733: a0 = s1 + 0x7ff\n  8737: a0 = a0 + 0xd9\n  8741: u64 [a0 + 160] = 0\n  8745: u64 [a0 + 152] = 0\n  8749: u64 [a0 + 144] = 0\n  8753: a3 = a0\n  8755: a0 = 0x20\n  8758: a1 = s1 + 0x7ff\n  8762: a1 = a1 + 0x161\n  8766: u64 [a3 + 136] = 0xb\n  8771: ra = 292, jump @19\n      : @288 [@dyn 146] (gas: 7)\n  8777: a0 = sp + 0xffffffffffffffe0\n  8780: a0 = a0 & 0xffffffffffffffe0\n  8783: u64 [s1 + 0xa8] = a0\n  8787: sp = a0\n  8789: a2 = u64 [s1 + 0x100]\n  8793: a0 = i32 [a2]\n  8795: jump @290 if a0 >u 63\n      : @289 (gas: 3)\n  8799: u32 [a2 + 0] = 0x40\n  8802: t0 = 0x126\n  8806: jump @1952\n      : @290 (gas: 1)\n  8810: t0 = 294, jump @1952\n      : @291 [@dyn 147] (gas: 23)\n  8817: ecalli 9 // 'hash_keccak_256'\n  8819: a3 = u64 [s1 + 0x120]\n  8823: a0 = u64 [a3 + 0x18]\n  8826: a1 = u64 [a3 + 0x10]\n  8829: a2 = u64 [a3 + 0x8]\n  8832: a3 = u64 [a3]\n  8834: a5 = reverse a0\n  8836: a4 = reverse a1\n  8838: a0 = reverse a2\n  8840: a1 = reverse a3\n  8842: u64 [s1 + 0x108] = a1\n  8846: a2 = u64 [s1 + 0xa8]\n  8850: u64 [a2 + 0x18] = a1\n  8853: u64 [s1 + 0x110] = a0\n  8857: u64 [a2 + 0x10] = a0\n  8860: u64 [s1 + 0xd0] = a4\n  8864: u64 [a2 + 0x8] = a4\n  8867: u64 [s1 + 0xc8] = a5\n  8871: u64 [a2] = a5\n  8873: a0 = s1 + 0x7ff\n  8877: a0 = a0 + 0x141\n  8881: a1 = 0x40\n  8884: ra = 296, jump @17\n      : @292 [@dyn 148] (gas: 17)\n  8890: a1 = s1 + 0x7ff\n  8894: a1 = a1 + 0xd9\n  8898: a0 = u64 [a1 + 0x80]\n  8902: u64 [s1 + 0xb8] = a0\n  8906: a3 = u64 [a1 + 0x78]\n  8909: u64 [s1 + 0xb0] = a3\n  8913: a2 = u64 [a1 + 0x70]\n  8916: u64 [s1 + 0x118] = a2\n  8920: a4 = u64 [a1 + 0x68]\n  8923: u64 [s1 + 0x120] = a4\n  8927: u64 [a1 + 0x60] = a0\n  8930: u64 [a1 + 0x58] = a3\n  8933: u64 [a1 + 0x50] = a2\n  8936: a0 = s1 + 0x7ff\n  8940: a0 = a0 + 0x121\n  8944: u64 [a1 + 0x48] = a4\n  8947: ra = 298, jump @1511\n      : @293 [@dyn 149] (gas: 4)\n  8953: a0 = s1 + 0x7ff\n  8957: a0 = a0 + 0x101\n  8961: a1 = u64 [s1 + 0xa8]\n  8965: ra = 300, jump @21\n      : @294 [@dyn 150] (gas: 3)\n  8971: a2 = u64 [s1 + 0xb0]\n  8975: a0 = u64 [s1 + 0xb8]\n  8979: t0 = 302, jump @1956\n      : @295 [@dyn 151] (gas: 1)\n  8986: jump @297 if a0 == 0\n      : @296 (gas: 1)\n  8989: jump @500\n      : @297 (gas: 14)\n  8992: a4 = s1 + 0x7ff\n  8996: a4 = a4 + 0xd9\n  9000: a0 = u64 [a4 + 0x40]\n  9003: a1 = u64 [a4 + 0x38]\n  9006: a2 = u64 [a4 + 0x30]\n  9009: a3 = u64 [a4 + 0x28]\n  9012: u64 [a4 + 0x8] = a3\n  9015: u64 [a4 + 0x10] = a2\n  9018: u64 [a4 + 0x18] = a1\n  9021: a1 = s1 + 0x7ff\n  9025: a1 = a1 + 0xe1\n  9029: u64 [a4 + 0x20] = a0\n  9032: a0 = u64 [s1 + 0x120]\n  9036: ra = 304, jump @19\n      : @298 [@dyn 152] (gas: 5)\n  9042: a0 = u64 [s1 + 0xc8]\n  9046: a0 = a0 + 0x1\n  9049: a1 = a0 <u 0x1\n  9052: a2 = u64 [s1 + 0xd0]\n  9056: t0 = 306, jump @1928\n      : @299 [@dyn 153] (gas: 9)\n  9063: a5 = a4 + 0x300\n  9067: u64 [a5 + 0x30] = a1\n  9070: u64 [a5 + 0x28] = a0\n  9073: u64 [a5 + 0x38] = a2\n  9076: u64 [a5 + 0x40] = a3\n  9079: a0 = s1 + 0x7ff\n  9083: a0 = a0 + 0xc1\n  9087: a1 = s1 + 0x3400\n  9091: ra = 308, jump @21\n      : @300 [@dyn 154] (gas: 11)\n  9097: a0 = u64 [s1 + 0xb0]\n  9101: a1 = u64 [s1 + 0xb8]\n  9105: a1 = a1 | a0\n  9108: a0 = u64 [s1 + 0x70]\n  9111: a2 = u64 [s1 + 0x120]\n  9115: a0 = a2 <u a0\n  9118: a2 = u64 [s1 + 0x118]\n  9122: a0 = 0 if a2 != 0\n  9124: u64 [s1 + 0xa8] = a1\n  9128: a0 = 0 if a1 != 0\n  9130: jump @302 if a0 != 0\n      : @301 (gas: 1)\n  9133: jump @500\n      : @302 (gas: 9)\n  9136: a0 = s1 + 0x7ff\n  9140: a0 = a0 + 0xd9\n  9144: a0 = u64 [a0 + 0xfffffffffffffff8]\n  9147: a1 = s1 + 0x1000\n  9151: a1 = u64 [a1 + 0xfffffffffffff8c8]\n  9155: a2 = s1 + 0x1000\n  9159: a2 = u64 [a2 + 0xfffffffffffff8c0]\n  9163: a3 = u64 [s1 + 0x78]\n  9166: t0 = 310, jump @1980\n      : @303 [@dyn 155] (gas: 11)\n  9173: a4 = s1 + 0x1000\n  9177: u64 [a4 + 4294965432] = 0\n  9181: a4 = s1 + 0x1000\n  9185: u64 [a4 + 0xfffffffffffff8a0] = a2\n  9189: a2 = s1 + 0x1000\n  9193: u64 [a2 + 0xfffffffffffff8a8] = a1\n  9197: a1 = s1 + 0x7ff\n  9201: a1 = a1 + 0xa1\n  9205: a2 = s1 + 0x1000\n  9209: u64 [a2 + 0xfffffffffffff8b0] = a3\n  9213: ra = 312, jump @19\n      : @304 [@dyn 156] (gas: 3)\n  9219: a1 = u64 [s1 + 0xc8]\n  9223: a0 = a1 + 0x2\n  9226: t0 = 314, jump @1917\n      : @305 [@dyn 157] (gas: 8)\n  9233: u64 [a5 + 0x50] = a2\n  9236: u64 [a5 + 0x48] = a0\n  9239: u64 [a5 + 0x58] = a3\n  9242: u64 [a5 + 0x60] = a1\n  9245: a0 = s1 + 0x7ff\n  9249: a0 = a0 + 0x81\n  9253: a1 = s1 + 0x3420\n  9257: ra = 316, jump @21\n      : @306 [@dyn 158] (gas: 3)\n  9263: a0 = u64 [s1 + 0xa0]\n  9267: a0 = a0 + 0xffffffffffffffc0\n  9270: t0 = 318, jump @1951\n      : @307 [@dyn 159] (gas: 1)\n  9277: jump @309 if a0 != 0\n      : @308 (gas: 1)\n  9280: jump @500\n      : @309 (gas: 8)\n  9283: a0 = s1 + 0x1000\n  9287: a0 = u64 [a0 + 0xfffffffffffff890]\n  9291: a1 = s1 + 0x1000\n  9295: a1 = u64 [a1 + 0xfffffffffffff888]\n  9299: a2 = s1 + 0x1000\n  9303: a2 = u64 [a2 + 0xfffffffffffff880]\n  9307: a3 = u64 [s1 + 0x78]\n  9310: t0 = 320, jump @1981\n      : @310 [@dyn 160] (gas: 11)\n  9317: a4 = s1 + 0x1000\n  9321: u64 [a4 + 4294965368] = 0\n  9325: a4 = s1 + 0x1000\n  9329: u64 [a4 + 0xfffffffffffff860] = a2\n  9333: a2 = s1 + 0x1000\n  9337: u64 [a2 + 0xfffffffffffff868] = a1\n  9341: a1 = s1 + 0x7ff\n  9345: a1 = a1 + 0x61\n  9348: a2 = s1 + 0x1000\n  9352: u64 [a2 + 0xfffffffffffff870] = a3\n  9356: ra = 322, jump @19\n      : @311 [@dyn 161] (gas: 3)\n  9362: a1 = u64 [s1 + 0xc8]\n  9366: a0 = a1 + 0x3\n  9369: t0 = 324, jump @1917\n      : @312 [@dyn 162] (gas: 8)\n  9376: u64 [a5 + 0x70] = a2\n  9379: u64 [a5 + 0x68] = a0\n  9382: u64 [a5 + 0x78] = a3\n  9385: u64 [a5 + 0x80] = a1\n  9389: a0 = s1 + 0x7ff\n  9393: a0 = a0 + 0x41\n  9396: a1 = s1 + 0x3440\n  9400: ra = 326, jump @21\n      : @313 [@dyn 163] (gas: 3)\n  9406: a0 = u64 [s1 + 0xa0]\n  9410: a0 = a0 + 0xffffffffffffffa0\n  9413: t0 = 328, jump @1951\n      : @314 [@dyn 164] (gas: 1)\n  9420: jump @316 if a0 != 0\n      : @315 (gas: 1)\n  9423: jump @500\n      : @316 (gas: 21)\n  9426: a0 = s1 + 0x1000\n  9430: a2 = u64 [a0 + 0xfffffffffffff858]\n  9434: a0 = s1 + 0x1000\n  9438: a1 = u64 [a0 + 0xfffffffffffff850]\n  9442: a0 = s1 + 0x1000\n  9446: a3 = u64 [a0 + 0xfffffffffffff848]\n  9450: a0 = s1 + 0x1000\n  9454: a4 = u64 [a0 + 0xfffffffffffff840]\n  9458: a0 = u64 [s1 + 0x120]\n  9462: i32 a0 = a0 + 0x60\n  9465: a5 = s1 + 0x1000\n  9469: u64 [a5 + 0xfffffffffffff820] = a4\n  9473: a4 = s1 + 0x1000\n  9477: u64 [a4 + 0xfffffffffffff828] = a3\n  9481: a3 = s1 + 0x1000\n  9485: u64 [a3 + 0xfffffffffffff830] = a1\n  9489: a1 = s1 + 0x7ff\n  9493: a1 = a1 + 0x21\n  9496: a3 = s1 + 0x1000\n  9500: u64 [a3 + 0xfffffffffffff838] = a2\n  9504: ra = 330, jump @19\n      : @317 [@dyn 165] (gas: 3)\n  9510: a1 = u64 [s1 + 0xc8]\n  9514: a0 = a1 + 0x4\n  9517: t0 = 332, jump @1917\n      : @318 [@dyn 166] (gas: 8)\n  9524: u64 [a5 + 0x90] = a2\n  9528: u64 [a5 + 0x88] = a0\n  9532: u64 [a5 + 0x98] = a3\n  9536: u64 [a5 + 0xa0] = a1\n  9540: a0 = s1 + 0x7ff\n  9544: a0 = a0 + 0x1\n  9547: a1 = s1 + 0x3460\n  9551: ra = 334, jump @21\n      : @319 [@dyn 167] (gas: 3)\n  9557: a0 = u64 [s1 + 0xa0]\n  9561: a0 = a0 + 0xffffffffffffff80\n  9564: t0 = 336, jump @1951\n      : @320 [@dyn 168] (gas: 1)\n  9571: jump @322 if a0 != 0\n      : @321 (gas: 1)\n  9574: jump @500\n      : @322 (gas: 3)\n  9577: a0 = s1 + 0x1000\n  9581: a0 = u64 [a0 + 0xfffffffffffff800]\n  9585: t0 = 338, jump @1990\n      : @323 [@dyn 169] (gas: 6)\n  9592: u64 [s1 + 2040] = 0\n  9596: u64 [s1 + 2032] = 0\n  9600: u64 [s1 + 0x7e0] = a1\n  9604: a1 = s1 + 0x7e0\n  9608: u64 [s1 + 2024] = 0\n  9612: ra = 340, jump @19\n      : @324 [@dyn 170] (gas: 21)\n  9618: a1 = s1 + 0x100\n  9622: a0 = u64 [a1 + 0x58]\n  9625: u64 [s1 + 0x798] = a0\n  9629: a0 = u64 [s1 + 0xc0]\n  9633: u64 [s1 + 0x790] = a0\n  9637: a0 = u64 [a1 + 0x50]\n  9640: u64 [s1 + 0x788] = a0\n  9644: a0 = u64 [a1 + 0x48]\n  9647: u64 [s1 + 0x780] = a0\n  9651: a0 = u64 [s1 + 0x98]\n  9655: u64 [s1 + 0x7b8] = a0\n  9659: a0 = u64 [s1 + 0x80]\n  9663: u64 [s1 + 0x7b0] = a0\n  9667: a0 = u64 [s1 + 0x88]\n  9671: u64 [s1 + 0x7a8] = a0\n  9675: a0 = s1 + 0x7c0\n  9679: a1 = s1 + 0x7a0\n  9683: a2 = s1 + 0x780\n  9687: a3 = u64 [s1 + 0x90]\n  9691: u64 [s1 + 0x7a0] = a3\n  9695: ra = 342, jump @1606\n      : @325 [@dyn 171] (gas: 6)\n  9702: a4 = s1 + 0x700\n  9706: a1 = u64 [a4 + 0xd8]\n  9710: a2 = u64 [a4 + 0xd0]\n  9714: a3 = u64 [a4 + 0xc8]\n  9718: a0 = u64 [a4 + 0xc0]\n  9722: t0 = 344, jump @1988\n      : @326 [@dyn 172] (gas: 1)\n  9729: jump @328 if a1 == 0\n      : @327 (gas: 1)\n  9732: jump @500\n      : @328 (gas: 10)\n  9735: a1 = u64 [s1 + 0x120]\n  9739: u64 [s1 + 0x760] = a1\n  9743: a1 = u64 [s1 + 0x118]\n  9747: u64 [s1 + 0x768] = a1\n  9751: a1 = u64 [s1 + 0xb0]\n  9755: u64 [s1 + 0x770] = a1\n  9759: a1 = s1 + 0x760\n  9763: a2 = u64 [s1 + 0xb8]\n  9767: u64 [s1 + 0x778] = a2\n  9771: ra = 346, jump @19\n      : @329 [@dyn 173] (gas: 21)\n  9777: a0 = u64 [s1 + 0x158]\n  9781: a4 = s1 + 0x700\n  9785: u64 [a4 + 0x18] = a0\n  9788: a0 = u64 [s1 + 0xc0]\n  9792: u64 [a4 + 0x10] = a0\n  9795: a0 = u64 [s1 + 0x150]\n  9799: u64 [a4 + 0x8] = a0\n  9802: a0 = u64 [s1 + 0x148]\n  9806: u64 [a4] = a0\n  9808: a0 = u64 [s1 + 0x98]\n  9812: u64 [a4 + 0x38] = a0\n  9815: a0 = u64 [s1 + 0x80]\n  9819: u64 [a4 + 0x30] = a0\n  9822: a0 = u64 [s1 + 0x88]\n  9826: u64 [a4 + 0x28] = a0\n  9829: a0 = s1 + 0x740\n  9833: a1 = s1 + 0x720\n  9837: a2 = s1 + 0x700\n  9841: a3 = u64 [s1 + 0x90]\n  9845: u64 [a4 + 0x20] = a3\n  9848: ra = 348, jump @1606\n      : @330 [@dyn 174] (gas: 16)\n  9855: a4 = u64 [s1 + 0x148]\n  9859: a4 = a4 + 0x1\n  9862: a0 = a4 <u 0x1\n  9865: t0 = u64 [s1 + 0x150]\n  9869: t0 = t0 + a0\n  9872: a0 = a4 | t0\n  9875: a0 = a0 <u 0x1\n  9878: a1 = u64 [s1 + 0xc0]\n  9882: a0 = a0 + a1\n  9885: a1 = a0 <u a1\n  9888: t2 = u64 [s1 + 0x158]\n  9892: t2 = t2 + a1\n  9895: a1 = t0 | t2\n  9898: a2 = a4 | a0\n  9901: a1 = a1 | a2\n  9904: jump @332 if a1 != 0\n      : @331 (gas: 1)\n  9907: jump @546\n      : @332 (gas: 8)\n  9910: u64 [s1 + 0xc0] = a0\n  9914: ra = u64 [s1 + 0x128]\n  9918: a5 = s1 + 0x7ff\n  9922: a5 = a5 + 0xd9\n  9926: a2 = u64 [s1 + 0x140]\n  9930: a3 = u64 [s1 + 0x138]\n  9934: t1 = u64 [s1 + 0x130]\n  9938: jump @274\n      : @333 (gas: 8)\n  9941: u64 [a2 + 1024] = 0\n  9945: u64 [a2 + 1016] = 0\n  9949: u64 [a2 + 1008] = 0\n  9953: u64 [a2 + 1000] = 0\n  9957: a0 = s1 + 0x3000\n  9961: i32 a0 = a0 + 0x4c0\n  9965: ecalli 16 // 'value_transferred'\n  9967: fallthrough\n      : @334 (gas: 10)\n  9968: a4 = s1 + 0x30d8\n  9972: a5 = a4 + 0x300\n  9976: a0 = u64 [a5 + 0xf8]\n  9980: a1 = u64 [a4 + 0x400]\n  9984: a2 = u64 [a5 + 0xf0]\n  9988: a3 = u64 [a5 + 0xe8]\n  9992: a1 = a1 | a2\n  9995: a0 = a0 | a3\n  9998: a0 = a0 | a1\n 10001: jump @336 if a0 == 0\n      : @335 (gas: 1)\n 10004: jump @1224\n      : @336 (gas: 3)\n 10007: a0 = u64 [s1 + 0x158]\n 10011: a0 = i32 [a0]\n 10013: jump @338 if a0 >u 3\n      : @337 (gas: 1)\n 10017: jump @1225\n      : @338 (gas: 7)\n 10020: u64 [a4 + 1056] = 0\n 10024: u64 [a4 + 1048] = 0\n 10028: u64 [a4 + 1040] = 0\n 10032: u64 [a4 + 1032] = 0x7\n 10037: a0 = s1 + 0x1000\n 10041: a1 = s1 + 0x34e0\n 10045: ra = 350, jump @21\n      : @339 [@dyn 175] (gas: 1)\n 10051: t0 = 352, jump @2002\n      : @340 [@dyn 176] (gas: 20)\n 10058: a1 = 0x30220\n 10063: a0 = 0x2020c\n 10068: u64 [s1 + 0x100] = a0\n 10072: a5 = s1 + 0x7ff\n 10076: a5 = a5 + 0xd9\n 10080: a2 = a5 + 0x700\n 10084: a0 = u64 [a2 + 0x40]\n 10087: u64 [s1 + 0xf0] = a0\n 10091: a0 = u64 [a2 + 0x38]\n 10094: u64 [s1 + 0xe8] = a0\n 10098: a0 = u64 [a2 + 0x30]\n 10101: u64 [s1 + 0xe0] = a0\n 10105: a0 = u64 [a2 + 0x28]\n 10108: u64 [s1 + 0xd8] = a0\n 10112: u64 [s1 + 0xd0] = a1\n 10116: i32 a1 = a1 + 0\n 10118: u64 [s1 + 0xc8] = a1\n 10122: a0 = a4\n 10124: t0 = 0x162\n 10128: jump @1999\n      : @341 (gas: 3)\n 10132: a0 = a4\n 10134: t0 = 0x162\n 10138: jump @1999\n      : @342 (gas: 1)\n 10142: t0 = 354, jump @1999\n      : @343 [@dyn 177] (gas: 9)\n 10149: t0 = a0 <u a1\n 10152: a4 = u64 [s1 + 0xf0]\n 10156: a2 = ra ^ a4\n 10159: a4 = ra <u a4\n 10162: a4 = t0 if a2 == 0\n 10165: a1 = a1 ^ a0\n 10168: a1 = a1 | a2\n 10171: a4 = a3 if a1 == 0\n 10174: jump @422 if a4 == 0\n      : @344 (gas: 1)\n 10178: t0 = 356, jump @1975\n      : @345 [@dyn 178] (gas: 11)\n 10185: u64 [a5 + 0x308] = t1\n 10189: u64 [s1 + 0x150] = t2\n 10193: u64 [a5 + 0x310] = t2\n 10197: u64 [s1 + 0x140] = a1\n 10201: u64 [a5 + 0x318] = a1\n 10205: a1 = s1 + 0x7ff\n 10209: a1 = a1 + 0x3e1\n 10213: u64 [s1 + 0x148] = ra\n 10217: u64 [a5 + 0x320] = ra\n 10221: a0 = 0\n 10223: ra = 358, jump @19\n      : @346 [@dyn 179] (gas: 11)\n 10229: a0 = s1 + 0x7ff\n 10233: a0 = a0 + 0xd9\n 10237: u64 [a0 + 768] = 0\n 10241: u64 [a0 + 760] = 0\n 10245: u64 [a0 + 752] = 0\n 10249: a3 = a0\n 10251: a0 = 0x20\n 10254: a1 = s1 + 0x7ff\n 10258: a1 = a1 + 0x3c1\n 10262: u64 [a3 + 744] = 0xb\n 10267: ra = 360, jump @19\n      : @347 [@dyn 180] (gas: 4)\n 10273: a0 = u64 [s1 + 0xc8]\n 10277: ra = 0x16a\n 10281: ecalli 5 // 'caller'\n 10283: fallthrough\n      : @348 [@dyn 181] (gas: 3)\n 10284: a0 = u64 [s1 + 0x100]\n 10288: a0 = i32 [a0]\n 10290: jump @350 if a0 >=u 64\n      : @349 (gas: 4)\n 10294: a0 = u64 [s1 + 0x100]\n 10298: u32 [a0 + 0] = 0x40\n 10301: t0 = 0x16c\n 10305: jump @1926\n      : @350 (gas: 1)\n 10309: t0 = 364, jump @1926\n      : @351 [@dyn 182] (gas: 33)\n 10316: a0 = 0x20220\n 10321: i32 a0 = a0 + 0\n 10323: i32 a2 = a2 + 0\n 10325: a1 = 0x40\n 10328: u64 [s1 + 0x118] = a0\n 10332: ecalli 9 // 'hash_keccak_256'\n 10334: a3 = u64 [s1 + 0x120]\n 10338: a0 = u64 [a3]\n 10340: a1 = u64 [a3 + 0x8]\n 10343: a2 = u64 [a3 + 0x10]\n 10346: a3 = u64 [a3 + 0x18]\n 10349: a0 = reverse a0\n 10351: a1 = reverse a1\n 10353: a2 = reverse a2\n 10355: a3 = reverse a3\n 10357: a4 = a3 + 0x2\n 10360: a3 = a4 <u a3\n 10363: a5 = a2 + a3\n 10366: a2 = a5 <u a2\n 10369: a2 = a3 if a3 == 0\n 10372: a2 = a2 + a1\n 10375: a1 = a2 <u a1\n 10378: a0 = a0 + a1\n 10381: a1 = s1 + 0x30d8\n 10385: a3 = a1 + 0x400\n 10389: u64 [a3 + 0x28] = a4\n 10392: u64 [a3 + 0x30] = a5\n 10395: u64 [a3 + 0x38] = a2\n 10398: u64 [a3 + 0x40] = a0\n 10401: a0 = s1 + 0x7ff\n 10405: a0 = a0 + 0x3a1\n 10409: a1 = s1 + 0x3500\n 10413: ra = 366, jump @21\n      : @352 [@dyn 183] (gas: 6)\n 10419: a5 = s1 + 0x7ff\n 10423: a5 = a5 + 0xd9\n 10427: a0 = u32 [a5 + 0x2d8]\n 10431: a1 = u64 [a5 + 0x2c8]\n 10435: a2 = u64 [a5 + 0x2d0]\n 10439: t0 = 368, jump @1941\n      : @353 [@dyn 184] (gas: 1)\n 10446: jump @342 if a1 != 0\n      : @354 (gas: 1)\n 10450: t0 = 370, jump @1986\n      : @355 [@dyn 185] (gas: 12)\n 10457: t0 = a1 + a0\n 10460: a1 = t0 <u a1\n 10463: a0 = u64 [s1 + 0x110]\n 10467: a0 = a0 + a1\n 10470: u64 [s1 + 0x110] = a0\n 10474: u64 [s1 + 0xf8] = a2\n 10478: a1 = a2 | a0\n 10481: u64 [s1 + 0x108] = a3\n 10485: a2 = a3 | t0\n 10488: a1 = a1 | a2\n 10491: u64 [s1 + 0xc0] = t0\n 10495: jump @341 if a1 != 0\n      : @356 (gas: 9)\n 10499: u64 [a5 + 696] = 0\n 10503: u64 [a5 + 688] = 0\n 10507: u64 [a5 + 680] = 0\n 10511: a0 = 0x4e487b7100000000\n 10521: a1 = s1 + 0x7ff\n 10525: a1 = a1 + 0x381\n 10529: u64 [a5 + 0x2c0] = a0\n 10533: a0 = 0\n 10535: ra = 372, jump @19\n      : @357 [@dyn 186] (gas: 11)\n 10541: a1 = s1 + 0x7ff\n 10545: a1 = a1 + 0xd9\n 10549: u64 [a1 + 672] = 0\n 10553: u64 [a1 + 664] = 0\n 10557: u64 [a1 + 648] = 0x11\n 10562: a2 = a1\n 10564: a0 = 0x4\n 10567: a1 = s1 + 0x7ff\n 10571: a1 = a1 + 0x361\n 10575: u64 [a2 + 656] = 0\n 10579: ra = 374, jump @19\n      : @358 [@dyn 187] (gas: 3)\n 10585: a0 = u64 [s1 + 0x100]\n 10589: a0 = i32 [a0]\n 10591: jump @360 if a0 >u 63\n      : @359 (gas: 3)\n 10595: a1 = u64 [s1 + 0x100]\n 10599: u32 [a1 + 0] = 0x40\n 10602: fallthrough\n      : @360 (gas: 5)\n 10603: a0 = 0x1\n 10606: a2 = 0x24\n 10609: a1 = u64 [s1 + 0x118]\n 10613: ecalli 13 // 'seal_return'\n 10615: fallthrough\n      : @361 (gas: 14)\n 10616: a0 = 0xffffffff\n 10626: u64 [s1 + 0x68] = a0\n 10629: a0 = u64 [s1 + 0x108]\n 10633: a3 = a5 + 0x600\n 10637: u64 [a3 + 0x8] = a0\n 10640: a0 = u64 [s1 + 0xf8]\n 10644: u64 [a3 + 0x10] = a0\n 10647: a0 = u64 [s1 + 0xc0]\n 10651: u64 [a3 + 0x18] = a0\n 10654: a0 = s1 + 0x1700\n 10658: a1 = s1 + 0x16e0\n 10662: a2 = u64 [s1 + 0x110]\n 10666: u64 [a3 + 0x20] = a2\n 10669: ra = 376, jump @1575\n      : @362 [@dyn 188] (gas: 22)\n 10675: a4 = s1 + 0x10d8\n 10679: t0 = 0\n 10681: u64 [s1 + 176] = 0\n 10685: t2 = 0\n 10687: a0 = 0\n 10689: a2 = 0\n 10691: a5 = 0\n 10693: ra = 0\n 10695: t1 = 0\n 10697: a1 = u64 [a4 + 0x640]\n 10701: u64 [s1 + 0x88] = a1\n 10705: a3 = 0x100000000\n 10715: a1 = u64 [a4 + 0x638]\n 10719: u64 [s1 + 0x70] = a1\n 10722: a1 = u64 [a4 + 0x630]\n 10726: u64 [s1 + 0x78] = a1\n 10729: a1 = u64 [a4 + 0x628]\n 10733: u64 [s1 + 0x80] = a1\n 10737: u64 [s1 + 0x90] = a3\n 10741: a3 = 0xffffffe0\n 10751: u64 [s1 + 0x60] = a3\n 10754: fallthrough\n      : @363 (gas: 4)\n 10755: u64 [s1 + 0x148] = a0\n 10759: u64 [s1 + 0x150] = t2\n 10763: u64 [s1 + 0x158] = t0\n 10767: t0 = 378, jump @2013\n      : @364 [@dyn 189] (gas: 12)\n 10774: t0 = u64 [s1 + 0xe8]\n 10778: a0 = ra <u t0\n 10781: u64 [s1 + 0x140] = a0\n 10785: a4 = u64 [s1 + 0xf0]\n 10789: t2 = t1 ^ a4\n 10792: a4 = t1 <u a4\n 10795: a1 = u64 [s1 + 0x140]\n 10799: a4 = a1 if t2 == 0\n 10802: a1 = ra ^ t0\n 10805: a1 = a1 | t2\n 10808: a4 = a3 if a1 == 0\n 10811: jump @366 if a4 != 0\n      : @365 (gas: 1)\n 10814: jump @488\n      : @366 (gas: 1)\n 10817: t0 = 380, jump @1972\n      : @367 [@dyn 190] (gas: 12)\n 10824: a0 = s1 + 0x10d8\n 10828: a3 = a0 + 0x500\n 10832: u64 [a3 + 0x68] = a2\n 10835: u64 [s1 + 0x138] = a5\n 10839: u64 [a3 + 0x70] = a5\n 10842: u64 [s1 + 0x128] = a1\n 10846: u64 [a3 + 0x78] = a1\n 10849: a1 = s1 + 0x1640\n 10853: u64 [s1 + 0x130] = t1\n 10857: u64 [a0 + 0x580] = t1\n 10861: a0 = 0\n 10863: ra = 382, jump @19\n      : @368 [@dyn 191] (gas: 9)\n 10869: a0 = s1 + 0x10d8\n 10873: u64 [a0 + 1376] = 0\n 10877: u64 [a0 + 1368] = 0\n 10881: u64 [a0 + 1360] = 0\n 10885: a3 = a0\n 10887: a0 = 0x20\n 10890: a1 = s1 + 0x1620\n 10894: u64 [a3 + 1352] = 0xb\n 10899: ra = 384, jump @19\n      : @369 [@dyn 192] (gas: 4)\n 10905: a0 = u64 [s1 + 0xc8]\n 10909: ra = 0x182\n 10913: ecalli 5 // 'caller'\n 10915: fallthrough\n      : @370 [@dyn 193] (gas: 3)\n 10916: a0 = u64 [s1 + 0x100]\n 10920: a0 = i32 [a0]\n 10922: jump @372 if a0 >=u 64\n      : @371 (gas: 5)\n 10926: a0 = u64 [s1 + 0x100]\n 10930: u32 [a0 + 0] = 0x40\n 10933: a2 = u64 [s1 + 0xd0]\n 10937: t0 = 0x184\n 10941: jump @1911\n      : @372 (gas: 2)\n 10945: a2 = u64 [s1 + 0xd0]\n 10949: t0 = 388, jump @1911\n      : @373 [@dyn 194] (gas: 10)\n 10956: a0 = 0x20220\n 10961: i32 a0 = a0 + 0\n 10963: i32 a2 = a2 + 0\n 10965: a1 = 0x40\n 10968: u64 [s1 + 0xf8] = a0\n 10972: ra = 0x186\n 10976: ecalli 9 // 'hash_keccak_256'\n 10978: a3 = u64 [s1 + 0x108]\n 10982: t0 = 0x188\n 10986: jump @1929\n      : @374 [@dyn 195] (gas: 2)\n 10990: a3 = u64 [s1 + 0x108]\n 10994: t0 = 392, jump @1929\n      : @375 [@dyn 196] (gas: 7)\n 11001: u64 [a5 + 0x88] = a3\n 11005: u64 [a5 + 0x90] = a2\n 11009: u64 [a5 + 0x98] = a4\n 11013: u64 [a5 + 0xa0] = a0\n 11017: a0 = s1 + 0x1600\n 11021: a1 = s1 + 0x3660\n 11025: ra = 394, jump @21\n      : @376 [@dyn 197] (gas: 5)\n 11031: a4 = s1 + 0x10d8\n 11035: a0 = u32 [a4 + 0x538]\n 11039: a1 = u64 [a4 + 0x528]\n 11043: a2 = u64 [a4 + 0x530]\n 11047: t0 = 396, jump @1974\n      : @377 [@dyn 198] (gas: 7)\n 11054: t0 = u64 [s1 + 0x158]\n 11058: t2 = u64 [s1 + 0x150]\n 11062: a0 = u64 [s1 + 0x148]\n 11066: a2 = u64 [s1 + 0x140]\n 11070: a5 = u64 [s1 + 0x138]\n 11074: t1 = u64 [s1 + 0x130]\n 11078: jump @363 if a1 != 0\n      : @378 (gas: 8)\n 11082: a0 = a4 + 0x500\n 11086: u64 [a0 + 0x8] = a2\n 11089: u64 [a0 + 0x10] = a5\n 11092: u64 [a0 + 0x18] = a3\n 11095: a1 = s1 + 0x15e0\n 11099: u64 [a4 + 0x520] = t1\n 11103: a0 = 0\n 11105: ra = 398, jump @19\n      : @379 [@dyn 199] (gas: 9)\n 11111: a0 = s1 + 0x10d8\n 11115: u64 [a0 + 1280] = 0\n 11119: u64 [a0 + 1272] = 0\n 11123: u64 [a0 + 1264] = 0\n 11127: a3 = a0\n 11129: a0 = 0x20\n 11132: a1 = s1 + 0x15c0\n 11136: u64 [a3 + 1256] = 0xb\n 11141: ra = 400, jump @19\n      : @380 [@dyn 200] (gas: 1)\n 11147: t0 = 402, jump @2007\n      : @381 [@dyn 201] (gas: 1)\n 11154: jump @383 if a1 <u a0\n      : @382 (gas: 4)\n 11157: a0 = u64 [s1 + 0x100]\n 11161: u32 [a0 + 0] = 0x40\n 11164: t0 = 0x194\n 11168: jump @1952\n      : @383 (gas: 1)\n 11172: t0 = 404, jump @1952\n      : @384 [@dyn 202] (gas: 4)\n 11179: ra = 0x196\n 11183: ecalli 9 // 'hash_keccak_256'\n 11185: t0 = 0x198\n 11189: jump @1934\n      : @385 [@dyn 203] (gas: 1)\n 11193: t0 = 408, jump @1934\n      : @386 [@dyn 204] (gas: 3)\n 11200: a0 = s1 + 0x15a0\n 11204: a1 = 0x40\n 11207: ra = 410, jump @17\n      : @387 [@dyn 205] (gas: 16)\n 11213: a1 = s1 + 0x10d8\n 11217: a5 = a1 + 0x400\n 11221: a0 = u64 [a5 + 0xe0]\n 11225: u64 [s1 + 0xa8] = a0\n 11229: a3 = u64 [a5 + 0xd8]\n 11233: u64 [s1 + 0xa0] = a3\n 11237: a2 = u64 [a5 + 0xd0]\n 11241: u64 [s1 + 0x118] = a2\n 11245: a4 = u64 [a5 + 0xc8]\n 11249: u64 [s1 + 0x120] = a4\n 11253: u64 [a5 + 0xc0] = a0\n 11257: u64 [a5 + 0xb8] = a3\n 11261: u64 [a5 + 0xb0] = a2\n 11265: a0 = s1 + 0x1580\n 11269: u64 [a5 + 0xa8] = a4\n 11273: ra = 412, jump @1511\n      : @388 [@dyn 206] (gas: 3)\n 11279: a0 = s1 + 0x1560\n 11283: a1 = u64 [s1 + 0x98]\n 11287: ra = 414, jump @21\n      : @389 [@dyn 207] (gas: 3)\n 11293: a2 = u64 [s1 + 0xa0]\n 11297: a0 = u64 [s1 + 0xa8]\n 11301: t0 = 416, jump @1956\n      : @390 [@dyn 208] (gas: 1)\n 11308: jump @500 if a0 != 0\n      : @391 (gas: 13)\n 11312: a4 = s1 + 0x10d8\n 11316: a5 = a4 + 0x400\n 11320: a0 = u64 [a5 + 0xa0]\n 11324: a1 = u64 [a5 + 0x98]\n 11328: a2 = u64 [a5 + 0x90]\n 11332: a3 = u64 [a5 + 0x88]\n 11336: u64 [a5 + 0x68] = a3\n 11339: u64 [a5 + 0x70] = a2\n 11342: u64 [a5 + 0x78] = a1\n 11345: a1 = s1 + 0x1540\n 11349: u64 [a5 + 0x80] = a0\n 11353: a0 = u64 [s1 + 0x120]\n 11357: ra = 418, jump @19\n      : @392 [@dyn 209] (gas: 5)\n 11363: a0 = u64 [s1 + 0xb8]\n 11367: a0 = a0 + 0x1\n 11370: a1 = a0 <u 0x1\n 11373: a2 = u64 [s1 + 0xc0]\n 11377: t0 = 420, jump @1928\n      : @393 [@dyn 210] (gas: 8)\n 11384: a5 = a4 + 0x500\n 11388: u64 [a5 + 0xb0] = a1\n 11392: u64 [a5 + 0xa8] = a0\n 11396: u64 [a5 + 0xb8] = a2\n 11400: u64 [a5 + 0xc0] = a3\n 11404: a0 = s1 + 0x1520\n 11408: a1 = s1 + 0x3680\n 11412: ra = 422, jump @21\n      : @394 [@dyn 211] (gas: 1)\n 11418: t0 = 424, jump @1968\n      : @395 [@dyn 212] (gas: 1)\n 11425: jump @500 if a0 == 0\n      : @396 (gas: 7)\n 11429: a4 = s1 + 0x10d8\n 11433: a5 = a4 + 0x400\n 11437: a0 = u64 [a5 + 0x58]\n 11440: a1 = u64 [a5 + 0x50]\n 11443: a2 = u64 [a5 + 0x48]\n 11446: a3 = u64 [s1 + 0x68]\n 11449: t0 = 426, jump @1980\n      : @397 [@dyn 213] (gas: 6)\n 11456: u64 [a4 + 1088] = 0\n 11460: u64 [a5 + 0x28] = a2\n 11463: u64 [a5 + 0x30] = a1\n 11466: a1 = s1 + 0x1500\n 11470: u64 [a5 + 0x38] = a3\n 11473: ra = 428, jump @19\n      : @398 [@dyn 214] (gas: 3)\n 11479: a1 = u64 [s1 + 0xb8]\n 11483: a0 = a1 + 0x2\n 11486: t0 = 430, jump @1937\n      : @399 [@dyn 215] (gas: 7)\n 11493: u64 [a5 + 0xd0] = a2\n 11497: u64 [a5 + 0xc8] = a0\n 11501: u64 [a5 + 0xd8] = a3\n 11505: u64 [a5 + 0xe0] = a1\n 11509: a0 = s1 + 0x14e0\n 11513: a1 = s1 + 0x36a0\n 11517: ra = 432, jump @21\n      : @400 [@dyn 216] (gas: 3)\n 11523: a0 = u64 [s1 + 0x90]\n 11527: a0 = a0 + 0xffffffffffffffc0\n 11530: t0 = 434, jump @1919\n      : @401 [@dyn 217] (gas: 1)\n 11537: jump @500 if a0 == 0\n      : @402 (gas: 7)\n 11541: a4 = s1 + 0x10d8\n 11545: a3 = a4 + 0x400\n 11549: a0 = u64 [a3 + 0x18]\n 11552: a1 = u64 [a3 + 0x10]\n 11555: a2 = u64 [a3 + 0x8]\n 11558: a3 = u64 [s1 + 0x68]\n 11561: t0 = 436, jump @1981\n      : @403 [@dyn 218] (gas: 7)\n 11568: u64 [a4 + 1024] = 0\n 11572: a5 = a4 + 0x300\n 11576: u64 [a5 + 0xe8] = a2\n 11580: u64 [a5 + 0xf0] = a1\n 11584: a1 = s1 + 0x14c0\n 11588: u64 [a5 + 0xf8] = a3\n 11592: ra = 438, jump @19\n      : @404 [@dyn 219] (gas: 3)\n 11598: a1 = u64 [s1 + 0xb8]\n 11602: a0 = a1 + 0x3\n 11605: t0 = 440, jump @1937\n      : @405 [@dyn 220] (gas: 7)\n 11612: u64 [a5 + 0xf0] = a2\n 11616: u64 [a5 + 0xe8] = a0\n 11620: u64 [a5 + 0xf8] = a3\n 11624: u64 [a4 + 0x600] = a1\n 11628: a0 = s1 + 0x14a0\n 11632: a1 = s1 + 0x36c0\n 11636: ra = 442, jump @21\n      : @406 [@dyn 221] (gas: 3)\n 11642: a0 = u64 [s1 + 0x90]\n 11646: a0 = a0 + 0xffffffffffffffa0\n 11649: t0 = 444, jump @1919\n      : @407 [@dyn 222] (gas: 1)\n 11656: jump @500 if a0 == 0\n      : @408 (gas: 14)\n 11660: a5 = s1 + 0x10d8\n 11664: t0 = u64 [a5 + 0x3e0]\n 11668: a2 = a5 + 0x300\n 11672: a1 = u64 [a2 + 0xd8]\n 11676: a3 = u64 [a2 + 0xd0]\n 11680: a4 = u64 [a2 + 0xc8]\n 11684: a0 = u64 [s1 + 0x120]\n 11688: i32 a0 = a0 + 0x60\n 11691: u64 [a2 + 0xa8] = a4\n 11695: u64 [a2 + 0xb0] = a3\n 11699: u64 [a2 + 0xb8] = a1\n 11703: a1 = s1 + 0x1480\n 11707: u64 [a5 + 0x3c0] = t0\n 11711: ra = 446, jump @19\n      : @409 [@dyn 223] (gas: 21)\n 11717: a1 = u64 [s1 + 0xb8]\n 11721: a0 = a1 + 0x4\n 11724: a1 = a0 <u a1\n 11727: a3 = u64 [s1 + 0xc0]\n 11731: a2 = a3 + a1\n 11734: a3 = a2 <u a3\n 11737: a3 = a1 if a1 == 0\n 11740: a1 = u64 [s1 + 0x110]\n 11744: a3 = a3 + a1\n 11747: a1 = a3 <u a1\n 11750: a4 = u64 [s1 + 0x108]\n 11754: a1 = a1 + a4\n 11757: a4 = s1 + 0x30d8\n 11761: a5 = a4 + 0x600\n 11765: u64 [a5 + 0x10] = a2\n 11768: u64 [a5 + 0x8] = a0\n 11771: u64 [a5 + 0x18] = a3\n 11774: u64 [a5 + 0x20] = a1\n 11777: a0 = s1 + 0x1460\n 11781: a1 = s1 + 0x36e0\n 11785: ra = 448, jump @21\n      : @410 [@dyn 224] (gas: 3)\n 11791: a0 = u64 [s1 + 0x90]\n 11795: a0 = a0 + 0xffffffffffffff80\n 11798: t0 = 450, jump @1919\n      : @411 [@dyn 225] (gas: 1)\n 11805: jump @500 if a0 == 0\n      : @412 (gas: 3)\n 11809: a2 = s1 + 0x10d8\n 11813: a0 = u64 [a2 + 0x388]\n 11817: t0 = 452, jump @1990\n      : @413 [@dyn 226] (gas: 6)\n 11824: u64 [a2 + 896] = 0\n 11828: u64 [a2 + 888] = 0\n 11832: u64 [a2 + 0x368] = a1\n 11836: a1 = s1 + 0x1440\n 11840: u64 [a2 + 880] = 0\n 11844: ra = 454, jump @19\n      : @414 [@dyn 227] (gas: 23)\n 11850: a2 = s1 + 0x100\n 11854: a0 = u64 [a2 + 0x58]\n 11857: a3 = s1 + 0x10d8\n 11861: a5 = a3 + 0x300\n 11865: u64 [a5 + 0x20] = a0\n 11868: a0 = u64 [s1 + 0xb0]\n 11872: u64 [a5 + 0x18] = a0\n 11875: a0 = u64 [a2 + 0x50]\n 11878: u64 [a5 + 0x10] = a0\n 11881: a0 = u64 [a2 + 0x48]\n 11884: u64 [a5 + 0x8] = a0\n 11887: a0 = u64 [s1 + 0x88]\n 11891: u64 [a5 + 0x40] = a0\n 11894: a0 = u64 [s1 + 0x70]\n 11897: u64 [a5 + 0x38] = a0\n 11900: a0 = u64 [s1 + 0x78]\n 11903: u64 [a5 + 0x30] = a0\n 11906: a0 = s1 + 0x1420\n 11910: a1 = s1 + 0x1400\n 11914: a2 = s1 + 0x13e0\n 11918: a4 = u64 [s1 + 0x80]\n 11922: u64 [a5 + 0x28] = a4\n 11925: ra = 456, jump @1606\n      : @415 [@dyn 228] (gas: 7)\n 11931: a4 = s1 + 0x10d8\n 11935: a5 = a4 + 0x300\n 11939: a1 = u64 [a5 + 0x60]\n 11942: a2 = u64 [a5 + 0x58]\n 11945: a3 = u64 [a5 + 0x50]\n 11948: a0 = u64 [a5 + 0x48]\n 11951: t0 = 458, jump @1988\n      : @416 [@dyn 229] (gas: 1)\n 11958: jump @500 if a1 != 0\n      : @417 (gas: 11)\n 11962: a1 = u64 [s1 + 0x120]\n 11966: a2 = a4 + 0x200\n 11970: u64 [a2 + 0xe8] = a1\n 11974: a1 = u64 [s1 + 0x118]\n 11978: u64 [a2 + 0xf0] = a1\n 11982: a1 = u64 [s1 + 0xa0]\n 11986: u64 [a2 + 0xf8] = a1\n 11990: a1 = s1 + 0x13c0\n 11994: a3 = u64 [s1 + 0xa8]\n 11998: u64 [a4 + 0x300] = a3\n 12002: ra = 460, jump @19\n      : @418 [@dyn 230] (gas: 23)\n 12008: a0 = u64 [s1 + 0x158]\n 12012: a1 = s1 + 0x10d8\n 12016: a2 = a1 + 0x200\n 12020: u64 [a2 + 0xa0] = a0\n 12024: a0 = u64 [s1 + 0xb0]\n 12028: u64 [a2 + 0x98] = a0\n 12032: a0 = u64 [s1 + 0x150]\n 12036: u64 [a2 + 0x90] = a0\n 12040: a0 = u64 [s1 + 0x148]\n 12044: u64 [a2 + 0x88] = a0\n 12048: a0 = u64 [s1 + 0x88]\n 12052: u64 [a2 + 0xc0] = a0\n 12056: a0 = u64 [s1 + 0x70]\n 12059: u64 [a2 + 0xb8] = a0\n 12063: a0 = u64 [s1 + 0x78]\n 12066: u64 [a2 + 0xb0] = a0\n 12070: a4 = a1\n 12072: a0 = s1 + 0x13a0\n 12076: a1 = s1 + 0x1380\n 12080: a2 = s1 + 0x1360\n 12084: a3 = u64 [s1 + 0x80]\n 12088: u64 [a4 + 0x2a8] = a3\n 12092: ra = 462, jump @1606\n      : @419 [@dyn 231] (gas: 1)\n 12098: t0 = 464, jump @1959\n      : @420 [@dyn 232] (gas: 6)\n 12105: t0 = u64 [s1 + 0x158]\n 12109: t0 = t0 + a1\n 12112: a1 = t2 | t0\n 12115: a2 = a4 | a3\n 12118: a1 = a1 | a2\n 12121: jump @549 if a1 == 0\n      : @421 (gas: 7)\n 12125: a0 = a4\n 12127: u64 [s1 + 0xb0] = a3\n 12131: ra = u64 [s1 + 0x128]\n 12135: a2 = u64 [s1 + 0x140]\n 12139: a5 = u64 [s1 + 0x138]\n 12143: t1 = u64 [s1 + 0x130]\n 12147: jump @363\n      : @422 (gas: 16)\n 12150: a0 = 0xffffffff\n 12160: u64 [s1 + 0x68] = a0\n 12163: a0 = u64 [s1 + 0x108]\n 12167: a1 = a5 + 0x600\n 12171: u64 [a1 + 0xe8] = a0\n 12175: a0 = u64 [s1 + 0xf8]\n 12179: u64 [a1 + 0xf0] = a0\n 12183: a0 = u64 [s1 + 0xc0]\n 12187: u64 [a1 + 0xf8] = a0\n 12191: a0 = s1 + 0x7ff\n 12195: a0 = a0 + 0x7e1\n 12199: a1 = s1 + 0x7ff\n 12203: a1 = a1 + 0x7c1\n 12207: a2 = u64 [s1 + 0x110]\n 12211: u64 [a5 + 0x700] = a2\n 12215: ra = 466, jump @1575\n      : @423 [@dyn 233] (gas: 23)\n 12221: a4 = s1 + 0x7ff\n 12225: a4 = a4 + 0xd9\n 12229: t0 = 0\n 12231: u64 [s1 + 176] = 0\n 12235: t2 = 0\n 12237: a0 = 0\n 12239: a2 = 0\n 12241: a5 = 0\n 12243: ra = 0\n 12245: t1 = 0\n 12247: a1 = u64 [a4 + 0x720]\n 12251: u64 [s1 + 0x88] = a1\n 12255: a3 = 0x100000000\n 12265: a1 = u64 [a4 + 0x718]\n 12269: u64 [s1 + 0x70] = a1\n 12272: a1 = u64 [a4 + 0x710]\n 12276: u64 [s1 + 0x78] = a1\n 12279: a1 = u64 [a4 + 0x708]\n 12283: u64 [s1 + 0x80] = a1\n 12287: u64 [s1 + 0x90] = a3\n 12291: a3 = 0xffffffe0\n 12301: u64 [s1 + 0x60] = a3\n 12304: fallthrough\n      : @424 (gas: 4)\n 12305: u64 [s1 + 0x148] = a0\n 12309: u64 [s1 + 0x150] = t2\n 12313: u64 [s1 + 0x158] = t0\n 12317: t0 = 468, jump @2013\n      : @425 [@dyn 234] (gas: 12)\n 12324: t0 = u64 [s1 + 0xe8]\n 12328: a0 = ra <u t0\n 12331: u64 [s1 + 0x140] = a0\n 12335: a4 = u64 [s1 + 0xf0]\n 12339: t2 = t1 ^ a4\n 12342: a4 = t1 <u a4\n 12345: a1 = u64 [s1 + 0x140]\n 12349: a4 = a1 if t2 == 0\n 12352: a1 = ra ^ t0\n 12355: a1 = a1 | t2\n 12358: a4 = a3 if a1 == 0\n 12361: jump @493 if a4 == 0\n      : @426 (gas: 1)\n 12365: t0 = 470, jump @1972\n      : @427 [@dyn 235] (gas: 14)\n 12372: a0 = s1 + 0x7ff\n 12376: a0 = a0 + 0xd9\n 12380: a3 = a0 + 0x600\n 12384: u64 [a3 + 0x48] = a2\n 12387: u64 [s1 + 0x138] = a5\n 12391: u64 [a3 + 0x50] = a5\n 12394: u64 [s1 + 0x128] = a1\n 12398: u64 [a3 + 0x58] = a1\n 12401: a1 = s1 + 0x7ff\n 12405: a1 = a1 + 0x721\n 12409: u64 [s1 + 0x130] = t1\n 12413: u64 [a0 + 0x660] = t1\n 12417: a0 = 0\n 12419: ra = 472, jump @19\n      : @428 [@dyn 236] (gas: 11)\n 12425: a0 = s1 + 0x7ff\n 12429: a0 = a0 + 0xd9\n 12433: u64 [a0 + 1600] = 0\n 12437: u64 [a0 + 1592] = 0\n 12441: u64 [a0 + 1584] = 0\n 12445: a3 = a0\n 12447: a0 = 0x20\n 12450: a1 = s1 + 0x7ff\n 12454: a1 = a1 + 0x701\n 12458: u64 [a3 + 1576] = 0xb\n 12463: ra = 474, jump @19\n      : @429 [@dyn 237] (gas: 4)\n 12469: a0 = u64 [s1 + 0xc8]\n 12473: ra = 0x1dc\n 12477: ecalli 5 // 'caller'\n 12479: fallthrough\n      : @430 [@dyn 238] (gas: 3)\n 12480: a0 = u64 [s1 + 0x100]\n 12484: a0 = i32 [a0]\n 12486: jump @432 if a0 >=u 64\n      : @431 (gas: 5)\n 12490: a0 = u64 [s1 + 0x100]\n 12494: u32 [a0 + 0] = 0x40\n 12497: a2 = u64 [s1 + 0xd0]\n 12501: t0 = 0x1de\n 12505: jump @1911\n      : @432 (gas: 2)\n 12509: a2 = u64 [s1 + 0xd0]\n 12513: t0 = 478, jump @1911\n      : @433 [@dyn 239] (gas: 9)\n 12520: a0 = 0x20220\n 12525: i32 a0 = a0 + 0\n 12527: i32 a2 = a2 + 0\n 12529: a1 = 0x40\n 12532: u64 [s1 + 0xf8] = a0\n 12536: ra = 0x1e0\n 12540: ecalli 9 // 'hash_keccak_256'\n 12542: t0 = 0x1e2\n 12546: jump @1924\n      : @434 [@dyn 240] (gas: 1)\n 12550: t0 = 482, jump @1924\n      : @435 [@dyn 241] (gas: 9)\n 12557: a3 = a1 + 0x400\n 12561: u64 [a3 + 0x48] = a4\n 12564: u64 [a3 + 0x50] = a5\n 12567: u64 [a3 + 0x58] = a2\n 12570: u64 [a3 + 0x60] = a0\n 12573: a0 = s1 + 0x7ff\n 12577: a0 = a0 + 0x6e1\n 12581: a1 = s1 + 0x3520\n 12585: ra = 484, jump @21\n      : @436 [@dyn 242] (gas: 6)\n 12591: a4 = s1 + 0x7ff\n 12595: a4 = a4 + 0xd9\n 12599: a0 = u32 [a4 + 0x618]\n 12603: a1 = u64 [a4 + 0x608]\n 12607: a2 = u64 [a4 + 0x610]\n 12611: t0 = 486, jump @1974\n      : @437 [@dyn 243] (gas: 7)\n 12618: t0 = u64 [s1 + 0x158]\n 12622: t2 = u64 [s1 + 0x150]\n 12626: a0 = u64 [s1 + 0x148]\n 12630: a2 = u64 [s1 + 0x140]\n 12634: a5 = u64 [s1 + 0x138]\n 12638: t1 = u64 [s1 + 0x130]\n 12642: jump @424 if a1 != 0\n      : @438 (gas: 9)\n 12646: a0 = a4 + 0x500\n 12650: u64 [a0 + 0xe8] = a2\n 12654: u64 [a0 + 0xf0] = a5\n 12658: u64 [a0 + 0xf8] = a3\n 12662: a1 = s1 + 0x7ff\n 12666: a1 = a1 + 0x6c1\n 12670: u64 [a4 + 0x600] = t1\n 12674: a0 = 0\n 12676: ra = 488, jump @19\n      : @439 [@dyn 244] (gas: 11)\n 12682: a0 = s1 + 0x7ff\n 12686: a0 = a0 + 0xd9\n 12690: u64 [a0 + 1504] = 0\n 12694: u64 [a0 + 1496] = 0\n 12698: u64 [a0 + 1488] = 0\n 12702: a3 = a0\n 12704: a0 = 0x20\n 12707: a1 = s1 + 0x7ff\n 12711: a1 = a1 + 0x6a1\n 12715: u64 [a3 + 1480] = 0xb\n 12720: ra = 490, jump @19\n      : @440 [@dyn 245] (gas: 1)\n 12726: t0 = 492, jump @2007\n      : @441 [@dyn 246] (gas: 1)\n 12733: jump @443 if a1 <u a0\n      : @442 (gas: 4)\n 12736: a0 = u64 [s1 + 0x100]\n 12740: u32 [a0 + 0] = 0x40\n 12743: t0 = 0x1ee\n 12747: jump @1952\n      : @443 (gas: 1)\n 12751: t0 = 494, jump @1952\n      : @444 [@dyn 247] (gas: 4)\n 12758: ra = 0x1f0\n 12762: ecalli 9 // 'hash_keccak_256'\n 12764: t0 = 0x1f2\n 12768: jump @1934\n      : @445 [@dyn 248] (gas: 1)\n 12772: t0 = 498, jump @1934\n      : @446 [@dyn 249] (gas: 4)\n 12779: a0 = s1 + 0x7ff\n 12783: a0 = a0 + 0x681\n 12787: a1 = 0x40\n 12790: ra = 500, jump @17\n      : @447 [@dyn 250] (gas: 18)\n 12796: a1 = s1 + 0x7ff\n 12800: a1 = a1 + 0xd9\n 12804: a5 = a1 + 0x500\n 12808: a0 = u64 [a5 + 0xc0]\n 12812: u64 [s1 + 0xa8] = a0\n 12816: a3 = u64 [a5 + 0xb8]\n 12820: u64 [s1 + 0xa0] = a3\n 12824: a2 = u64 [a5 + 0xb0]\n 12828: u64 [s1 + 0x118] = a2\n 12832: a4 = u64 [a5 + 0xa8]\n 12836: u64 [s1 + 0x120] = a4\n 12840: u64 [a5 + 0xa0] = a0\n 12844: u64 [a5 + 0x98] = a3\n 12848: u64 [a5 + 0x90] = a2\n 12852: a0 = s1 + 0x7ff\n 12856: a0 = a0 + 0x661\n 12860: u64 [a5 + 0x88] = a4\n 12864: ra = 502, jump @1511\n      : @448 [@dyn 251] (gas: 4)\n 12870: a0 = s1 + 0x7ff\n 12874: a0 = a0 + 0x641\n 12878: a1 = u64 [s1 + 0x98]\n 12882: ra = 504, jump @21\n      : @449 [@dyn 252] (gas: 3)\n 12888: a2 = u64 [s1 + 0xa0]\n 12892: a0 = u64 [s1 + 0xa8]\n 12896: t0 = 506, jump @1956\n      : @450 [@dyn 253] (gas: 1)\n 12903: jump @500 if a0 != 0\n      : @451 (gas: 15)\n 12907: a4 = s1 + 0x7ff\n 12911: a4 = a4 + 0xd9\n 12915: a5 = a4 + 0x500\n 12919: a0 = u64 [a5 + 0x80]\n 12923: a1 = u64 [a5 + 0x78]\n 12926: a2 = u64 [a5 + 0x70]\n 12929: a3 = u64 [a5 + 0x68]\n 12932: u64 [a5 + 0x48] = a3\n 12935: u64 [a5 + 0x50] = a2\n 12938: u64 [a5 + 0x58] = a1\n 12941: a1 = s1 + 0x7ff\n 12945: a1 = a1 + 0x621\n 12949: u64 [a5 + 0x60] = a0\n 12952: a0 = u64 [s1 + 0x120]\n 12956: ra = 508, jump @19\n      : @452 [@dyn 254] (gas: 5)\n 12962: a0 = u64 [s1 + 0xb8]\n 12966: a0 = a0 + 0x1\n 12969: a1 = a0 <u 0x1\n 12972: a2 = u64 [s1 + 0xc0]\n 12976: t0 = 510, jump @1928\n      : @453 [@dyn 255] (gas: 9)\n 12983: a5 = a4 + 0x400\n 12987: u64 [a5 + 0x70] = a1\n 12990: u64 [a5 + 0x68] = a0\n 12993: u64 [a5 + 0x78] = a2\n 12996: u64 [a5 + 0x80] = a3\n 13000: a0 = s1 + 0x7ff\n 13004: a0 = a0 + 0x601\n 13008: a1 = s1 + 0x3540\n 13012: ra = 512, jump @21\n      : @454 [@dyn 256] (gas: 1)\n 13018: t0 = 514, jump @1968\n      : @455 [@dyn 257] (gas: 1)\n 13025: jump @500 if a0 == 0\n      : @456 (gas: 8)\n 13029: a4 = s1 + 0x7ff\n 13033: a4 = a4 + 0xd9\n 13037: a5 = a4 + 0x500\n 13041: a0 = u64 [a5 + 0x38]\n 13044: a1 = u64 [a5 + 0x30]\n 13047: a2 = u64 [a5 + 0x28]\n 13050: a3 = u64 [s1 + 0x68]\n 13053: t0 = 516, jump @1980\n      : @457 [@dyn 258] (gas: 7)\n 13060: u64 [a4 + 1312] = 0\n 13064: u64 [a5 + 0x8] = a2\n 13067: u64 [a5 + 0x10] = a1\n 13070: a1 = s1 + 0x7ff\n 13074: a1 = a1 + 0x5e1\n 13078: u64 [a5 + 0x18] = a3\n 13081: ra = 518, jump @19\n      : @458 [@dyn 259] (gas: 3)\n 13087: a1 = u64 [s1 + 0xb8]\n 13091: a0 = a1 + 0x2\n 13094: t0 = 520, jump @1918\n      : @459 [@dyn 260] (gas: 8)\n 13101: u64 [a5 + 0x90] = a2\n 13105: u64 [a5 + 0x88] = a0\n 13109: u64 [a5 + 0x98] = a3\n 13113: u64 [a5 + 0xa0] = a1\n 13117: a0 = s1 + 0x7ff\n 13121: a0 = a0 + 0x5c1\n 13125: a1 = s1 + 0x3560\n 13129: ra = 522, jump @21\n      : @460 [@dyn 261] (gas: 3)\n 13135: a0 = u64 [s1 + 0x90]\n 13139: a0 = a0 + 0xffffffffffffffc0\n 13142: t0 = 524, jump @1919\n      : @461 [@dyn 262] (gas: 1)\n 13149: jump @500 if a0 == 0\n      : @462 (gas: 8)\n 13153: a4 = s1 + 0x7ff\n 13157: a4 = a4 + 0xd9\n 13161: a5 = a4 + 0x400\n 13165: a0 = u64 [a5 + 0xf8]\n 13169: a1 = u64 [a5 + 0xf0]\n 13173: a2 = u64 [a5 + 0xe8]\n 13177: a3 = u64 [s1 + 0x68]\n 13180: t0 = 526, jump @1981\n      : @463 [@dyn 263] (gas: 7)\n 13187: u64 [a4 + 1248] = 0\n 13191: u64 [a5 + 0xc8] = a2\n 13195: u64 [a5 + 0xd0] = a1\n 13199: a1 = s1 + 0x7ff\n 13203: a1 = a1 + 0x5a1\n 13207: u64 [a5 + 0xd8] = a3\n 13211: ra = 528, jump @19\n      : @464 [@dyn 264] (gas: 3)\n 13217: a1 = u64 [s1 + 0xb8]\n 13221: a0 = a1 + 0x3\n 13224: t0 = 530, jump @1918\n      : @465 [@dyn 265] (gas: 8)\n 13231: u64 [a5 + 0xb0] = a2\n 13235: u64 [a5 + 0xa8] = a0\n 13239: u64 [a5 + 0xb8] = a3\n 13243: u64 [a5 + 0xc0] = a1\n 13247: a0 = s1 + 0x7ff\n 13251: a0 = a0 + 0x581\n 13255: a1 = s1 + 0x3580\n 13259: ra = 532, jump @21\n      : @466 [@dyn 266] (gas: 3)\n 13265: a0 = u64 [s1 + 0x90]\n 13269: a0 = a0 + 0xffffffffffffffa0\n 13272: t0 = 534, jump @1919\n      : @467 [@dyn 267] (gas: 1)\n 13279: jump @500 if a0 == 0\n      : @468 (gas: 16)\n 13283: a5 = s1 + 0x7ff\n 13287: a5 = a5 + 0xd9\n 13291: t0 = u64 [a5 + 0x4c0]\n 13295: a2 = a5 + 0x400\n 13299: a1 = u64 [a2 + 0xb8]\n 13303: a3 = u64 [a2 + 0xb0]\n 13307: a4 = u64 [a2 + 0xa8]\n 13311: a0 = u64 [s1 + 0x120]\n 13315: i32 a0 = a0 + 0x60\n 13318: u64 [a2 + 0x88] = a4\n 13322: u64 [a2 + 0x90] = a3\n 13326: u64 [a2 + 0x98] = a1\n 13330: a1 = s1 + 0x7ff\n 13334: a1 = a1 + 0x561\n 13338: u64 [a5 + 0x4a0] = t0\n 13342: ra = 536, jump @19\n      : @469 [@dyn 268] (gas: 3)\n 13348: a1 = u64 [s1 + 0xb8]\n 13352: a0 = a1 + 0x4\n 13355: t0 = 538, jump @1918\n      : @470 [@dyn 269] (gas: 8)\n 13362: u64 [a5 + 0xd0] = a2\n 13366: u64 [a5 + 0xc8] = a0\n 13370: u64 [a5 + 0xd8] = a3\n 13374: u64 [a5 + 0xe0] = a1\n 13378: a0 = s1 + 0x7ff\n 13382: a0 = a0 + 0x541\n 13386: a1 = s1 + 0x35a0\n 13390: ra = 540, jump @21\n      : @471 [@dyn 270] (gas: 3)\n 13396: a0 = u64 [s1 + 0x90]\n 13400: a0 = a0 + 0xffffffffffffff80\n 13403: t0 = 542, jump @1919\n      : @472 [@dyn 271] (gas: 1)\n 13410: jump @500 if a0 == 0\n      : @473 (gas: 4)\n 13414: a2 = s1 + 0x7ff\n 13418: a2 = a2 + 0xd9\n 13422: a0 = u64 [a2 + 0x468]\n 13426: t0 = 544, jump @1990\n      : @474 [@dyn 272] (gas: 7)\n 13433: u64 [a2 + 1120] = 0\n 13437: u64 [a2 + 1112] = 0\n 13441: u64 [a2 + 0x448] = a1\n 13445: a1 = s1 + 0x7ff\n 13449: a1 = a1 + 0x521\n 13453: u64 [a2 + 1104] = 0\n 13457: ra = 546, jump @19\n      : @475 [@dyn 273] (gas: 28)\n 13463: a1 = s1 + 0x100\n 13467: a0 = u64 [a1 + 0x58]\n 13470: a3 = s1 + 0x7ff\n 13474: a3 = a3 + 0xd9\n 13478: a5 = a3 + 0x400\n 13482: u64 [a5] = a0\n 13484: a0 = u64 [s1 + 0xb0]\n 13488: a2 = a3 + 0x300\n 13492: u64 [a2 + 0xf8] = a0\n 13496: a0 = u64 [a1 + 0x50]\n 13499: u64 [a2 + 0xf0] = a0\n 13503: a0 = u64 [a1 + 0x48]\n 13506: u64 [a2 + 0xe8] = a0\n 13510: a0 = u64 [s1 + 0x88]\n 13514: u64 [a5 + 0x20] = a0\n 13517: a0 = u64 [s1 + 0x70]\n 13520: u64 [a5 + 0x18] = a0\n 13523: a0 = u64 [s1 + 0x78]\n 13526: u64 [a5 + 0x10] = a0\n 13529: a0 = s1 + 0x7ff\n 13533: a0 = a0 + 0x501\n 13537: a1 = s1 + 0x7ff\n 13541: a1 = a1 + 0x4e1\n 13545: a2 = s1 + 0x7ff\n 13549: a2 = a2 + 0x4c1\n 13553: a4 = u64 [s1 + 0x80]\n 13557: u64 [a5 + 0x8] = a4\n 13560: ra = 548, jump @1606\n      : @476 [@dyn 274] (gas: 8)\n 13566: a4 = s1 + 0x7ff\n 13570: a4 = a4 + 0xd9\n 13574: a5 = a4 + 0x400\n 13578: a1 = u64 [a5 + 0x40]\n 13581: a2 = u64 [a5 + 0x38]\n 13584: a3 = u64 [a5 + 0x30]\n 13587: a0 = u64 [a5 + 0x28]\n 13590: t0 = 550, jump @1988\n      : @477 [@dyn 275] (gas: 1)\n 13597: jump @500 if a1 != 0\n      : @478 (gas: 12)\n 13601: a1 = u64 [s1 + 0x120]\n 13605: a2 = a4 + 0x300\n 13609: u64 [a2 + 0xc8] = a1\n 13613: a1 = u64 [s1 + 0x118]\n 13617: u64 [a2 + 0xd0] = a1\n 13621: a1 = u64 [s1 + 0xa0]\n 13625: u64 [a2 + 0xd8] = a1\n 13629: a1 = s1 + 0x7ff\n 13633: a1 = a1 + 0x4a1\n 13637: a3 = u64 [s1 + 0xa8]\n 13641: u64 [a2 + 0xe0] = a3\n 13645: ra = 552, jump @19\n      : @479 [@dyn 276] (gas: 27)\n 13651: a0 = u64 [s1 + 0x158]\n 13655: a1 = s1 + 0x7ff\n 13659: a1 = a1 + 0xd9\n 13663: a2 = a1 + 0x300\n 13667: u64 [a2 + 0x80] = a0\n 13671: a0 = u64 [s1 + 0xb0]\n 13675: u64 [a2 + 0x78] = a0\n 13678: a0 = u64 [s1 + 0x150]\n 13682: u64 [a2 + 0x70] = a0\n 13685: a0 = u64 [s1 + 0x148]\n 13689: u64 [a2 + 0x68] = a0\n 13692: a0 = u64 [s1 + 0x88]\n 13696: u64 [a2 + 0xa0] = a0\n 13700: a0 = u64 [s1 + 0x70]\n 13703: u64 [a2 + 0x98] = a0\n 13707: a0 = u64 [s1 + 0x78]\n 13710: u64 [a2 + 0x90] = a0\n 13714: a4 = a1\n 13716: a0 = s1 + 0x7ff\n 13720: a0 = a0 + 0x481\n 13724: a1 = s1 + 0x7ff\n 13728: a1 = a1 + 0x461\n 13732: a2 = s1 + 0x7ff\n 13736: a2 = a2 + 0x441\n 13740: a3 = u64 [s1 + 0x80]\n 13744: u64 [a4 + 0x388] = a3\n 13748: ra = 554, jump @1606\n      : @480 [@dyn 277] (gas: 1)\n 13754: t0 = 556, jump @1959\n      : @481 [@dyn 278] (gas: 6)\n 13761: t0 = u64 [s1 + 0x158]\n 13765: t0 = t0 + a1\n 13768: a1 = t2 | t0\n 13771: a2 = a4 | a3\n 13774: a1 = a1 | a2\n 13777: jump @552 if a1 == 0\n      : @482 (gas: 7)\n 13781: a0 = a4\n 13783: u64 [s1 + 0xb0] = a3\n 13787: ra = u64 [s1 + 0x128]\n 13791: a2 = u64 [s1 + 0x140]\n 13795: a5 = u64 [s1 + 0x138]\n 13799: t1 = u64 [s1 + 0x130]\n 13803: jump @424\n      : @483 (gas: 4)\n 13806: a0 = s1 + 0x7ff\n 13810: a0 = a0 + 0x261\n 13814: a1 = 0x40\n 13817: ra = 558, jump @17\n      : @484 [@dyn 279] (gas: 31)\n 13823: a1 = s1 + 0x7ff\n 13827: a1 = a1 + 0xd9\n 13831: a3 = u64 [a1 + 0x1a0]\n 13835: u64 [s1 + 0x158] = a3\n 13839: a2 = u64 [a1 + 0x198]\n 13843: u64 [s1 + 0x150] = a2\n 13847: a4 = u64 [a1 + 0x190]\n 13851: u64 [s1 + 0x148] = a4\n 13855: a5 = u64 [a1 + 0x188]\n 13859: u64 [s1 + 0x140] = a5\n 13863: a0 = u64 [s1 + 0x98]\n 13867: u64 [a1 + 0x140] = a0\n 13871: a0 = u64 [s1 + 0x80]\n 13875: u64 [a1 + 0x138] = a0\n 13879: a0 = u64 [s1 + 0x88]\n 13883: u64 [a1 + 0x130] = a0\n 13887: a0 = u64 [s1 + 0x90]\n 13891: u64 [a1 + 0x128] = a0\n 13895: a0 = a1 + 0x100\n 13899: u64 [a0 + 0x60] = a3\n 13902: u64 [a0 + 0x58] = a2\n 13905: u64 [a0 + 0x50] = a4\n 13908: a3 = a1\n 13910: a0 = s1 + 0x7ff\n 13914: a0 = a0 + 0x241\n 13918: a1 = s1 + 0x7ff\n 13922: a1 = a1 + 0x221\n 13926: a2 = s1 + 0x7ff\n 13930: a2 = a2 + 0x201\n 13934: u64 [a3 + 0x148] = a5\n 13938: ra = 560, jump @1464\n      : @485 [@dyn 280] (gas: 1)\n 13944: t0 = 562, jump @1936\n      : @486 [@dyn 281] (gas: 1)\n 13951: jump @500 if a0 != 0\n      : @487 (gas: 10)\n 13955: t0 = a3\n 13957: a1 = s1 + 0x7ff\n 13961: a1 = a1 + 0xd9\n 13965: a5 = a1 + 0x100\n 13969: a0 = u64 [a5 + 0x70]\n 13972: a3 = u64 [a5 + 0x80]\n 13976: u64 [s1 + 0x138] = a3\n 13980: t1 = u64 [a1 + 0x168]\n 13984: a3 = u64 [a5 + 0x78]\n 13987: jump @498\n      : @488 (gas: 3)\n 13990: a0 = s1 + 0x16c0\n 13994: a1 = 0x40\n 13997: ra = 564, jump @17\n      : @489 [@dyn 282] (gas: 27)\n 14003: a1 = s1 + 0x10d8\n 14007: a3 = u64 [a1 + 0x600]\n 14011: u64 [s1 + 0x158] = a3\n 14015: a2 = u64 [a1 + 0x5f8]\n 14019: u64 [s1 + 0x150] = a2\n 14023: a4 = u64 [a1 + 0x5f0]\n 14027: u64 [s1 + 0x148] = a4\n 14031: a5 = u64 [a1 + 0x5e8]\n 14035: u64 [s1 + 0x140] = a5\n 14039: a0 = u64 [s1 + 0x88]\n 14043: u64 [a1 + 0x5a0] = a0\n 14047: a0 = u64 [s1 + 0x70]\n 14050: u64 [a1 + 0x598] = a0\n 14054: a0 = u64 [s1 + 0x78]\n 14057: u64 [a1 + 0x590] = a0\n 14061: a0 = u64 [s1 + 0x80]\n 14065: u64 [a1 + 0x588] = a0\n 14069: a0 = a1 + 0x500\n 14073: u64 [a0 + 0xc0] = a3\n 14077: u64 [a0 + 0xb8] = a2\n 14081: u64 [a0 + 0xb0] = a4\n 14085: a3 = a1\n 14087: a0 = s1 + 0x16a0\n 14091: a1 = s1 + 0x1680\n 14095: a2 = s1 + 0x1660\n 14099: u64 [a3 + 0x5a8] = a5\n 14103: ra = 566, jump @1464\n      : @490 [@dyn 283] (gas: 1)\n 14109: t0 = 568, jump @1936\n      : @491 [@dyn 284] (gas: 1)\n 14116: jump @500 if a0 != 0\n      : @492 (gas: 9)\n 14120: t0 = a3\n 14122: a1 = s1 + 0x10d8\n 14126: a5 = a1 + 0x500\n 14130: a0 = u64 [a5 + 0xd0]\n 14134: a3 = u64 [a5 + 0xe0]\n 14138: u64 [s1 + 0x138] = a3\n 14142: t1 = u64 [a1 + 0x5c8]\n 14146: a3 = u64 [a5 + 0xd8]\n 14150: jump @498\n      : @493 (gas: 4)\n 14153: a0 = s1 + 0x7ff\n 14157: a0 = a0 + 0x7a1\n 14161: a1 = 0x40\n 14164: ra = 570, jump @17\n      : @494 [@dyn 285] (gas: 31)\n 14170: a1 = s1 + 0x7ff\n 14174: a1 = a1 + 0xd9\n 14178: a3 = u64 [a1 + 0x6e0]\n 14182: u64 [s1 + 0x158] = a3\n 14186: a2 = u64 [a1 + 0x6d8]\n 14190: u64 [s1 + 0x150] = a2\n 14194: a4 = u64 [a1 + 0x6d0]\n 14198: u64 [s1 + 0x148] = a4\n 14202: a5 = u64 [a1 + 0x6c8]\n 14206: u64 [s1 + 0x140] = a5\n 14210: a0 = u64 [s1 + 0x88]\n 14214: u64 [a1 + 0x680] = a0\n 14218: a0 = u64 [s1 + 0x70]\n 14221: u64 [a1 + 0x678] = a0\n 14225: a0 = u64 [s1 + 0x78]\n 14228: u64 [a1 + 0x670] = a0\n 14232: a0 = u64 [s1 + 0x80]\n 14236: u64 [a1 + 0x668] = a0\n 14240: a0 = a1 + 0x600\n 14244: u64 [a0 + 0xa0] = a3\n 14248: u64 [a0 + 0x98] = a2\n 14252: u64 [a0 + 0x90] = a4\n 14256: a3 = a1\n 14258: a0 = s1 + 0x7ff\n 14262: a0 = a0 + 0x781\n 14266: a1 = s1 + 0x7ff\n 14270: a1 = a1 + 0x761\n 14274: a2 = s1 + 0x7ff\n 14278: a2 = a2 + 0x741\n 14282: u64 [a3 + 0x688] = a5\n 14286: ra = 572, jump @1464\n      : @495 [@dyn 286] (gas: 1)\n 14292: t0 = 574, jump @1936\n      : @496 [@dyn 287] (gas: 1)\n 14299: jump @500 if a0 != 0\n      : @497 (gas: 10)\n 14302: t0 = a3\n 14304: a1 = s1 + 0x7ff\n 14308: a1 = a1 + 0xd9\n 14312: a5 = a1 + 0x600\n 14316: a0 = u64 [a5 + 0xb0]\n 14320: a3 = u64 [a5 + 0xc0]\n 14324: u64 [s1 + 0x138] = a3\n 14328: t1 = u64 [a1 + 0x6a8]\n 14332: a3 = u64 [a5 + 0xb8]\n 14336: fallthrough\n      : @498 (gas: 26)\n 14337: t2 = a0 ^ a4\n 14340: a5 = a0 <u a4\n 14343: ra = t1 <u a2\n 14346: a5 = ra if t2 == 0\n 14349: a1 = a3 - t0\n 14352: t2 = a1 - a5\n 14355: a1 = a1 <u a5\n 14358: u64 [s1 + 0x130] = a1\n 14362: a3 = a3 <u t0\n 14365: a5 = u64 [s1 + 0x158]\n 14369: a1 = u64 [s1 + 0x138]\n 14373: a5 = a1 - a5\n 14376: a5 = a5 - a3\n 14379: a1 = u64 [s1 + 0x130]\n 14383: a5 = a5 - a1\n 14386: a0 = a0 - a4\n 14389: a0 = a0 - ra\n 14392: a1 = t1 - a2\n 14395: a0 = a0 | a5\n 14398: a3 = a1 | t2\n 14401: a3 = a3 | a0\n 14404: a0 = a0 | t2\n 14407: a3 = a3 >> 0x20\n 14410: a0 = a0 << 0x20\n 14413: a0 = a0 | a3\n 14416: jump @500 if a0 != 0\n      : @499 (gas: 1)\n 14419: jump @1211\n      : @500 (gas: 1)\n 14422: trap\n      : @501 (gas: 1)\n 14423: jump @557 if a0 == 2514000705\n      : @502 (gas: 1)\n 14431: jump @575 if a0 == 2720838757\n      : @503 (gas: 1)\n 14439: jump @610 if a0 == 2926017187\n      : @504 (gas: 1)\n 14447: jump @634 if a0 == 3363526365\n      : @505 (gas: 1)\n 14455: jump @650 if a0 == 3647605066\n      : @506 (gas: 1)\n 14463: jump @508 if a0 != 3793353845\n      : @507 (gas: 1)\n 14470: jump @733\n      : @508 (gas: 1)\n 14473: jump @510 if a0 != 3917867461\n      : @509 (gas: 1)\n 14480: jump @775\n      : @510 (gas: 1)\n 14483: jump @512 if a0 != 117300739\n      : @511 (gas: 1)\n 14490: jump @803\n      : @512 (gas: 1)\n 14493: jump @514 if a0 != 135795452\n      : @513 (gas: 1)\n 14500: jump @825\n      : @514 (gas: 1)\n 14503: jump @516 if a0 != 317216133\n      : @515 (gas: 1)\n 14510: jump @846\n      : @516 (gas: 1)\n 14513: jump @518 if a0 != 1115958798\n      : @517 (gas: 1)\n 14520: jump @861\n      : @518 (gas: 1)\n 14523: jump @520 if a0 != 1666326814\n      : @519 (gas: 1)\n 14530: jump @873\n      : @520 (gas: 1)\n 14533: jump @522 if a0 == 1889567281\n      : @521 (gas: 1)\n 14540: jump @891\n      : @522 (gas: 11)\n 14543: a0 = s1 + 0x30d8\n 14547: u64 [a0 + 1664] = 0\n 14551: u64 [a0 + 1656] = 0\n 14555: u64 [a0 + 1648] = 0\n 14559: u64 [a0 + 1640] = 0\n 14563: a0 = s1 + 0x3000\n 14567: i32 a0 = a0 + 0x740\n 14571: ra = 0x240\n 14575: ecalli 16 // 'value_transferred'\n 14577: t0 = 0x242\n 14581: jump @2016\n      : @523 [@dyn 288] (gas: 1)\n 14585: t0 = 578, jump @2016\n      : @524 [@dyn 289] (gas: 8)\n 14592: a0 = u64 [a4 + 0x78]\n 14595: a1 = u64 [a4 + 0x80]\n 14599: a2 = u64 [a4 + 0x70]\n 14602: a3 = u64 [a4 + 0x68]\n 14605: a1 = a1 | a2\n 14608: a0 = a0 | a3\n 14611: a0 = a0 | a1\n 14614: jump @526 if a0 == 0\n      : @525 (gas: 1)\n 14617: jump @1226\n      : @526 (gas: 1)\n 14620: t0 = 580, jump @2014\n      : @527 [@dyn 290] (gas: 1)\n 14627: jump @529 if a1 <u a0\n      : @528 (gas: 1)\n 14630: jump @1227\n      : @529 (gas: 4)\n 14633: a0 = s1 + 0x18a0\n 14637: ra = 0x246\n 14641: t0 = 0x62e\n 14645: jump @2009\n      : @530 [@dyn 291] (gas: 7)\n 14649: a2 = s1 + 0x10d8\n 14653: a0 = u32 [a2 + 0x7d8]\n 14657: a1 = u64 [a2 + 0x7c8]\n 14661: a2 = u64 [a2 + 0x7d0]\n 14665: a3 = a1 | a0\n 14668: a3 = a3 | a2\n 14671: jump @532 if a3 != 0\n      : @531 (gas: 1)\n 14674: jump @1228\n      : @532 (gas: 9)\n 14677: a3 = s1 + 0x10d8\n 14681: u64 [a3 + 1984] = 0\n 14685: a4 = a3 + 0x700\n 14689: u64 [a4 + 0xa8] = a1\n 14693: u64 [a4 + 0xb0] = a2\n 14697: a1 = s1 + 0x1880\n 14701: u64 [a4 + 0xb8] = a0\n 14705: a0 = 0\n 14707: ra = 584, jump @19\n      : @533 [@dyn 292] (gas: 3)\n 14713: t0 = 0x24a\n 14717: a1 = s1 + 0x10d8\n 14721: fallthrough\n      : @534 [@dyn 293] (gas: 8)\n 14722: u64 [a1 + 1952] = 0\n 14726: u64 [a1 + 1944] = 0\n 14730: u64 [a1 + 1928] = 0x3\n 14735: a2 = a1\n 14737: a0 = 0x20\n 14740: a1 = s1 + 0x1860\n 14744: u64 [a2 + 1936] = 0\n 14748: ra = 588, jump @19\n      : @535 [@dyn 294] (gas: 2)\n 14754: a1 = i32 [0x2020c]\n 14759: jump @537 if a1 >u 63\n      : @536 (gas: 4)\n 14763: a1 = 0x40\n 14766: u32 [0x2020c] = a1\n 14771: t0 = 0x24e\n 14775: jump @2006\n      : @537 (gas: 1)\n 14779: t0 = 590, jump @2006\n      : @538 [@dyn 295] (gas: 8)\n 14786: a0 = 0x20220\n 14791: i32 a0 = a0 + 0\n 14793: i32 a2 = a2 + 0\n 14795: a1 = 0x40\n 14798: ra = 0x250\n 14802: ecalli 9 // 'hash_keccak_256'\n 14804: t0 = 0x252\n 14808: jump @1958\n      : @539 [@dyn 296] (gas: 1)\n 14812: t0 = 594, jump @1958\n      : @540 [@dyn 297] (gas: 8)\n 14819: a5 = a4 + 0x600\n 14823: u64 [a5 + 0xa0] = a3\n 14827: u64 [a5 + 0x98] = a2\n 14831: u64 [a5 + 0x90] = a1\n 14835: u64 [a5 + 0x88] = a0\n 14839: a0 = s1 + 0x1840\n 14843: a1 = s1 + 0x3760\n 14847: ra = 596, jump @21\n      : @541 [@dyn 298] (gas: 3)\n 14853: a1 = s1 + 0x10d8\n 14857: a2 = a1 + 0x700\n 14861: t0 = 598, jump @2015\n      : @542 [@dyn 299] (gas: 3)\n 14868: a0 = s1 + 0x1820\n 14872: a1 = 0x40\n 14875: ra = 600, jump @17\n      : @543 [@dyn 300] (gas: 7)\n 14881: a3 = s1 + 0x10d8\n 14885: a5 = a3 + 0x700\n 14889: a0 = u64 [a5 + 0x60]\n 14892: a1 = u64 [a5 + 0x58]\n 14895: a2 = u64 [a5 + 0x50]\n 14898: a4 = u64 [a5 + 0x48]\n 14901: t0 = 602, jump @1927\n      : @544 [@dyn 301] (gas: 1)\n 14908: jump @500 if a0 != 0\n      : @545 (gas: 14)\n 14912: a3 = a4\n 14914: a0 = s1 + 0x10d8\n 14918: a4 = s1 + 0x100\n 14922: a1 = u64 [a4 + 0x40]\n 14925: a5 = a0 + 0x700\n 14929: u64 [a5 + 0x28] = a1\n 14932: a1 = u64 [a4 + 0x48]\n 14935: u64 [a5 + 0x30] = a1\n 14938: a1 = u64 [a4 + 0x50]\n 14941: u64 [a5 + 0x38] = a1\n 14944: a1 = s1 + 0x1800\n 14948: a2 = u64 [a4 + 0x58]\n 14951: u64 [a5 + 0x40] = a2\n 14954: jump @859\n      : @546 (gas: 6)\n 14957: u64 [s1 + 1776] = 0\n 14961: u64 [s1 + 1768] = 0\n 14965: u64 [s1 + 1760] = 0\n 14969: t0 = 0x25c\n 14973: a0 = 0x4e487b7100000000\n 14983: fallthrough\n      : @547 [@dyn 302] (gas: 4)\n 14984: a1 = s1 + 0x6e0\n 14988: u64 [s1 + 0x6f8] = a0\n 14992: a0 = 0\n 14994: ra = 606, jump @19\n      : @548 [@dyn 303] (gas: 8)\n 15000: u64 [s1 + 1752] = 0\n 15004: u64 [s1 + 1744] = 0\n 15008: u64 [s1 + 1728] = 0x11\n 15013: a0 = 0x4\n 15016: a1 = s1 + 0x6c0\n 15020: u64 [s1 + 1736] = 0\n 15024: ra = 0x266\n 15028: jump @19\n      : @549 (gas: 10)\n 15031: a0 = s1 + 0x10d8\n 15035: u64 [a0 + 632] = 0\n 15039: u64 [a0 + 624] = 0\n 15043: u64 [a0 + 616] = 0\n 15047: a2 = a0\n 15049: a0 = 0x4e487b7100000000\n 15059: a1 = s1 + 0x1340\n 15063: u64 [a2 + 0x280] = a0\n 15067: a0 = 0\n 15069: ra = 608, jump @19\n      : @550 [@dyn 304] (gas: 3)\n 15075: t0 = 0x262\n 15079: a1 = s1 + 0x10d8\n 15083: fallthrough\n      : @551 [@dyn 305] (gas: 9)\n 15084: u64 [a1 + 608] = 0\n 15088: u64 [a1 + 600] = 0\n 15092: u64 [a1 + 584] = 0x11\n 15097: a2 = a1\n 15099: a0 = 0x4\n 15102: a1 = s1 + 0x1320\n 15106: u64 [a2 + 592] = 0\n 15110: ra = 0x266\n 15114: jump @19\n      : @552 (gas: 12)\n 15117: a0 = s1 + 0x7ff\n 15121: a0 = a0 + 0xd9\n 15125: u64 [a0 + 856] = 0\n 15129: u64 [a0 + 848] = 0\n 15133: u64 [a0 + 840] = 0\n 15137: a2 = a0\n 15139: a0 = 0x4e487b7100000000\n 15149: a1 = s1 + 0x7ff\n 15153: a1 = a1 + 0x421\n 15157: u64 [a2 + 0x360] = a0\n 15161: a0 = 0\n 15163: ra = 612, jump @19\n      : @553 [@dyn 306] (gas: 11)\n 15169: a1 = s1 + 0x7ff\n 15173: a1 = a1 + 0xd9\n 15177: u64 [a1 + 832] = 0\n 15181: u64 [a1 + 824] = 0\n 15185: u64 [a1 + 808] = 0x11\n 15190: a2 = a1\n 15192: a0 = 0x4\n 15195: a1 = s1 + 0x7ff\n 15199: a1 = a1 + 0x401\n 15203: u64 [a2 + 816] = 0\n 15207: ra = 614, jump @19\n      : @554 [@dyn 307] (gas: 3)\n 15213: a0 = u64 [s1 + 0x100]\n 15217: a0 = i32 [a0]\n 15219: jump @556 if a0 >u 63\n      : @555 (gas: 3)\n 15223: a1 = u64 [s1 + 0x100]\n 15227: u32 [a1 + 0] = 0x40\n 15230: fallthrough\n      : @556 (gas: 5)\n 15231: a0 = 0x1\n 15234: a2 = 0x24\n 15237: a1 = u64 [s1 + 0xf8]\n 15241: ecalli 13 // 'seal_return'\n 15243: fallthrough\n      : @557 (gas: 9)\n 15244: a0 = s1 + 0x38d8\n 15248: u64 [a0 + 224] = 0\n 15252: u64 [a0 + 216] = 0\n 15256: u64 [a0 + 208] = 0\n 15260: u64 [a0 + 200] = 0\n 15264: a0 = s1 + 0x4000\n 15268: i32 a0 = a0 + 0xfffffffffffff9a0\n 15272: ecalli 16 // 'value_transferred'\n 15274: fallthrough\n      : @558 (gas: 9)\n 15275: a3 = s1 + 0x38d8\n 15279: a0 = u64 [a3 + 0xd8]\n 15283: a1 = u64 [a3 + 0xe0]\n 15287: a2 = u64 [a3 + 0xd0]\n 15291: a3 = u64 [a3 + 0xc8]\n 15295: a1 = a1 | a2\n 15298: a0 = a0 | a3\n 15301: a0 = a0 | a1\n 15304: jump @560 if a0 == 0\n      : @559 (gas: 1)\n 15307: jump @1233\n      : @560 (gas: 3)\n 15310: a0 = u64 [s1 + 0x158]\n 15314: a0 = i32 [a0]\n 15316: jump @562 if a0 >u 3\n      : @561 (gas: 1)\n 15320: jump @1234\n      : @562 (gas: 3)\n 15323: a0 = s1 + 0x2380\n 15327: a1 = 0x40\n 15330: ra = 616, jump @17\n      : @563 [@dyn 308] (gas: 18)\n 15336: a1 = s1 + 0x20d8\n 15340: a2 = a1 + 0x200\n 15344: a0 = u64 [a2 + 0xc0]\n 15348: u64 [s1 + 0xb8] = a0\n 15352: a0 = u64 [a2 + 0xb8]\n 15356: u64 [s1 + 0xc0] = a0\n 15360: a0 = u64 [a2 + 0xb0]\n 15364: u64 [s1 + 0xc8] = a0\n 15368: a0 = u64 [a2 + 0xa8]\n 15372: u64 [s1 + 0xd0] = a0\n 15376: a1 = s1 + 0x38d8\n 15380: u64 [a1 + 256] = 0\n 15384: u64 [a1 + 248] = 0\n 15388: u64 [a1 + 240] = 0\n 15392: u64 [a1 + 232] = 0x1\n 15397: a0 = s1 + 0x2360\n 15401: a1 = s1 + 0x39c0\n 15405: ra = 618, jump @21\n      : @564 [@dyn 309] (gas: 18)\n 15411: a4 = s1 + 0x20d8\n 15415: a5 = a4 + 0x200\n 15419: a0 = u64 [a5 + 0xa0]\n 15423: a1 = u64 [a5 + 0x98]\n 15427: a2 = u64 [a5 + 0x90]\n 15431: a3 = u64 [a5 + 0x88]\n 15435: a4 = s1 + 0x100\n 15439: u64 [a4 + 0x50] = a0\n 15442: u64 [a5 + 0x60] = a0\n 15445: u64 [a4 + 0x48] = a1\n 15448: u64 [a5 + 0x58] = a1\n 15451: u64 [a4 + 0x40] = a2\n 15454: u64 [a5 + 0x50] = a2\n 15457: a0 = s1 + 0x2340\n 15461: a1 = s1 + 0x2320\n 15465: u64 [a4 + 0x58] = a3\n 15468: u64 [a5 + 0x48] = a3\n 15471: ra = 620, jump @1557\n      : @565 [@dyn 310] (gas: 1)\n 15477: t0 = 622, jump @1994\n      : @566 [@dyn 311] (gas: 1)\n 15484: jump @500 if a0 != 0\n      : @567 (gas: 17)\n 15488: a0 = s1 + 0x20d8\n 15492: a5 = a0 + 0x200\n 15496: a2 = u64 [a5 + 0x80]\n 15500: a3 = u64 [a5 + 0x78]\n 15503: a1 = u64 [a5 + 0x70]\n 15506: a4 = u64 [a5 + 0x68]\n 15509: u64 [s1 + 0xf8] = a4\n 15513: u64 [a5 + 0x28] = a4\n 15516: u64 [s1 + 0x108] = a1\n 15520: u64 [a5 + 0x30] = a1\n 15523: u64 [s1 + 0x100] = a3\n 15527: u64 [a5 + 0x38] = a3\n 15530: a1 = s1 + 0x2300\n 15534: u64 [s1 + 0x110] = a2\n 15538: u64 [a5 + 0x40] = a2\n 15541: a0 = u64 [s1 + 0xd0]\n 15545: ra = 624, jump @19\n      : @568 [@dyn 312] (gas: 3)\n 15551: a0 = u64 [s1 + 0x158]\n 15555: a0 = a0 & 0x1\n 15558: jump @570 if a0 == 0\n      : @569 (gas: 1)\n 15561: jump @993\n      : @570 (gas: 1)\n 15564: t0 = 626, jump @1978\n      : @571 [@dyn 313] (gas: 1)\n 15571: jump @500 if a1 == 0\n      : @572 (gas: 15)\n 15575: a0 = u64 [s1 + 0x158]\n 15579: a1 = a0 & 0xffffffffffffff00\n 15583: a0 = u64 [s1 + 0xd0]\n 15587: i32 a0 = a0 + 0x20\n 15590: a2 = s1 + 0x20d8\n 15594: a3 = u64 [s1 + 0x140]\n 15598: a4 = a2 + 0x100\n 15602: u64 [a4 + 0xb0] = a3\n 15606: u64 [a4 + 0xa8] = a1\n 15610: a1 = u64 [s1 + 0x148]\n 15614: u64 [a4 + 0xb8] = a1\n 15618: a1 = s1 + 0x2280\n 15622: a3 = u64 [s1 + 0x150]\n 15626: u64 [a4 + 0xc0] = a3\n 15630: ra = 628, jump @19\n      : @573 [@dyn 314] (gas: 1)\n 15636: t0 = 630, jump @1965\n      : @574 [@dyn 315] (gas: 1)\n 15643: jump @1040\n      : @575 (gas: 12)\n 15646: a0 = s1 + 0x38d8\n 15650: u64 [a0 + 288] = 0\n 15654: u64 [a0 + 280] = 0\n 15658: u64 [a0 + 272] = 0\n 15662: u64 [a0 + 264] = 0\n 15666: a0 = s1 + 0x4000\n 15670: i32 a0 = a0 + 0xfffffffffffff9e0\n 15674: ra = 0x278\n 15678: ecalli 16 // 'value_transferred'\n 15680: a0 = 0x4000\n 15684: t0 = 0x27a\n 15688: jump @2011\n      : @576 [@dyn 316] (gas: 2)\n 15692: a0 = 0x4000\n 15696: t0 = 634, jump @2011\n      : @577 [@dyn 317] (gas: 8)\n 15703: a0 = u64 [a4 + 0x18]\n 15706: a1 = u64 [a4 + 0x20]\n 15709: a2 = u64 [a4 + 0x10]\n 15712: a3 = u64 [a4 + 0x8]\n 15715: a1 = a1 | a2\n 15718: a0 = a0 | a3\n 15721: a0 = a0 | a1\n 15724: jump @579 if a0 == 0\n      : @578 (gas: 1)\n 15727: jump @1235\n      : @579 (gas: 4)\n 15730: a0 = u64 [s1 + 0x158]\n 15734: a0 = i32 [a0]\n 15736: a1 = 0x43\n 15739: jump @581 if a1 <u a0\n      : @580 (gas: 1)\n 15742: jump @1236\n      : @581 (gas: 4)\n 15745: a0 = s1 + 0x2540\n 15749: ra = 0x27c\n 15753: t0 = 0x62e\n 15757: jump @2009\n      : @582 [@dyn 318] (gas: 13)\n 15761: a0 = s1 + 0x20d8\n 15765: a2 = a0 + 0x400\n 15769: a1 = u64 [a2 + 0x78]\n 15772: u64 [s1 + 0x148] = a1\n 15776: a1 = u64 [a2 + 0x70]\n 15779: u64 [s1 + 0x150] = a1\n 15783: a0 = u64 [a2 + 0x68]\n 15786: u64 [s1 + 0x158] = a0\n 15790: a0 = s1 + 0x4000\n 15794: i32 a0 = a0 + 0xfffffffffffffa00\n 15798: a1 = 0x24\n 15801: ecalli 3 // 'call_data_load'\n 15803: fallthrough\n      : @583 (gas: 16)\n 15804: a0 = s1 + 0x38d8\n 15808: a5 = a0 + 0x100\n 15812: a1 = u64 [a5 + 0x40]\n 15815: a2 = u64 [a5 + 0x38]\n 15818: a3 = u64 [a5 + 0x28]\n 15821: a4 = u64 [a5 + 0x30]\n 15824: a5 = s1 + 0x100\n 15828: u64 [a5 + 0x38] = a1\n 15831: u64 [a5 + 0x30] = a2\n 15834: a0 = a2 | a1\n 15837: u64 [a5 + 0x28] = a3\n 15840: a1 = a3 <u 0x2\n 15843: u64 [a5 + 0x20] = a4\n 15846: a1 = 0 if a4 != 0\n 15848: a1 = 0 if a0 != 0\n 15850: jump @585 if a1 != 0\n      : @584 (gas: 1)\n 15853: jump @1237\n      : @585 (gas: 10)\n 15856: a3 = s1 + 0x100\n 15860: a0 = u64 [a3 + 0x48]\n 15863: a0 = a0 << 0x20\n 15866: a2 = a0 >> 0x20\n 15869: a0 = u64 [a3 + 0x58]\n 15872: a1 = u64 [a3 + 0x50]\n 15875: a0 = a0 | a1\n 15878: u64 [a3 + 0x40] = a2\n 15881: a0 = a0 | a2\n 15884: jump @587 if a0 != 0\n      : @586 (gas: 1)\n 15887: jump @1238\n      : @587 (gas: 9)\n 15890: a0 = 0x30220\n 15895: u64 [s1 + 0x118] = a0\n 15899: i32 a0 = a0 + 0\n 15901: u64 [s1 + 0xe8] = a0\n 15905: ra = 0x27e\n 15909: ecalli 5 // 'caller'\n 15911: a2 = u64 [s1 + 0x118]\n 15915: t0 = 0x280\n 15919: jump @1944\n      : @588 [@dyn 319] (gas: 2)\n 15923: a2 = u64 [s1 + 0x118]\n 15927: t0 = 640, jump @1944\n      : @589 [@dyn 320] (gas: 10)\n 15934: i32 a2 = a2 + 0xd8\n 15938: a2 = a2 + s1\n 15941: u64 [a2 + 1120] = 0\n 15945: a4 = a2 + 0x400\n 15949: u64 [a4 + 0x58] = a1\n 15952: u64 [a4 + 0x50] = a0\n 15955: a1 = s1 + 0x2520\n 15959: u64 [a4 + 0x48] = a3\n 15962: a0 = 0\n 15964: ra = 642, jump @19\n      : @590 [@dyn 321] (gas: 3)\n 15970: t0 = 0x284\n 15974: a1 = s1 + 0x20d8\n 15978: fallthrough\n      : @591 [@dyn 322] (gas: 8)\n 15979: u64 [a1 + 1088] = 0\n 15983: u64 [a1 + 1080] = 0\n 15987: u64 [a1 + 1064] = 0x5\n 15992: a2 = a1\n 15994: a0 = 0x20\n 15997: a1 = s1 + 0x2500\n 16001: u64 [a2 + 1072] = 0\n 16005: ra = 646, jump @19\n      : @592 [@dyn 323] (gas: 5)\n 16011: a0 = 0x2020c\n 16016: u64 [s1 + 0x148] = a0\n 16020: a0 = i32 [0x2020c]\n 16025: a1 = 0x3f\n 16028: jump @594 if a1 <u a0\n      : @593 (gas: 4)\n 16031: a1 = u64 [s1 + 0x148]\n 16035: u32 [a1 + 0] = 0x40\n 16038: t0 = 0x288\n 16042: jump @1945\n      : @594 (gas: 1)\n 16046: t0 = 648, jump @1945\n      : @595 [@dyn 324] (gas: 10)\n 16053: a0 = 0x20220\n 16058: i32 a0 = a0 + 0\n 16060: i32 a2 = a2 + 0\n 16062: a1 = 0x40\n 16065: u64 [s1 + 0x110] = a0\n 16069: ra = 0x28a\n 16073: ecalli 9 // 'hash_keccak_256'\n 16075: a3 = u64 [s1 + 0x108]\n 16079: t0 = 0x28c\n 16083: jump @2019\n      : @596 [@dyn 325] (gas: 2)\n 16087: a3 = u64 [s1 + 0x108]\n 16091: t0 = 652, jump @2019\n      : @597 [@dyn 326] (gas: 19)\n 16098: u64 [s1 + 0x108] = a0\n 16102: a0 = reverse a1\n 16104: u64 [s1 + 0x100] = a0\n 16108: a0 = reverse a2\n 16110: u64 [s1 + 0xf8] = a0\n 16114: a0 = reverse a3\n 16116: u64 [s1 + 0xf0] = a0\n 16120: a2 = s1 + 0x20d8\n 16124: u64 [a2 + 1056] = 0\n 16128: a0 = u64 [s1 + 0x140]\n 16132: a3 = a2 + 0x400\n 16136: u64 [a3 + 0x18] = a0\n 16139: a0 = u64 [s1 + 0x150]\n 16143: u64 [a3 + 0x10] = a0\n 16146: a1 = s1 + 0x24e0\n 16150: a0 = u64 [s1 + 0x158]\n 16154: u64 [a3 + 0x8] = a0\n 16157: a0 = 0\n 16159: ra = 654, jump @19\n      : @598 [@dyn 327] (gas: 13)\n 16165: a0 = u64 [s1 + 0xf0]\n 16169: a1 = s1 + 0x20d8\n 16173: u64 [a1 + 0x400] = a0\n 16177: a0 = u64 [s1 + 0xf8]\n 16181: u64 [a1 + 0x3f8] = a0\n 16185: a0 = u64 [s1 + 0x100]\n 16189: u64 [a1 + 0x3f0] = a0\n 16193: a3 = a1\n 16195: a0 = 0x20\n 16198: a1 = s1 + 0x24c0\n 16202: a2 = u64 [s1 + 0x108]\n 16206: u64 [a3 + 0x3e8] = a2\n 16210: ra = 656, jump @19\n      : @599 [@dyn 328] (gas: 3)\n 16216: a0 = u64 [s1 + 0x148]\n 16220: a0 = i32 [a0]\n 16222: jump @601 if a0 >u 63\n      : @600 (gas: 3)\n 16226: a0 = u64 [s1 + 0x148]\n 16230: u32 [a0 + 0] = 0x40\n 16233: fallthrough\n      : @601 (gas: 34)\n 16234: a0 = sp + 0xffffffffffffffe0\n 16237: a0 = a0 & 0xffffffffffffffe0\n 16240: u64 [s1 + 0x148] = a0\n 16244: sp = a0\n 16246: i32 a2 = a0 + 0\n 16248: a1 = 0x40\n 16251: a0 = u64 [s1 + 0x110]\n 16255: ecalli 9 // 'hash_keccak_256'\n 16257: a3 = u64 [s1 + 0x148]\n 16261: a0 = u64 [a3 + 0x18]\n 16264: a1 = u64 [a3 + 0x10]\n 16267: a2 = u64 [a3 + 0x8]\n 16270: a3 = u64 [a3]\n 16272: a4 = reverse a0\n 16274: a0 = reverse a1\n 16276: a1 = reverse a2\n 16278: a2 = reverse a3\n 16280: a5 = s1 + 0x20d8\n 16284: a3 = u64 [s1 + 0x138]\n 16288: u64 [a5 + 0x3c0] = a3\n 16292: a3 = u64 [s1 + 0x130]\n 16296: u64 [a5 + 0x3b8] = a3\n 16300: a3 = u64 [s1 + 0x120]\n 16304: u64 [a5 + 0x3b0] = a3\n 16308: a3 = u64 [s1 + 0x128]\n 16312: u64 [a5 + 0x3a8] = a3\n 16316: a3 = a5 + 0x300\n 16320: u64 [a3 + 0xe0] = a2\n 16324: u64 [a3 + 0xd8] = a1\n 16328: u64 [a3 + 0xd0] = a0\n 16332: a0 = s1 + 0x24a0\n 16336: a1 = s1 + 0x2480\n 16340: u64 [a3 + 0xc8] = a4\n 16344: ra = 658, jump @1820\n      : @602 [@dyn 329] (gas: 3)\n 16351: a0 = s1 + 0x2460\n 16355: a1 = 0x40\n 16358: ra = 660, jump @17\n      : @603 [@dyn 330] (gas: 7)\n 16364: a3 = s1 + 0x20d8\n 16368: a5 = a3 + 0x300\n 16372: a0 = u64 [a5 + 0xa0]\n 16376: a1 = u64 [a5 + 0x98]\n 16380: a2 = u64 [a5 + 0x90]\n 16384: a4 = u64 [a5 + 0x88]\n 16388: t0 = 662, jump @1927\n      : @604 [@dyn 331] (gas: 1)\n 16395: jump @500 if a0 != 0\n      : @605 (gas: 15)\n 16399: a3 = a4\n 16401: a2 = s1 + 0x20d8\n 16405: a0 = u64 [s1 + 0x128]\n 16409: a5 = a2 + 0x300\n 16413: u64 [a5 + 0x68] = a0\n 16416: a0 = u64 [s1 + 0x120]\n 16420: u64 [a5 + 0x70] = a0\n 16423: a0 = u64 [s1 + 0x130]\n 16427: u64 [a5 + 0x78] = a0\n 16430: a1 = s1 + 0x2440\n 16434: a0 = u64 [s1 + 0x138]\n 16438: u64 [a5 + 0x80] = a0\n 16442: a0 = a4\n 16444: u64 [s1 + 0x148] = a3\n 16448: ra = 664, jump @19\n      : @606 [@dyn 332] (gas: 6)\n 16454: a0 = u64 [s1 + 0xe8]\n 16458: ra = 0x29a\n 16462: ecalli 5 // 'caller'\n 16464: a2 = u64 [s1 + 0x118]\n 16468: t0 = 0x29c\n 16472: jump @2003\n      : @607 [@dyn 333] (gas: 2)\n 16476: a2 = u64 [s1 + 0x118]\n 16480: t0 = 668, jump @2003\n      : @608 [@dyn 334] (gas: 49)\n 16487: t0 = a1 | a0\n 16490: a3 = a3 >> 0x20\n 16493: a2 = reverse a2\n 16495: a1 = a2 << 0x20\n 16498: a1 = a1 | a3\n 16501: a2 = a2 >> 0x20\n 16504: a3 = u64 [s1 + 0x140]\n 16508: a0 = s1 + 0x20d8\n 16512: u64 [a0 + 0x318] = a3\n 16516: a3 = u64 [0x200e8]\n 16521: u64 [a0 + 800] = 0\n 16525: a4 = u64 [s1 + 0x150]\n 16529: u64 [a0 + 0x310] = a4\n 16533: a4 = u64 [s1 + 0x158]\n 16537: u64 [a0 + 0x308] = a4\n 16541: u64 [a0 + 0x360] = a3\n 16545: a3 = u64 [0x200f0]\n 16550: a4 = u64 [0x200f8]\n 16555: a5 = u64 [0x20100]\n 16560: u64 [a0 + 832] = 0\n 16564: u64 [a0 + 0x358] = a3\n 16568: a3 = a0 + 0x300\n 16572: u64 [a3 + 0x50] = a4\n 16575: u64 [a3 + 0x48] = a5\n 16578: u64 [a3 + 0x38] = a2\n 16581: u64 [a3 + 0x30] = a1\n 16584: a1 = 0x20\n 16587: a2 = s1 + 0x2420\n 16591: a3 = s1 + 0x2400\n 16595: a4 = s1 + 0x23e0\n 16599: u64 [a0 + 0x328] = t0\n 16603: a0 = u64 [s1 + 0x148]\n 16607: ra = 0x29e\n 16611: sp = sp + 0xffffffffffffff20\n 16615: u64 [sp + 0xd8] = ra\n 16619: u64 [sp + 0xd0] = s0\n 16623: u64 [sp + 0xc8] = s1\n 16627: s0 = sp + 0xe0\n 16631: sp = sp & 0xffffffffffffffe0\n 16634: a5 = u64 [a4]\n 16636: u64 [sp + 0x40] = a5\n 16639: a5 = u64 [a4 + 0x8]\n 16642: u64 [sp + 0x48] = a5\n 16645: a5 = u64 [a4 + 0x10]\n 16648: u64 [sp + 0x50] = a5\n 16651: a4 = u64 [a4 + 0x18]\n 16654: u64 [sp + 0x58] = a4\n 16657: t0 = 0x12\n 16660: jump @1970\n      : @609 [@dyn 335] (gas: 5)\n 16664: a0 = 0\n 16666: a1 = u64 [s1 + 0x110]\n 16670: a2 = 0\n 16672: ecalli 13 // 'seal_return'\n 16674: jump @1373\n      : @610 (gas: 1)\n 16677: t0 = 672, jump @2014\n      : @611 [@dyn 336] (gas: 1)\n 16684: jump @613 if a1 <u a0\n      : @612 (gas: 1)\n 16687: jump @1243\n      : @613 (gas: 8)\n 16690: a1 = s1 + 0x38d8\n 16694: u64 [a1 + 352] = 0\n 16698: u64 [a1 + 344] = 0\n 16702: u64 [a1 + 336] = 0\n 16706: u64 [a1 + 328] = 0xa\n 16711: a0 = s1 + 0x2620\n 16715: a1 = s1 + 0x3a20\n 16719: ra = 674, jump @21\n      : @614 [@dyn 337] (gas: 13)\n 16725: a0 = s1 + 0x20d8\n 16729: a1 = u64 [a0 + 0x550]\n 16733: u64 [s1 + 0x158] = a1\n 16737: a1 = u64 [a0 + 0x548]\n 16741: u64 [s1 + 0x150] = a1\n 16745: a0 = u32 [a0 + 0x558]\n 16749: u64 [s1 + 0x148] = a0\n 16753: a0 = 0x30220\n 16758: u64 [s1 + 0x140] = a0\n 16762: i32 a0 = a0 + 0\n 16764: ra = 0x2a4\n 16768: ecalli 5 // 'caller'\n 16770: fallthrough\n      : @615 [@dyn 338] (gas: 3)\n 16771: a5 = s1 + 0x100\n 16775: a2 = u64 [a5 + 0x40]\n 16778: t0 = 678, jump @1913\n      : @616 [@dyn 339] (gas: 9)\n 16785: a2 = u64 [a5 + 0x48]\n 16788: a1 = a1 ^ a2\n 16791: a2 = u64 [a5 + 0x50]\n 16794: a0 = a0 ^ a2\n 16797: a0 = a0 | a1\n 16800: a1 = u64 [a5 + 0x58]\n 16803: a1 = a1 ^ a3\n 16806: a0 = a0 | a1\n 16809: jump @618 if a0 != 0\n      : @617 (gas: 1)\n 16812: jump @1244\n      : @618 (gas: 3)\n 16815: a0 = s1 + 0x2600\n 16819: a1 = 0x40\n 16822: ra = 680, jump @17\n      : @619 [@dyn 340] (gas: 7)\n 16828: a0 = s1 + 0x20d8\n 16832: a5 = a0 + 0x500\n 16836: a3 = u64 [a5 + 0x40]\n 16839: a4 = u64 [a5 + 0x38]\n 16842: a2 = u64 [a5 + 0x30]\n 16845: a1 = u64 [a5 + 0x28]\n 16848: t0 = 682, jump @1916\n      : @620 [@dyn 341] (gas: 1)\n 16855: jump @500 if a0 != 0\n      : @621 (gas: 9)\n 16859: a2 = s1 + 0x20d8\n 16863: u64 [a2 + 1304] = 0\n 16867: u64 [a2 + 1296] = 0\n 16871: u64 [a2 + 1288] = 0\n 16875: a0 = 0x8c379a000000000\n 16885: a1 = s1 + 0x25e0\n 16889: u64 [a2 + 0x520] = a0\n 16893: a0 = u64 [s1 + 0x158]\n 16897: ra = 684, jump @19\n      : @622 [@dyn 342] (gas: 1)\n 16903: t0 = 686, jump @1910\n      : @623 [@dyn 343] (gas: 1)\n 16910: jump @500 if a0 == 0\n      : @624 (gas: 9)\n 16914: a0 = u64 [s1 + 0x158]\n 16918: i32 a0 = a0 + 0x4\n 16921: a2 = s1 + 0x20d8\n 16925: u64 [a2 + 1280] = 0\n 16929: u64 [a2 + 1272] = 0\n 16933: u64 [a2 + 1256] = 0x20\n 16938: a1 = s1 + 0x25c0\n 16942: u64 [a2 + 1264] = 0\n 16946: ra = 688, jump @19\n      : @625 [@dyn 344] (gas: 4)\n 16952: a2 = s1 + 0x100\n 16956: a0 = u64 [a2 + 0x40]\n 16959: a0 = a0 + 0xffffffffffffffdc\n 16962: t0 = 690, jump @1909\n      : @626 [@dyn 345] (gas: 1)\n 16969: jump @500 if a0 == 0\n      : @627 (gas: 9)\n 16973: a0 = u64 [s1 + 0x158]\n 16977: i32 a0 = a0 + 0x24\n 16980: a2 = s1 + 0x20d8\n 16984: u64 [a2 + 1248] = 0\n 16988: u64 [a2 + 1240] = 0\n 16992: u64 [a2 + 1224] = 0x30\n 16997: a1 = s1 + 0x25a0\n 17001: u64 [a2 + 1232] = 0\n 17005: ra = 692, jump @19\n      : @628 [@dyn 346] (gas: 5)\n 17011: a0 = 0x100000000\n 17021: a2 = s1 + 0x100\n 17025: u64 [a2 + 0x40] = a0\n 17028: a0 = 0xffffffbc\n 17038: t0 = 694, jump @1909\n      : @629 [@dyn 347] (gas: 1)\n 17045: jump @500 if a0 == 0\n      : @630 (gas: 14)\n 17049: a0 = u64 [s1 + 0x158]\n 17053: i32 a0 = a0 + 0x44\n 17056: a1 = u64 [0x200b8]\n 17061: a4 = s1 + 0x20d8\n 17065: a5 = a4 + 0x400\n 17069: u64 [a5 + 0xc0] = a1\n 17073: a1 = u64 [0x200c0]\n 17078: a2 = u64 [0x200c8]\n 17083: a3 = u64 [0x200d0]\n 17088: u64 [a5 + 0xb8] = a1\n 17092: u64 [a5 + 0xb0] = a2\n 17096: a1 = s1 + 0x2580\n 17100: u64 [a5 + 0xa8] = a3\n 17104: ra = 696, jump @19\n      : @631 [@dyn 348] (gas: 4)\n 17110: a2 = s1 + 0x100\n 17114: a0 = u64 [a2 + 0x40]\n 17117: a0 = a0 + 0xffffffffffffff9c\n 17120: t0 = 698, jump @1909\n      : @632 [@dyn 349] (gas: 1)\n 17127: jump @500 if a0 == 0\n      : @633 (gas: 12)\n 17131: a0 = u64 [s1 + 0x158]\n 17135: i32 a0 = a0 + 0x64\n 17138: a1 = u64 [0x200d8]\n 17143: a2 = u64 [0x200e0]\n 17148: a3 = s1 + 0x20d8\n 17152: u64 [a3 + 0x4a0] = a1\n 17156: u64 [a3 + 1168] = 0\n 17160: u64 [a3 + 0x498] = a2\n 17164: a1 = s1 + 0x2560\n 17168: u64 [a3 + 1160] = 0\n 17172: ra = 0x542\n 17176: jump @19\n      : @634 (gas: 12)\n 17179: a0 = s1 + 0x38d8\n 17183: u64 [a0 + 608] = 0\n 17187: u64 [a0 + 600] = 0\n 17191: u64 [a0 + 592] = 0\n 17195: u64 [a0 + 584] = 0\n 17199: a0 = s1 + 0x4000\n 17203: i32 a0 = a0 + 0xfffffffffffffb20\n 17207: ra = 0x2bc\n 17211: ecalli 16 // 'value_transferred'\n 17213: a0 = 0x38d8\n 17217: t0 = 0x2be\n 17221: jump @2001\n      : @635 [@dyn 350] (gas: 2)\n 17225: a0 = 0x38d8\n 17229: t0 = 702, jump @2001\n      : @636 [@dyn 351] (gas: 1)\n 17236: jump @638 if a0 == 0\n      : @637 (gas: 1)\n 17239: jump @1246\n      : @638 (gas: 1)\n 17242: t0 = 704, jump @2014\n      : @639 [@dyn 352] (gas: 1)\n 17249: jump @641 if a1 <u a0\n      : @640 (gas: 1)\n 17252: jump @1247\n      : @641 (gas: 44)\n 17255: a0 = s1 + 0x4000\n 17259: i32 a0 = a0 + 0xfffffffffffffb40\n 17263: a1 = 0x4\n 17266: ecalli 3 // 'call_data_load'\n 17268: a3 = s1 + 0x38d8\n 17272: a4 = a3 + 0x200\n 17276: a2 = u64 [a4 + 0x68]\n 17279: a0 = u64 [a4 + 0x70]\n 17282: a1 = u64 [a4 + 0x78]\n 17285: a3 = u64 [a4 + 0x80]\n 17289: a4 = s1 + 0x20d8\n 17293: a5 = a4 + 0x700\n 17297: u64 [a5 + 0x60] = a3\n 17300: u64 [a5 + 0x58] = a1\n 17303: u64 [a5 + 0x50] = a0\n 17306: a0 = s1 + 0x2840\n 17310: a1 = s1 + 0x2820\n 17314: u64 [a5 + 0x48] = a2\n 17317: ra = 0x2c2\n 17321: sp = sp + 0xfffffffffffffca0\n 17325: a2 = sp + 0x300\n 17329: u64 [a2 + 0x58] = ra\n 17332: u64 [a2 + 0x50] = s0\n 17335: u64 [a2 + 0x48] = s1\n 17338: s0 = sp + 0x360\n 17342: sp = sp & 0xffffffffffffffe0\n 17345: s1 = sp\n 17347: a2 = u64 [a1]\n 17349: u64 [s1 + 0xb8] = a2\n 17353: a3 = u64 [a1 + 0x8]\n 17356: u64 [s1 + 0xb0] = a3\n 17360: a4 = u64 [a1 + 0x10]\n 17363: u64 [s1 + 0xa8] = a4\n 17367: a1 = u64 [a1 + 0x18]\n 17370: u64 [s1 + 0xa0] = a1\n 17374: u64 [s1 + 0x10] = a0\n 17377: u64 [s1 + 0x2f8] = a1\n 17381: u64 [s1 + 0x2f0] = a4\n 17385: u64 [s1 + 0x2e8] = a3\n 17389: a0 = s1 + 0x300\n 17393: a1 = s1 + 0x2e0\n 17397: u64 [s1 + 0x2e0] = a2\n 17401: ra = 0x790\n 17405: jump @1823\n      : @642 [@dyn 353] (gas: 3)\n 17409: t0 = 0x2c4\n 17413: a1 = s1 + 0x20d8\n 17417: fallthrough\n      : @643 [@dyn 354] (gas: 12)\n 17418: a2 = a1 + 0x700\n 17422: a0 = u64 [a2 + 0x80]\n 17426: u64 [s1 + 0x120] = a0\n 17430: a0 = u64 [a2 + 0x78]\n 17433: u64 [s1 + 0x128] = a0\n 17437: a0 = u64 [a2 + 0x70]\n 17440: u64 [s1 + 0x130] = a0\n 17444: a0 = u64 [a2 + 0x68]\n 17447: u64 [s1 + 0x138] = a0\n 17451: a0 = s1 + 0x2800\n 17455: a1 = 0x40\n 17458: ra = 710, jump @17\n      : @644 [@dyn 355] (gas: 7)\n 17464: a1 = s1 + 0x20d8\n 17468: a4 = a1 + 0x700\n 17472: a2 = u64 [a4 + 0x40]\n 17475: a3 = u64 [a4 + 0x38]\n 17478: a0 = u64 [a4 + 0x30]\n 17481: a1 = u64 [a4 + 0x28]\n 17484: t0 = 712, jump @1938\n      : @645 [@dyn 356] (gas: 1)\n 17491: jump @500 if a0 != 0\n      : @646 (gas: 8)\n 17495: a2 = s1 + 0x20d8\n 17499: u64 [a2 + 1824] = 0\n 17503: u64 [a2 + 1816] = 0\n 17507: u64 [a2 + 1808] = 0\n 17511: a1 = s1 + 0x27e0\n 17515: u64 [a2 + 1800] = 0x20\n 17520: a0 = u64 [s1 + 0x158]\n 17524: ra = 714, jump @19\n      : @647 [@dyn 357] (gas: 1)\n 17530: t0 = 716, jump @1935\n      : @648 [@dyn 358] (gas: 18)\n 17537: u64 [a1 + 0x6b0] = a2\n 17541: a2 = a1 + 0x600\n 17545: u64 [a2 + 0xa8] = a0\n 17549: a0 = u64 [a5 + 0x20]\n 17552: u64 [a2 + 0xe0] = a0\n 17556: a0 = u64 [a5 + 0x28]\n 17559: u64 [a2 + 0xd8] = a0\n 17563: a0 = u64 [a5 + 0x30]\n 17566: u64 [a2 + 0xd0] = a0\n 17570: a0 = u64 [a5 + 0x38]\n 17573: u64 [a2 + 0xc8] = a0\n 17577: u64 [a2 + 0xb8] = a3\n 17581: a3 = a1\n 17583: a0 = s1 + 0x27c0\n 17587: a1 = s1 + 0x27a0\n 17591: a2 = s1 + 0x2780\n 17595: u64 [a3 + 0x6c0] = a4\n 17599: ra = 718, jump @1435\n      : @649 [@dyn 359] (gas: 6)\n 17605: a1 = s1 + 0x20d8\n 17609: a0 = u64 [a1 + 0x6f0]\n 17613: t0 = u64 [a1 + 0x700]\n 17617: t1 = u64 [a1 + 0x6e8]\n 17621: a3 = u64 [a1 + 0x6f8]\n 17625: jump @1061\n      : @650 (gas: 1)\n 17628: t0 = 720, jump @2014\n      : @651 [@dyn 360] (gas: 1)\n 17635: jump @653 if a1 <u a0\n      : @652 (gas: 1)\n 17638: jump @1248\n      : @653 (gas: 23)\n 17641: a0 = s1 + 0x4000\n 17645: i32 a0 = a0 + 0xfffffffffffffb60\n 17649: a1 = 0x4\n 17652: ecalli 3 // 'call_data_load'\n 17654: a0 = s1 + 0x38d8\n 17658: a5 = a0 + 0x200\n 17662: a4 = u64 [a5 + 0xa0]\n 17666: a3 = u64 [a5 + 0x98]\n 17670: a1 = u64 [a5 + 0x90]\n 17674: a2 = u64 [a5 + 0x88]\n 17678: a0 = s1 + 0x28d8\n 17682: u64 [s1 + 0x138] = a4\n 17686: u64 [a0 + 0x400] = a4\n 17690: u64 [s1 + 0x140] = a3\n 17694: a4 = a0 + 0x300\n 17698: u64 [a4 + 0xf8] = a3\n 17702: u64 [s1 + 0x148] = a1\n 17706: u64 [a4 + 0xf0] = a1\n 17710: a1 = s1 + 0x2cc0\n 17714: u64 [s1 + 0x150] = a2\n 17718: u64 [a4 + 0xe8] = a2\n 17722: a0 = 0\n 17724: ra = 722, jump @19\n      : @654 [@dyn 361] (gas: 9)\n 17730: a0 = s1 + 0x28d8\n 17734: u64 [a0 + 992] = 0\n 17738: u64 [a0 + 984] = 0\n 17742: u64 [a0 + 976] = 0\n 17746: a3 = a0\n 17748: a0 = 0x20\n 17751: a1 = s1 + 0x2ca0\n 17755: u64 [a3 + 968] = 0xb\n 17760: ra = 724, jump @19\n      : @655 [@dyn 362] (gas: 4)\n 17766: a0 = 0x2020c\n 17771: u64 [s1 + 0x158] = a0\n 17775: a0 = i32 [0x2020c]\n 17780: jump @657 if a0 >u 63\n      : @656 (gas: 3)\n 17784: a1 = u64 [s1 + 0x158]\n 17788: u32 [a1 + 0] = 0x40\n 17791: fallthrough\n      : @657 (gas: 14)\n 17792: a0 = sp + 0xffffffffffffffe0\n 17795: a2 = a0 & 0xffffffffffffffe0\n 17798: u64 [s1 + 0x128] = a2\n 17802: sp = a2\n 17804: a0 = 0x20220\n 17809: u64 [s1 + 0xf8] = a0\n 17813: i32 a0 = a0 + 0\n 17815: i32 a2 = a2 + 0\n 17817: a1 = 0x40\n 17820: u64 [s1 + 0x130] = a0\n 17824: ra = 0x2d6\n 17828: ecalli 9 // 'hash_keccak_256'\n 17830: t0 = 0x2d8\n 17834: jump @1925\n      : @658 [@dyn 363] (gas: 1)\n 17838: t0 = 728, jump @1925\n      : @659 [@dyn 364] (gas: 8)\n 17845: a3 = a1 + 0x200\n 17849: u64 [a3 + 0xa8] = a4\n 17853: u64 [a3 + 0xb0] = a5\n 17857: u64 [a3 + 0xb8] = a2\n 17861: u64 [a3 + 0xc0] = a0\n 17865: a0 = s1 + 0x2c80\n 17869: a1 = s1 + 0x3b80\n 17873: ra = 730, jump @21\n      : @660 [@dyn 365] (gas: 3)\n 17879: t0 = 0x2dc\n 17883: a1 = s1 + 0x28d8\n 17887: fallthrough\n      : @661 [@dyn 366] (gas: 21)\n 17888: a2 = a1 + 0x300\n 17892: a0 = u64 [a2 + 0xc0]\n 17896: u64 [s1 + 0x120] = a0\n 17900: a0 = u64 [a2 + 0xb8]\n 17904: u64 [s1 + 0x118] = a0\n 17908: a0 = u64 [a2 + 0xb0]\n 17912: u64 [s1 + 0x110] = a0\n 17916: a0 = u64 [a2 + 0xa8]\n 17920: u64 [s1 + 0x108] = a0\n 17924: a0 = u64 [s1 + 0x138]\n 17928: u64 [a2 + 0xa0] = a0\n 17932: a0 = u64 [s1 + 0x140]\n 17936: u64 [a2 + 0x98] = a0\n 17940: a0 = u64 [s1 + 0x148]\n 17944: u64 [a2 + 0x90] = a0\n 17948: a2 = a1\n 17950: a1 = s1 + 0x2c60\n 17954: a0 = u64 [s1 + 0x150]\n 17958: u64 [a2 + 0x388] = a0\n 17962: a0 = 0\n 17964: ra = 734, jump @19\n      : @662 [@dyn 367] (gas: 3)\n 17970: t0 = 0x2e0\n 17974: a1 = s1 + 0x28d8\n 17978: fallthrough\n      : @663 [@dyn 368] (gas: 8)\n 17979: u64 [a1 + 896] = 0\n 17983: u64 [a1 + 888] = 0\n 17987: u64 [a1 + 872] = 0xb\n 17992: a2 = a1\n 17994: a0 = 0x20\n 17997: a1 = s1 + 0x2c40\n 18001: u64 [a2 + 880] = 0\n 18005: ra = 738, jump @19\n      : @664 [@dyn 369] (gas: 3)\n 18011: a0 = u64 [s1 + 0x158]\n 18015: a0 = i32 [a0]\n 18017: jump @666 if a0 >u 63\n      : @665 (gas: 3)\n 18021: a0 = u64 [s1 + 0x158]\n 18025: u32 [a0 + 0] = 0x40\n 18028: fallthrough\n      : @666 (gas: 4)\n 18029: a0 = sp + 0xffffffffffffffe0\n 18032: a0 = a0 & 0xffffffffffffffe0\n 18035: u64 [s1 + 0x128] = a0\n 18039: t0 = 740, jump @1967\n      : @667 [@dyn 370] (gas: 5)\n 18046: ra = 0x2e6\n 18050: ecalli 9 // 'hash_keccak_256'\n 18052: a3 = u64 [s1 + 0x128]\n 18056: t0 = 0x2e8\n 18060: jump @1915\n      : @668 [@dyn 371] (gas: 2)\n 18064: a3 = u64 [s1 + 0x128]\n 18068: t0 = 744, jump @1915\n      : @669 [@dyn 372] (gas: 9)\n 18075: a1 = s1 + 0x38d8\n 18079: a5 = a1 + 0x200\n 18083: u64 [a5 + 0xc8] = a3\n 18087: u64 [a5 + 0xd0] = a2\n 18091: u64 [a5 + 0xd8] = a4\n 18095: u64 [a5 + 0xe0] = a0\n 18099: a0 = s1 + 0x2c20\n 18103: a1 = s1 + 0x3ba0\n 18107: ra = 746, jump @21\n      : @670 [@dyn 373] (gas: 17)\n 18113: a0 = s1 + 0x28d8\n 18117: a2 = a0 + 0x300\n 18121: a1 = u64 [a2 + 0x58]\n 18124: u64 [s1 + 0xd8] = a1\n 18128: a1 = u64 [a2 + 0x50]\n 18131: u64 [s1 + 0xe0] = a1\n 18135: a0 = u64 [a2 + 0x48]\n 18138: u64 [s1 + 0xe8] = a0\n 18142: a0 = s1 + 0x38d8\n 18146: u64 [a0 + 768] = 0\n 18150: u64 [a0 + 760] = 0\n 18154: u64 [a0 + 752] = 0\n 18158: u64 [a0 + 744] = 0\n 18162: a0 = s1 + 0x4000\n 18166: i32 a0 = a0 + 0xfffffffffffffbc0\n 18170: ecalli 16 // 'value_transferred'\n 18172: fallthrough\n      : @671 (gas: 19)\n 18173: a3 = s1 + 0x38d8\n 18177: a0 = u64 [a3 + 0x300]\n 18181: a4 = a3 + 0x200\n 18185: a1 = u64 [a4 + 0xf0]\n 18189: a2 = u64 [a4 + 0xe8]\n 18193: a3 = u64 [a4 + 0xf8]\n 18197: a5 = s1 + 0x100\n 18201: a4 = u64 [a5 + 0x20]\n 18204: a0 = a0 ^ a4\n 18207: a4 = u64 [a5 + 0x10]\n 18210: a1 = a1 ^ a4\n 18213: a0 = a0 | a1\n 18216: a1 = u64 [a5 + 0x18]\n 18219: a1 = a1 ^ a3\n 18222: a3 = u64 [a5 + 0x8]\n 18225: a2 = a2 ^ a3\n 18228: a1 = a1 | a2\n 18231: a0 = a0 | a1\n 18234: jump @673 if a0 == 0\n      : @672 (gas: 1)\n 18237: jump @935\n      : @673 (gas: 3)\n 18240: t0 = 0x2ec\n 18244: a2 = s1 + 0x28d8\n 18248: fallthrough\n      : @674 [@dyn 374] (gas: 12)\n 18249: a0 = u64 [s1 + 0x150]\n 18253: a3 = a2 + 0x200\n 18257: u64 [a3 + 0x68] = a0\n 18260: a0 = u64 [s1 + 0x148]\n 18264: u64 [a3 + 0x70] = a0\n 18267: a0 = u64 [s1 + 0x140]\n 18271: u64 [a3 + 0x78] = a0\n 18274: a1 = s1 + 0x2b40\n 18278: a0 = u64 [s1 + 0x138]\n 18282: u64 [a3 + 0x80] = a0\n 18286: a0 = 0\n 18288: ra = 750, jump @19\n      : @675 [@dyn 375] (gas: 9)\n 18294: a0 = s1 + 0x28d8\n 18298: u64 [a0 + 608] = 0\n 18302: u64 [a0 + 600] = 0\n 18306: u64 [a0 + 592] = 0\n 18310: a3 = a0\n 18312: a0 = 0x20\n 18315: a1 = s1 + 0x2b20\n 18319: u64 [a3 + 584] = 0xb\n 18324: ra = 752, jump @19\n      : @676 [@dyn 376] (gas: 1)\n 18330: t0 = 754, jump @1997\n      : @677 [@dyn 377] (gas: 1)\n 18337: jump @679 if a1 <u a0\n      : @678 (gas: 3)\n 18340: a1 = u64 [s1 + 0x158]\n 18344: u32 [a1 + 0] = 0x40\n 18347: fallthrough\n      : @679 (gas: 4)\n 18348: a0 = sp + 0xffffffffffffffe0\n 18351: a0 = a0 & 0xffffffffffffffe0\n 18354: u64 [s1 + 0x128] = a0\n 18358: t0 = 756, jump @1967\n      : @680 [@dyn 378] (gas: 5)\n 18365: ra = 0x2f6\n 18369: ecalli 9 // 'hash_keccak_256'\n 18371: a3 = u64 [s1 + 0x128]\n 18375: t0 = 0x2f8\n 18379: jump @1912\n      : @681 [@dyn 379] (gas: 2)\n 18383: a3 = u64 [s1 + 0x128]\n 18387: t0 = 760, jump @1912\n      : @682 [@dyn 380] (gas: 14)\n 18394: a1 = u64 [s1 + 0x100]\n 18398: u64 [a1] = a4\n 18400: u64 [a1 + 0x8] = a5\n 18403: u64 [a1 + 0x10] = a2\n 18406: u64 [a1 + 0x18] = a0\n 18409: a0 = 0x30220\n 18414: u64 [s1 + 0x128] = a0\n 18418: i32 a0 = a0 + 0\n 18420: u64 [s1 + 0xf0] = a0\n 18424: ra = 0x2fa\n 18428: ecalli 5 // 'caller'\n 18430: a2 = u64 [s1 + 0x128]\n 18434: t0 = 0x2fc\n 18438: jump @1948\n      : @683 [@dyn 381] (gas: 2)\n 18442: a2 = u64 [s1 + 0x128]\n 18446: t0 = 764, jump @1948\n      : @684 [@dyn 382] (gas: 11)\n 18453: u64 [s1 + 0xd0] = a1\n 18457: a0 = a0 >> 0x20\n 18460: a1 = reverse a2\n 18462: a2 = a1 << 0x20\n 18465: a0 = a0 | a2\n 18468: u64 [s1 + 0xc8] = a0\n 18472: a1 = a1 >> 0x20\n 18475: u64 [s1 + 0xc0] = a1\n 18479: a0 = s1 + 0x2b00\n 18483: a1 = u64 [s1 + 0x100]\n 18487: ra = 766, jump @21\n      : @685 [@dyn 383] (gas: 17)\n 18493: a1 = s1 + 0x28d8\n 18497: a0 = u32 [a1 + 0x23c]\n 18501: a1 = u64 [a1 + 0x240]\n 18505: a0 = a0 << 0x20\n 18508: a2 = u64 [s1 + 0xc0]\n 18512: a0 = a0 | a2\n 18515: a2 = s1 + 0x38d8\n 18519: a3 = a2 + 0x300\n 18523: u64 [a3 + 0x20] = a1\n 18526: a1 = u64 [s1 + 0xc8]\n 18530: u64 [a3 + 0x10] = a1\n 18533: a1 = u64 [s1 + 0xd0]\n 18537: u64 [a3 + 0x8] = a1\n 18540: u64 [a3 + 0x18] = a0\n 18543: a1 = s1 + 0x3be0\n 18547: a0 = u64 [s1 + 0x100]\n 18551: ra = 768, jump @23\n      : @686 [@dyn 384] (gas: 13)\n 18557: a0 = u64 [s1 + 0x138]\n 18561: a2 = s1 + 0x28d8\n 18565: a3 = a2 + 0x200\n 18569: u64 [a3 + 0x20] = a0\n 18572: a0 = u64 [s1 + 0x140]\n 18576: u64 [a3 + 0x18] = a0\n 18579: a0 = u64 [s1 + 0x148]\n 18583: u64 [a3 + 0x10] = a0\n 18586: a1 = s1 + 0x2ae0\n 18590: a0 = u64 [s1 + 0x150]\n 18594: u64 [a3 + 0x8] = a0\n 18597: a0 = 0\n 18599: ra = 770, jump @19\n      : @687 [@dyn 385] (gas: 3)\n 18605: t0 = 0x304\n 18609: a1 = s1 + 0x28d8\n 18613: fallthrough\n      : @688 [@dyn 386] (gas: 8)\n 18614: u64 [a1 + 512] = 0\n 18618: u64 [a1 + 504] = 0\n 18622: u64 [a1 + 488] = 0xb\n 18627: a2 = a1\n 18629: a0 = 0x20\n 18632: a1 = s1 + 0x2ac0\n 18636: u64 [a2 + 496] = 0\n 18640: ra = 774, jump @19\n      : @689 [@dyn 387] (gas: 1)\n 18646: t0 = 776, jump @1997\n      : @690 [@dyn 388] (gas: 1)\n 18653: jump @692 if a1 <u a0\n      : @691 (gas: 3)\n 18656: a0 = u64 [s1 + 0x158]\n 18660: u32 [a0 + 0] = 0x40\n 18663: fallthrough\n      : @692 (gas: 6)\n 18664: a0 = 0xffffffff00000000\n 18674: u64 [s1 + 0xd0] = a0\n 18678: a0 = sp + 0xffffffffffffffe0\n 18681: a0 = a0 & 0xffffffffffffffe0\n 18684: u64 [s1 + 0xc8] = a0\n 18688: t0 = 778, jump @1967\n      : @693 [@dyn 389] (gas: 5)\n 18695: ra = 0x30c\n 18699: ecalli 9 // 'hash_keccak_256'\n 18701: a3 = u64 [s1 + 0xc8]\n 18705: t0 = 0x30e\n 18709: jump @1932\n      : @694 [@dyn 390] (gas: 2)\n 18713: a3 = u64 [s1 + 0xc8]\n 18717: t0 = 782, jump @1932\n      : @695 [@dyn 391] (gas: 7)\n 18724: a1 = u64 [s1 + 0x100]\n 18728: u64 [a1] = a4\n 18730: u64 [a1 + 0x8] = a5\n 18733: u64 [a1 + 0x10] = a2\n 18736: u64 [a1 + 0x18] = a0\n 18739: a0 = s1 + 0x2aa0\n 18743: ra = 784, jump @21\n      : @696 [@dyn 392] (gas: 2)\n 18749: a0 = 0x3000\n 18753: t0 = 786, jump @2011\n      : @697 [@dyn 393] (gas: 15)\n 18760: a0 = u64 [a4 + 0xc8]\n 18764: a1 = u64 [a4 + 0xd0]\n 18768: a2 = u64 [a4 + 0xe0]\n 18772: a3 = u64 [a4 + 0xd8]\n 18776: a0 = a0 & 0xffffffffffffff00\n 18780: a0 = a0 | 0x1\n 18783: a4 = s1 + 0x38d8\n 18787: a5 = a4 + 0x300\n 18791: u64 [a5 + 0x40] = a2\n 18794: u64 [a5 + 0x38] = a3\n 18797: u64 [a5 + 0x30] = a1\n 18800: u64 [a5 + 0x28] = a0\n 18803: a1 = s1 + 0x3c00\n 18807: a0 = u64 [s1 + 0x100]\n 18811: ra = 788, jump @23\n      : @698 [@dyn 394] (gas: 13)\n 18817: a0 = u64 [s1 + 0x138]\n 18821: a2 = s1 + 0x28d8\n 18825: a3 = a2 + 0x100\n 18829: u64 [a3 + 0xc0] = a0\n 18833: a0 = u64 [s1 + 0x140]\n 18837: u64 [a3 + 0xb8] = a0\n 18841: a0 = u64 [s1 + 0x148]\n 18845: u64 [a3 + 0xb0] = a0\n 18849: a1 = s1 + 0x2a80\n 18853: a0 = u64 [s1 + 0x150]\n 18857: u64 [a3 + 0xa8] = a0\n 18861: a0 = 0\n 18863: ra = 790, jump @19\n      : @699 [@dyn 395] (gas: 3)\n 18869: t0 = 0x318\n 18873: a1 = s1 + 0x28d8\n 18877: fallthrough\n      : @700 [@dyn 396] (gas: 8)\n 18878: u64 [a1 + 416] = 0\n 18882: u64 [a1 + 408] = 0\n 18886: u64 [a1 + 392] = 0xb\n 18891: a2 = a1\n 18893: a0 = 0x20\n 18896: a1 = s1 + 0x2a60\n 18900: u64 [a2 + 400] = 0\n 18904: ra = 794, jump @19\n      : @701 [@dyn 397] (gas: 7)\n 18910: a0 = sp + 0xffffffffffffffe0\n 18913: a0 = a0 & 0xffffffffffffffe0\n 18916: u64 [s1 + 0x100] = a0\n 18920: sp = a0\n 18922: a0 = u64 [s1 + 0x158]\n 18926: a0 = i32 [a0]\n 18928: jump @703 if a0 >=u 64\n      : @702 (gas: 3)\n 18932: a0 = u64 [s1 + 0x158]\n 18936: u32 [a0 + 0] = 0x40\n 18939: fallthrough\n      : @703 (gas: 4)\n 18940: a0 = sp + 0xffffffffffffffe0\n 18943: a0 = a0 & 0xffffffffffffffe0\n 18946: u64 [s1 + 0x158] = a0\n 18950: t0 = 796, jump @1967\n      : @704 [@dyn 398] (gas: 5)\n 18957: ra = 0x31e\n 18961: ecalli 9 // 'hash_keccak_256'\n 18963: a3 = u64 [s1 + 0x158]\n 18967: t0 = 0x320\n 18971: jump @1915\n      : @705 [@dyn 399] (gas: 2)\n 18975: a3 = u64 [s1 + 0x158]\n 18979: t0 = 800, jump @1915\n      : @706 [@dyn 400] (gas: 7)\n 18986: a1 = u64 [s1 + 0x100]\n 18990: u64 [a1] = a3\n 18992: u64 [a1 + 0x8] = a2\n 18995: u64 [a1 + 0x10] = a4\n 18998: u64 [a1 + 0x18] = a0\n 19001: a0 = s1 + 0x2a40\n 19005: ra = 802, jump @21\n      : @707 [@dyn 401] (gas: 14)\n 19011: a1 = s1 + 0x28d8\n 19015: a0 = u64 [a1 + 0x178]\n 19019: a1 = u64 [a1 + 0x180]\n 19023: a2 = u64 [s1 + 0xd0]\n 19027: a0 = a0 & a2\n 19030: a1 = a1 & 0xffffffffffffffff\n 19033: a2 = s1 + 0x38d8\n 19037: u64 [a2 + 848] = 0\n 19041: u64 [a2 + 840] = 0\n 19045: u64 [a2 + 0x360] = a1\n 19049: u64 [a2 + 0x358] = a0\n 19053: a1 = s1 + 0x3c20\n 19057: a0 = u64 [s1 + 0x100]\n 19061: ra = 804, jump @23\n      : @708 [@dyn 402] (gas: 8)\n 19067: a0 = s1 + 0x38d8\n 19071: u64 [a0 + 896] = 0\n 19075: u64 [a0 + 888] = 0\n 19079: u64 [a0 + 880] = 0\n 19083: u64 [a0 + 872] = 0x8\n 19088: a0 = s1 + 0x2a20\n 19092: a1 = s1 + 0x3c40\n 19096: ra = 806, jump @21\n      : @709 [@dyn 403] (gas: 13)\n 19102: a4 = s1 + 0x28d8\n 19106: a5 = a4 + 0x100\n 19110: a2 = u64 [a5 + 0x48]\n 19113: a0 = u64 [a5 + 0x50]\n 19116: a1 = u64 [a5 + 0x58]\n 19119: a3 = u64 [a5 + 0x60]\n 19122: u64 [a5 + 0x20] = a3\n 19125: u64 [a5 + 0x18] = a1\n 19128: u64 [a5 + 0x10] = a0\n 19131: a0 = s1 + 0x2a00\n 19135: a1 = s1 + 0x29e0\n 19139: u64 [a5 + 0x8] = a2\n 19142: ra = 808, jump @1715\n      : @710 [@dyn 404] (gas: 2)\n 19148: a0 = 0x3000\n 19152: t0 = 810, jump @2011\n      : @711 [@dyn 405] (gas: 17)\n 19159: a0 = u64 [a4 + 0x28]\n 19162: a1 = u64 [a4 + 0x30]\n 19165: a2 = u64 [a4 + 0x38]\n 19168: a3 = u64 [a4 + 0x40]\n 19171: a4 = s1 + 0x38d8\n 19175: u64 [a4 + 928] = 0\n 19179: u64 [a4 + 920] = 0\n 19183: u64 [a4 + 912] = 0\n 19187: u64 [a4 + 904] = 0x8\n 19192: a5 = a4 + 0x300\n 19196: u64 [a5 + 0xc0] = a3\n 19200: u64 [a5 + 0xb8] = a2\n 19204: u64 [a5 + 0xb0] = a1\n 19208: u64 [a5 + 0xa8] = a0\n 19212: a0 = s1 + 0x3c60\n 19216: a1 = s1 + 0x3c80\n 19220: ra = 812, jump @23\n      : @712 [@dyn 406] (gas: 6)\n 19226: a0 = u64 [s1 + 0xf0]\n 19230: ra = 0x32e\n 19234: ecalli 5 // 'caller'\n 19236: a2 = u64 [s1 + 0x128]\n 19240: t0 = 0x330\n 19244: jump @1943\n      : @713 [@dyn 407] (gas: 2)\n 19248: a2 = u64 [s1 + 0x128]\n 19252: t0 = 816, jump @1943\n      : @714 [@dyn 408] (gas: 9)\n 19259: u64 [s1 + 0x100] = a0\n 19263: a1 = a1 >> 0x20\n 19266: u64 [s1 + 0xd0] = a1\n 19270: a0 = u64 [s1 + 0xf0]\n 19274: ra = 0x332\n 19278: ecalli 0 // 'address'\n 19279: a2 = u64 [s1 + 0x128]\n 19283: t0 = 0x334\n 19287: jump @1947\n      : @715 [@dyn 409] (gas: 2)\n 19291: a2 = u64 [s1 + 0x128]\n 19295: t0 = 820, jump @1947\n      : @716 [@dyn 410] (gas: 24)\n 19302: a4 = s1 + 0x28d8\n 19306: a3 = u64 [s1 + 0xd0]\n 19310: u64 [a4 + 0xd8] = a3\n 19314: a3 = u64 [s1 + 0x100]\n 19318: u64 [a4 + 0xd0] = a3\n 19322: a3 = u64 [s1 + 0x158]\n 19326: u64 [a4 + 0xc8] = a3\n 19330: a3 = u64 [s1 + 0x138]\n 19334: u64 [a4 + 0xc0] = a3\n 19338: a3 = u64 [s1 + 0x140]\n 19342: u64 [a4 + 0xb8] = a3\n 19346: a3 = u64 [s1 + 0x148]\n 19350: u64 [a4 + 0xb0] = a3\n 19354: a3 = u64 [s1 + 0x150]\n 19358: u64 [a4 + 0xa8] = a3\n 19362: u64 [a4 + 224] = 0\n 19366: u64 [a4 + 0xf8] = a1\n 19370: u64 [a4 + 0xf0] = a2\n 19374: u64 [a4 + 0xe8] = a0\n 19378: a0 = s1 + 0x29c0\n 19382: a1 = s1 + 0x29a0\n 19386: a2 = s1 + 0x2980\n 19390: u64 [a4 + 256] = 0\n 19394: ra = 822, jump @1875\n      : @717 [@dyn 411] (gas: 8)\n 19400: a1 = s1 + 0x38d8\n 19404: u64 [a1 + 992] = 0\n 19408: u64 [a1 + 984] = 0\n 19412: u64 [a1 + 976] = 0\n 19416: u64 [a1 + 968] = 0xa\n 19421: a0 = s1 + 0x2960\n 19425: a1 = s1 + 0x3ca0\n 19429: ra = 824, jump @21\n      : @718 [@dyn 412] (gas: 15)\n 19435: a0 = s1 + 0x28d8\n 19439: a1 = u64 [a0 + 0x88]\n 19443: u64 [s1 + 0x158] = a1\n 19447: a1 = u64 [a0 + 0x98]\n 19451: u64 [s1 + 0x100] = a1\n 19455: a1 = u64 [a0 + 0x90]\n 19459: u64 [s1 + 0xd0] = a1\n 19463: a1 = s1 + 0x38d8\n 19467: u64 [a1 + 1024] = 0\n 19471: u64 [a1 + 1016] = 0\n 19475: u64 [a1 + 1008] = 0\n 19479: u64 [a1 + 1000] = 0x9\n 19484: a0 = s1 + 0x2940\n 19488: a1 = s1 + 0x3cc0\n 19492: ra = 826, jump @21\n      : @719 [@dyn 413] (gas: 54)\n 19498: a0 = s1 + 0x28d8\n 19502: t0 = u64 [a0 + 0x68]\n 19505: t1 = u64 [a0 + 0x70]\n 19508: a2 = u64 [a0 + 0x78]\n 19511: a1 = a0\n 19513: a0 = u64 [s1 + 0xd0]\n 19517: a3 = reverse a0\n 19519: a4 = a3 << 0x20\n 19522: a0 = u64 [s1 + 0x100]\n 19526: a5 = reverse a0\n 19528: a5 = a5 >> 0x20\n 19531: a4 = a4 | a5\n 19534: a3 = a3 >> 0x20\n 19537: a0 = u64 [s1 + 0x158]\n 19541: a0 = reverse a0\n 19543: a5 = a0 << 0x20\n 19546: a3 = a3 | a5\n 19549: a5 = u64 [a1 + 0x80]\n 19553: a0 = a0 >> 0x20\n 19556: a1 = u64 [s1 + 0x128]\n 19560: u32 [a1 + 0x10] = a0\n 19563: u64 [a1 + 0x8] = a3\n 19566: u64 [a1] = a4\n 19568: a0 = s1 + 0x38d8\n 19572: u64 [a0 + 0x420] = a5\n 19576: u64 [a0 + 0x418] = a2\n 19580: u64 [a0 + 0x410] = t1\n 19584: u64 [a0 + 0x408] = t0\n 19588: u32 [a0 + 1064] = 0\n 19592: u64 [a0 + 1120] = 0\n 19596: u64 [a0 + 1112] = 0\n 19600: u64 [a0 + 1104] = 0\n 19604: u64 [a0 + 1096] = 0\n 19608: a0 = a1 << 0x20\n 19611: t0 = a0 >> 0x20\n 19614: a0 = s1 + 0x3ce0\n 19618: a0 = a0 << 0x20\n 19621: a0 = a0 >> 0x20\n 19624: a1 = s1 + 0x3d20\n 19628: a1 = a1 << 0x20\n 19631: a3 = a1 | a0\n 19634: a0 = u64 [s1 + 0xf8]\n 19638: a0 = a0 << 0x20\n 19641: a4 = a0 >> 0x20\n 19644: a0 = s1 + 0x3d00\n 19648: a0 = a0 << 0x20\n 19651: a5 = a0 | a4\n 19654: a1 = 0xffffffffffffffff\n 19657: a2 = 0xffffffffffffffff\n 19660: u64 [s1 + 0x158] = t0\n 19664: a0 = t0\n 19666: u64 [s1 + 0x100] = a4\n 19670: ecalli 1 // 'call'\n 19672: fallthrough\n      : @720 (gas: 1)\n 19673: jump @722 if a0 == 0\n      : @721 (gas: 1)\n 19676: jump @1004\n      : @722 (gas: 66)\n 19679: a0 = s1 + 0x38d8\n 19683: u64 [a0 + 1184] = 0\n 19687: u64 [a0 + 1176] = 0\n 19691: u64 [a0 + 1168] = 0\n 19695: u64 [a0 + 1160] = 0\n 19699: a0 = s1 + 0x4000\n 19703: i32 a0 = a0 + 0xfffffffffffffd60\n 19707: ecalli 16 // 'value_transferred'\n 19709: a0 = s1 + 0x38d8\n 19713: u64 [a0 + 1216] = 0\n 19717: u64 [a0 + 1208] = 0\n 19721: u64 [a0 + 1200] = 0\n 19725: u64 [a0 + 1192] = 0\n 19729: a0 = s1 + 0x4000\n 19733: i32 a0 = a0 + 0xfffffffffffffd80\n 19737: ecalli 16 // 'value_transferred'\n 19739: a0 = u64 [s1 + 0xe0]\n 19743: a0 = reverse a0\n 19745: a1 = a0 << 0x20\n 19748: a2 = u64 [s1 + 0xd8]\n 19752: a2 = reverse a2\n 19754: a2 = a2 >> 0x20\n 19757: a1 = a1 | a2\n 19760: a2 = u64 [s1 + 0xe8]\n 19764: a2 = reverse a2\n 19766: a3 = a2 << 0x20\n 19769: a0 = a0 >> 0x20\n 19772: a0 = a0 | a3\n 19775: a5 = s1 + 0x38d8\n 19779: a3 = u64 [a5 + 0x4b0]\n 19783: a4 = u64 [s1 + 0x128]\n 19787: u64 [a4 + 0x8] = a0\n 19790: a0 = u64 [a5 + 0x4b8]\n 19794: u64 [a4] = a1\n 19796: a1 = u64 [a5 + 0x4c0]\n 19800: a2 = a2 >> 0x20\n 19803: u32 [a4 + 0x10] = a2\n 19806: a4 = a5 + 0x400\n 19810: a2 = u64 [a4 + 0xa8]\n 19814: u64 [a4 + 0xe0] = a1\n 19818: u64 [a4 + 0xd8] = a0\n 19822: u64 [a4 + 0xd0] = a3\n 19826: u64 [a4 + 0xc8] = a2\n 19830: u32 [a5 + 1256] = 0\n 19834: u64 [a5 + 1312] = 0\n 19838: u64 [a5 + 1304] = 0\n 19842: u64 [a5 + 1296] = 0\n 19846: u64 [a5 + 1288] = 0\n 19850: a0 = s1 + 0x3da0\n 19854: a0 = a0 << 0x20\n 19857: a0 = a0 >> 0x20\n 19860: a1 = s1 + 0x3de0\n 19864: a1 = a1 << 0x20\n 19867: a3 = a1 | a0\n 19870: a0 = s1 + 0x3dc0\n 19874: a0 = a0 << 0x20\n 19877: a4 = u64 [s1 + 0x100]\n 19881: a5 = a0 | a4\n 19884: a1 = 0xffffffffffffffff\n 19887: a2 = 0xffffffffffffffff\n 19890: a0 = u64 [s1 + 0x158]\n 19894: ecalli 1 // 'call'\n 19896: u64 [s1 + 0xc8] = a0\n 19900: a0 = s1 + 0x2900\n 19904: a1 = 0x40\n 19907: ra = 828, jump @17\n      : @723 [@dyn 414] (gas: 11)\n 19913: a0 = s1 + 0x28d8\n 19917: a1 = u64 [a0 + 0x40]\n 19920: u64 [s1 + 0xf8] = a1\n 19924: a1 = u64 [a0 + 0x38]\n 19927: u64 [s1 + 0x100] = a1\n 19931: a1 = u64 [a0 + 0x30]\n 19934: u64 [s1 + 0xd0] = a1\n 19938: a0 = u64 [a0 + 0x28]\n 19941: u64 [s1 + 0x158] = a0\n 19945: a0 = u64 [s1 + 0xc8]\n 19949: jump @725 if a0 == 0\n      : @724 (gas: 1)\n 19952: jump @1025\n      : @725 (gas: 12)\n 19955: a0 = u64 [s1 + 0x158]\n 19959: a2 = u64 [s1 + 0x100]\n 19963: a0 = a0 | a2\n 19966: a1 = u64 [s1 + 0xf8]\n 19970: a3 = u64 [s1 + 0xd0]\n 19974: a1 = a1 | a3\n 19977: a0 = a0 | a1\n 19980: a0 = a0 >> 0x20\n 19983: a1 = a1 | a2\n 19986: a1 = a1 << 0x20\n 19989: a0 = a0 | a1\n 19992: jump @727 if a0 == 0\n      : @726 (gas: 1)\n 19995: jump @500\n      : @727 (gas: 7)\n 19998: a0 = u64 [s1 + 0xd8]\n 20002: a0 = a0 << 0x20\n 20005: a0 = a0 >> 0x20\n 20008: u64 [s1 + 0x100] = a0\n 20012: t0 = 0x33e\n 20016: a2 = s1 + 0x28d8\n 20020: fallthrough\n      : @728 [@dyn 415] (gas: 11)\n 20021: a0 = u64 [s1 + 0x108]\n 20025: u64 [a2 + 0x8] = a0\n 20028: a0 = u64 [s1 + 0x110]\n 20032: u64 [a2 + 0x10] = a0\n 20035: a0 = u64 [s1 + 0x118]\n 20039: u64 [a2 + 0x18] = a0\n 20042: a1 = s1 + 0x28e0\n 20046: a0 = u64 [s1 + 0x120]\n 20050: u64 [a2 + 0x20] = a0\n 20053: a0 = u64 [s1 + 0x158]\n 20057: ra = 832, jump @19\n      : @729 [@dyn 416] (gas: 6)\n 20063: a0 = u64 [s1 + 0xf0]\n 20067: ra = 0x342\n 20071: ecalli 5 // 'caller'\n 20073: a2 = u64 [s1 + 0x128]\n 20077: t0 = 0x344\n 20081: jump @2003\n      : @730 [@dyn 417] (gas: 2)\n 20085: a2 = u64 [s1 + 0x128]\n 20089: t0 = 836, jump @2003\n      : @731 [@dyn 418] (gas: 43)\n 20096: t0 = a1 | a0\n 20099: a3 = a3 >> 0x20\n 20102: a2 = reverse a2\n 20104: a1 = a2 << 0x20\n 20107: t2 = a1 | a3\n 20110: a2 = a2 >> 0x20\n 20113: t1 = s1 + 0x20d8\n 20117: a0 = u64 [s1 + 0x100]\n 20121: u64 [t1 + 0x798] = a0\n 20125: a0 = u64 [s1 + 0xe0]\n 20129: u64 [t1 + 0x790] = a0\n 20133: a0 = u64 [s1 + 0xe8]\n 20137: u64 [t1 + 0x788] = a0\n 20141: u64 [t1 + 1952] = 0\n 20145: u64 [t1 + 1984] = 0\n 20149: a0 = u64 [s1 + 0x138]\n 20153: u64 [t1 + 0x7e0] = a0\n 20157: a0 = u64 [s1 + 0x140]\n 20161: u64 [t1 + 0x7d8] = a0\n 20165: a0 = u64 [s1 + 0x148]\n 20169: u64 [t1 + 0x7d0] = a0\n 20173: a0 = u64 [s1 + 0x150]\n 20177: u64 [t1 + 0x7c8] = a0\n 20181: a3 = u64 [0x20098]\n 20186: a4 = u64 [0x200a0]\n 20191: a5 = u64 [0x200a8]\n 20196: a0 = u64 [0x200b0]\n 20201: a1 = s1 + 0x28d8\n 20205: u64 [a1] = a3\n 20207: a3 = a1 + 0xffffffffffffff00\n 20211: u64 [a3 + 0xf8] = a4\n 20215: u64 [a3 + 0xf0] = a5\n 20219: u64 [a3 + 0xe8] = a0\n 20223: u64 [t1 + 0x7b8] = a2\n 20227: u64 [t1 + 0x7b0] = t2\n 20231: a1 = 0x20\n 20234: a2 = s1 + 0x28c0\n 20238: a3 = s1 + 0x28a0\n 20242: a4 = s1 + 0x2880\n 20246: a5 = s1 + 0x2860\n 20250: u64 [t1 + 0x7a8] = t0\n 20254: a0 = u64 [s1 + 0x158]\n 20258: ra = 838, jump @31\n      : @732 [@dyn 419] (gas: 5)\n 20264: a0 = 0\n 20266: a1 = u64 [s1 + 0x130]\n 20270: a2 = 0\n 20272: ecalli 13 // 'seal_return'\n 20274: jump @1373\n      : @733 (gas: 3)\n 20277: a0 = u64 [s1 + 0x158]\n 20281: a0 = i32 [a0]\n 20283: jump @735 if a0 >u 67\n      : @734 (gas: 1)\n 20287: jump @1249\n      : @735 (gas: 25)\n 20290: a0 = s1 + 0x4000\n 20294: i32 a0 = a0 + 0xfffffffffffffe20\n 20298: a1 = 0x4\n 20301: ecalli 3 // 'call_data_load'\n 20303: a1 = s1 + 0x38d8\n 20307: a2 = a1 + 0x500\n 20311: a0 = u64 [a2 + 0x60]\n 20314: u64 [s1 + 0x140] = a0\n 20318: a0 = u64 [a2 + 0x58]\n 20321: u64 [s1 + 0x148] = a0\n 20325: a0 = u64 [a2 + 0x50]\n 20328: u64 [s1 + 0x150] = a0\n 20332: a0 = u64 [a2 + 0x48]\n 20335: u64 [s1 + 0x158] = a0\n 20339: a0 = sp + 0xffffffffffffffe0\n 20342: a0 = a0 & 0xffffffffffffffe0\n 20345: u64 [s1 + 0x130] = a0\n 20349: sp = a0\n 20351: a0 = s1 + 0x4000\n 20355: i32 a0 = a0 + 0xfffffffffffffe40\n 20359: a1 = 0x24\n 20362: ecalli 3 // 'call_data_load'\n 20364: t0 = 0x348\n 20368: a1 = s1 + 0x38d8\n 20372: fallthrough\n      : @736 [@dyn 420] (gas: 27)\n 20373: a4 = a1 + 0x500\n 20377: a2 = u64 [a4 + 0x80]\n 20381: a0 = u64 [a4 + 0x78]\n 20384: a3 = u64 [a4 + 0x70]\n 20387: a1 = u64 [a4 + 0x68]\n 20390: u64 [s1 + 0xf8] = a2\n 20394: a4 = u64 [s1 + 0x130]\n 20398: u64 [a4 + 0x18] = a2\n 20401: u64 [s1 + 0x108] = a0\n 20405: u64 [a4 + 0x10] = a0\n 20408: u64 [s1 + 0xf0] = a3\n 20412: u64 [a4 + 0x8] = a3\n 20415: u64 [s1 + 0x100] = a1\n 20419: u64 [a4] = a1\n 20421: a0 = s1 + 0x30d8\n 20425: a1 = u64 [s1 + 0x140]\n 20429: u64 [a0] = a1\n 20431: a1 = u64 [s1 + 0x148]\n 20435: a3 = a0 + 0xffffffffffffff00\n 20439: u64 [a3 + 0xf8] = a1\n 20443: a1 = u64 [s1 + 0x150]\n 20447: u64 [a3 + 0xf0] = a1\n 20451: a1 = s1 + 0x30c0\n 20455: a2 = u64 [s1 + 0x158]\n 20459: u64 [a3 + 0xe8] = a2\n 20463: a0 = 0\n 20465: ra = 842, jump @19\n      : @737 [@dyn 421] (gas: 3)\n 20471: t0 = 0x34c\n 20475: a2 = s1 + 0x28d8\n 20479: fallthrough\n      : @738 [@dyn 422] (gas: 7)\n 20480: u64 [a2 + 2016] = 0\n 20484: u64 [a2 + 2008] = 0\n 20488: u64 [a2 + 1992] = 0xb\n 20493: a0 = 0x20\n 20496: a1 = s1 + 0x30a0\n 20500: u64 [a2 + 2000] = 0\n 20504: ra = 846, jump @19\n      : @739 [@dyn 423] (gas: 4)\n 20510: a0 = 0x2020c\n 20515: u64 [s1 + 0x110] = a0\n 20519: a0 = i32 [0x2020c]\n 20524: jump @741 if a0 >u 63\n      : @740 (gas: 3)\n 20528: a1 = u64 [s1 + 0x110]\n 20532: u32 [a1 + 0] = 0x40\n 20535: fallthrough\n      : @741 (gas: 14)\n 20536: a0 = sp + 0xffffffffffffffe0\n 20539: a2 = a0 & 0xffffffffffffffe0\n 20542: u64 [s1 + 0x138] = a2\n 20546: sp = a2\n 20548: a0 = 0x20220\n 20553: i32 a0 = a0 + 0\n 20555: i32 a2 = a2 + 0\n 20557: a1 = 0x40\n 20560: u64 [s1 + 0xe8] = a0\n 20564: ra = 0x350\n 20568: ecalli 9 // 'hash_keccak_256'\n 20570: a3 = u64 [s1 + 0x138]\n 20574: t0 = 0x352\n 20578: jump @1912\n      : @742 [@dyn 424] (gas: 2)\n 20581: a3 = u64 [s1 + 0x138]\n 20585: t0 = 850, jump @1912\n      : @743 [@dyn 425] (gas: 9)\n 20591: a1 = s1 + 0x38d8\n 20595: a3 = a1 + 0x500\n 20599: u64 [a3 + 0x88] = a4\n 20603: u64 [a3 + 0x90] = a5\n 20607: u64 [a3 + 0x98] = a2\n 20611: u64 [a3 + 0xa0] = a0\n 20615: a0 = s1 + 0x3080\n 20619: a1 = s1 + 0x3e60\n 20623: ra = 852, jump @21\n      : @744 [@dyn 426] (gas: 14)\n 20629: a0 = s1 + 0x28d8\n 20633: a1 = u64 [a0 + 0x7b0]\n 20637: u64 [s1 + 0x128] = a1\n 20641: a1 = u64 [a0 + 0x7a8]\n 20645: u64 [s1 + 0x120] = a1\n 20649: a0 = u32 [a0 + 0x7b8]\n 20653: u64 [s1 + 0x118] = a0\n 20657: a0 = 0x30220\n 20662: u64 [s1 + 0x138] = a0\n 20666: i32 a0 = a0 + 0\n 20668: u64 [s1 + 0xe0] = a0\n 20672: ra = 0x356\n 20676: ecalli 5 // 'caller'\n 20678: fallthrough\n      : @745 [@dyn 427] (gas: 3)\n 20679: a5 = s1 + 0x100\n 20683: a2 = u64 [a5 + 0x38]\n 20686: t0 = 856, jump @1913\n      : @746 [@dyn 428] (gas: 9)\n 20692: a2 = u64 [a5 + 0x18]\n 20695: a1 = a1 ^ a2\n 20698: a2 = u64 [a5 + 0x20]\n 20701: a0 = a0 ^ a2\n 20704: a0 = a0 | a1\n 20707: a1 = u64 [a5 + 0x28]\n 20710: a1 = a1 ^ a3\n 20713: a0 = a0 | a1\n 20716: jump @748 if a0 == 0\n      : @747 (gas: 1)\n 20719: jump @959\n      : @748 (gas: 9)\n 20722: a0 = s1 + 0x38d8\n 20726: u64 [a0 + 1472] = 0\n 20730: u64 [a0 + 1464] = 0\n 20734: u64 [a0 + 1456] = 0\n 20738: u64 [a0 + 1448] = 0\n 20742: a0 = s1 + 0x4000\n 20746: i32 a0 = a0 + 0xfffffffffffffe80\n 20750: ecalli 16 // 'value_transferred'\n 20752: fallthrough\n      : @749 (gas: 18)\n 20753: a3 = s1 + 0x38d8\n 20757: a4 = a3 + 0x500\n 20761: a0 = u64 [a4 + 0xc0]\n 20765: a1 = u64 [a4 + 0xb0]\n 20769: a2 = u64 [a4 + 0xa8]\n 20773: a3 = u64 [a4 + 0xb8]\n 20777: a4 = u64 [s1 + 0xf8]\n 20781: a0 = a0 ^ a4\n 20784: a4 = u64 [s1 + 0xf0]\n 20788: a1 = a1 ^ a4\n 20791: a0 = a0 | a1\n 20794: a1 = u64 [s1 + 0x108]\n 20798: a1 = a1 ^ a3\n 20801: a3 = u64 [s1 + 0x100]\n 20805: a2 = a2 ^ a3\n 20808: a1 = a1 | a2\n 20811: a0 = a0 | a1\n 20814: jump @751 if a0 != 0\n      : @750 (gas: 1)\n 20817: jump @1250\n      : @751 (gas: 3)\n 20820: a0 = s1 + 0x2fa0\n 20824: a1 = 0x40\n 20827: ra = 858, jump @17\n      : @752 [@dyn 429] (gas: 7)\n 20833: a0 = s1 + 0x28d8\n 20837: a5 = a0 + 0x600\n 20841: a3 = u64 [a5 + 0xe0]\n 20845: a4 = u64 [a5 + 0xd8]\n 20849: a2 = u64 [a5 + 0xd0]\n 20853: a1 = u64 [a5 + 0xc8]\n 20857: t0 = 860, jump @1916\n      : @753 [@dyn 430] (gas: 1)\n 20863: jump @755 if a0 == 0\n      : @754 (gas: 1)\n 20866: jump @500\n      : @755 (gas: 3)\n 20869: t0 = 0x35e\n 20873: a2 = s1 + 0x28d8\n 20877: fallthrough\n      : @756 [@dyn 431] (gas: 8)\n 20878: u64 [a2 + 1720] = 0\n 20882: u64 [a2 + 1712] = 0\n 20886: u64 [a2 + 1704] = 0\n 20890: a0 = 0x8c379a000000000\n 20900: a1 = s1 + 0x2f80\n 20904: u64 [a2 + 0x6c0] = a0\n 20908: a0 = u64 [s1 + 0x158]\n 20912: ra = 864, jump @19\n      : @757 [@dyn 432] (gas: 1)\n 20918: t0 = 866, jump @1910\n      : @758 [@dyn 433] (gas: 1)\n 20924: jump @760 if a0 != 0\n      : @759 (gas: 1)\n 20927: jump @500\n      : @760 (gas: 1)\n 20930: t0 = 868, jump @1987\n      : @761 [@dyn 434] (gas: 6)\n 20937: u64 [a2 + 1696] = 0\n 20941: u64 [a2 + 1688] = 0\n 20945: u64 [a2 + 1672] = 0x20\n 20950: a1 = s1 + 0x2f60\n 20954: u64 [a2 + 1680] = 0\n 20958: ra = 870, jump @19\n      : @762 [@dyn 435] (gas: 4)\n 20964: a2 = s1 + 0x100\n 20968: a0 = u64 [a2 + 0x40]\n 20971: a0 = a0 + 0xffffffffffffffdc\n 20974: t0 = 872, jump @1909\n      : @763 [@dyn 436] (gas: 1)\n 20980: jump @765 if a0 != 0\n      : @764 (gas: 1)\n 20983: jump @500\n      : @765 (gas: 1)\n 20986: t0 = 874, jump @1977\n      : @766 [@dyn 437] (gas: 6)\n 20993: u64 [a2 + 1664] = 0\n 20997: u64 [a2 + 1656] = 0\n 21001: u64 [a2 + 1640] = 0x23\n 21006: a1 = s1 + 0x2f40\n 21010: u64 [a2 + 1648] = 0\n 21014: ra = 876, jump @19\n      : @767 [@dyn 438] (gas: 5)\n 21020: a0 = 0x100000000\n 21030: a2 = s1 + 0x100\n 21034: u64 [a2 + 0x40] = a0\n 21037: a0 = 0xffffffbc\n 21047: t0 = 878, jump @1909\n      : @768 [@dyn 439] (gas: 1)\n 21053: jump @770 if a0 != 0\n      : @769 (gas: 1)\n 21056: jump @500\n      : @770 (gas: 14)\n 21059: a0 = u64 [s1 + 0x158]\n 21063: i32 a0 = a0 + 0x44\n 21066: a1 = u64 [0x20038]\n 21071: a4 = s1 + 0x28d8\n 21075: a5 = a4 + 0x600\n 21079: u64 [a5 + 0x60] = a1\n 21082: a1 = u64 [0x20040]\n 21087: a2 = u64 [0x20048]\n 21092: a3 = u64 [0x20050]\n 21097: u64 [a5 + 0x58] = a1\n 21100: u64 [a5 + 0x50] = a2\n 21103: a1 = s1 + 0x2f20\n 21107: u64 [a5 + 0x48] = a3\n 21110: ra = 880, jump @19\n      : @771 [@dyn 440] (gas: 4)\n 21116: a2 = s1 + 0x100\n 21120: a0 = u64 [a2 + 0x40]\n 21123: a0 = a0 + 0xffffffffffffff9c\n 21126: t0 = 882, jump @1909\n      : @772 [@dyn 441] (gas: 1)\n 21132: jump @774 if a0 != 0\n      : @773 (gas: 1)\n 21135: jump @500\n      : @774 (gas: 11)\n 21138: a0 = u64 [s1 + 0x158]\n 21142: i32 a0 = a0 + 0x64\n 21145: a2 = s1 + 0x28d8\n 21149: u64 [a2 + 1592] = 0\n 21153: u64 [a2 + 1584] = 0\n 21157: a1 = 0x6c75650000000000\n 21167: u64 [a2 + 0x640] = a1\n 21171: a1 = s1 + 0x2f00\n 21175: u64 [a2 + 1576] = 0\n 21179: ra = 0x542\n 21183: jump @19\n      : @775 (gas: 10)\n 21186: a0 = s1 + 0x38d8\n 21190: u64 [a0 + 1728] = 0\n 21194: u64 [a0 + 1720] = 0\n 21198: u64 [a0 + 1712] = 0\n 21202: u64 [a0 + 1704] = 0\n 21206: a0 = s1 + 0x4000\n 21210: i32 a0 = a0 + 0xffffffffffffff80\n 21213: ra = 0x374\n 21217: ecalli 16 // 'value_transferred'\n 21219: fallthrough\n      : @776 [@dyn 442] (gas: 3)\n 21220: a3 = s1 + 0x38d8\n 21224: a4 = a3 + 0x600\n 21228: t0 = 886, jump @2005\n      : @777 [@dyn 443] (gas: 1)\n 21235: jump @779 if a0 == 0\n      : @778 (gas: 1)\n 21238: jump @1303\n      : @779 (gas: 4)\n 21241: a0 = u64 [s1 + 0x158]\n 21245: a0 = i32 [a0]\n 21247: a1 = 0x43\n 21250: jump @781 if a1 <u a0\n      : @780 (gas: 1)\n 21253: jump @1304\n      : @781 (gas: 6)\n 21256: a0 = 0xffffffff\n 21266: u64 [s1 + 0x150] = a0\n 21270: a0 = s1 + 0x31e0\n 21274: ra = 0x378\n 21278: t0 = 0x62e\n 21282: jump @2009\n      : @782 [@dyn 444] (gas: 11)\n 21286: a1 = s1 + 0x30d8\n 21290: a0 = u64 [a1 + 0x108]\n 21294: u64 [s1 + 0x158] = a0\n 21298: a0 = u64 [a1 + 0x110]\n 21302: u64 [s1 + 0x130] = a0\n 21306: a0 = u32 [a1 + 0x118]\n 21310: u64 [s1 + 0x128] = a0\n 21314: a0 = s1 + 0x31c0\n 21318: ra = 0x37a\n 21322: t0 = 0x638\n 21326: jump @2009\n      : @783 [@dyn 445] (gas: 18)\n 21330: a1 = s1 + 0x30d8\n 21334: a0 = u64 [a1 + 0xf8]\n 21338: u64 [s1 + 0x148] = a0\n 21342: a0 = u64 [a1 + 0xf0]\n 21346: u64 [s1 + 0x140] = a0\n 21350: a0 = u64 [a1 + 0xe8]\n 21354: u64 [s1 + 0x138] = a0\n 21358: u64 [a1 + 224] = 0\n 21362: a0 = u64 [s1 + 0x128]\n 21366: u64 [a1 + 0xd8] = a0\n 21370: a0 = u64 [s1 + 0x130]\n 21374: u64 [a1 + 0xd0] = a0\n 21378: a2 = a1\n 21380: a1 = s1 + 0x31a0\n 21384: a0 = u64 [s1 + 0x158]\n 21388: u64 [a2 + 0xc8] = a0\n 21392: a0 = 0\n 21394: ra = 892, jump @19\n      : @784 [@dyn 446] (gas: 9)\n 21400: a1 = s1 + 0x30d8\n 21404: u64 [a1 + 192] = 0\n 21408: u64 [a1 + 184] = 0\n 21412: u64 [a1 + 168] = 0x5\n 21417: a2 = a1\n 21419: a0 = 0x20\n 21422: a1 = s1 + 0x3180\n 21426: u64 [a2 + 176] = 0\n 21430: ra = 894, jump @19\n      : @785 [@dyn 447] (gas: 4)\n 21436: a0 = 0x2020c\n 21441: u64 [s1 + 0x158] = a0\n 21445: a0 = i32 [0x2020c]\n 21450: jump @787 if a0 >u 63\n      : @786 (gas: 3)\n 21454: a1 = u64 [s1 + 0x158]\n 21458: u32 [a1 + 0] = 0x40\n 21461: fallthrough\n      : @787 (gas: 14)\n 21462: a0 = sp + 0xffffffffffffffe0\n 21465: a2 = a0 & 0xffffffffffffffe0\n 21468: u64 [s1 + 0x128] = a2\n 21472: sp = a2\n 21474: a0 = 0x20220\n 21479: i32 a0 = a0 + 0\n 21481: i32 a2 = a2 + 0\n 21483: a1 = 0x40\n 21486: u64 [s1 + 0x130] = a0\n 21490: ra = 0x380\n 21494: ecalli 9 // 'hash_keccak_256'\n 21496: a3 = u64 [s1 + 0x128]\n 21500: t0 = 0x382\n 21504: jump @2019\n      : @788 [@dyn 448] (gas: 2)\n 21508: a3 = u64 [s1 + 0x128]\n 21512: t0 = 898, jump @2019\n      : @789 [@dyn 449] (gas: 26)\n 21519: u64 [s1 + 0x120] = a0\n 21523: a0 = reverse a1\n 21525: u64 [s1 + 0x118] = a0\n 21529: a0 = reverse a2\n 21531: u64 [s1 + 0x110] = a0\n 21535: a0 = reverse a3\n 21537: u64 [s1 + 0x108] = a0\n 21541: a0 = sp + 0xffffffffffffffe0\n 21544: a0 = a0 & 0xffffffffffffffe0\n 21547: u64 [s1 + 0x128] = a0\n 21551: sp = a0\n 21553: a0 = u64 [s1 + 0x138]\n 21557: a0 = a0 & 0xffffffffffffffff\n 21560: a2 = u64 [s1 + 0x140]\n 21564: a1 = a2 & 0xffffffffffffffff\n 21567: a2 = u64 [s1 + 0x150]\n 21571: a3 = u64 [s1 + 0x148]\n 21575: a2 = a2 & a3\n 21578: a3 = s1 + 0x30d8\n 21582: u64 [a3 + 160] = 0\n 21586: u64 [a3 + 0x98] = a2\n 21590: u64 [a3 + 0x90] = a1\n 21594: a1 = s1 + 0x3160\n 21598: u64 [a3 + 0x88] = a0\n 21602: a0 = 0\n 21604: ra = 900, jump @19\n      : @790 [@dyn 450] (gas: 13)\n 21610: a0 = u64 [s1 + 0x108]\n 21614: a1 = s1 + 0x30d8\n 21618: u64 [a1 + 0x80] = a0\n 21622: a0 = u64 [s1 + 0x110]\n 21626: u64 [a1 + 0x78] = a0\n 21629: a0 = u64 [s1 + 0x118]\n 21633: u64 [a1 + 0x70] = a0\n 21636: a3 = a1\n 21638: a0 = 0x20\n 21641: a1 = s1 + 0x3140\n 21645: a2 = u64 [s1 + 0x120]\n 21649: u64 [a3 + 0x68] = a2\n 21652: ra = 902, jump @19\n      : @791 [@dyn 451] (gas: 3)\n 21658: a0 = u64 [s1 + 0x158]\n 21662: a0 = i32 [a0]\n 21664: jump @793 if a0 >u 63\n      : @792 (gas: 3)\n 21668: a0 = u64 [s1 + 0x158]\n 21672: u32 [a0 + 0] = 0x40\n 21675: fallthrough\n      : @793 (gas: 4)\n 21676: a0 = sp + 0xffffffffffffffe0\n 21679: a0 = a0 & 0xffffffffffffffe0\n 21682: u64 [s1 + 0x158] = a0\n 21686: t0 = 904, jump @1967\n      : @794 [@dyn 452] (gas: 5)\n 21693: ra = 0x38a\n 21697: ecalli 9 // 'hash_keccak_256'\n 21699: a3 = u64 [s1 + 0x158]\n 21703: t0 = 0x38c\n 21707: jump @1921\n      : @795 [@dyn 453] (gas: 2)\n 21710: a3 = u64 [s1 + 0x158]\n 21714: t0 = 908, jump @1921\n      : @796 [@dyn 454] (gas: 7)\n 21720: a1 = u64 [s1 + 0x128]\n 21724: u64 [a1 + 0x18] = a3\n 21727: u64 [a1 + 0x10] = a2\n 21730: u64 [a1 + 0x8] = a4\n 21733: u64 [a1] = a0\n 21735: a0 = s1 + 0x3120\n 21739: ra = 910, jump @21\n      : @797 [@dyn 455] (gas: 6)\n 21745: a0 = s1 + 0x30d8\n 21749: a0 = u64 [a0 + 0x48]\n 21752: u64 [s1 + 0x158] = a0\n 21756: a0 = s1 + 0x3100\n 21760: a1 = 0x40\n 21763: ra = 912, jump @17\n      : @798 [@dyn 456] (gas: 6)\n 21769: a3 = s1 + 0x30d8\n 21773: a0 = u64 [a3 + 0x40]\n 21776: a1 = u64 [a3 + 0x38]\n 21779: a2 = u64 [a3 + 0x30]\n 21782: a4 = u64 [a3 + 0x28]\n 21785: t0 = 914, jump @1927\n      : @799 [@dyn 457] (gas: 1)\n 21791: jump @801 if a0 == 0\n      : @800 (gas: 1)\n 21794: jump @500\n      : @801 (gas: 13)\n 21797: a3 = a4\n 21799: a0 = u8 [s1 + 0x158]\n 21803: a0 = a0 >u 0\n 21805: a2 = s1 + 0x30d8\n 21809: a5 = 0\n 21811: u64 [a2 + 32] = 0\n 21814: u64 [a2 + 24] = 0\n 21817: u64 [a2 + 0x8] = a0\n 21820: a1 = s1 + 0x30e0\n 21824: u64 [a2 + 16] = 0\n 21827: a0 = a4\n 21829: u64 [s1 + 0x150] = a3\n 21833: ra = 916, jump @19\n      : @802 [@dyn 458] (gas: 4)\n 21839: a1 = 0x20\n 21842: a0 = u64 [s1 + 0x150]\n 21846: ra = 0x530\n 21850: jump @34\n      : @803 (gas: 11)\n 21853: a0 = s1 + 0x30d8\n 21857: u64 [a0 + 448] = 0\n 21861: u64 [a0 + 440] = 0\n 21865: u64 [a0 + 432] = 0\n 21869: u64 [a0 + 424] = 0\n 21873: a0 = s1 + 0x3000\n 21877: i32 a0 = a0 + 0x280\n 21881: ra = 0x396\n 21885: ecalli 16 // 'value_transferred'\n 21887: t0 = 0x398\n 21891: jump @2017\n      : @804 [@dyn 459] (gas: 1)\n 21895: t0 = 920, jump @2017\n      : @805 [@dyn 460] (gas: 1)\n 21902: t0 = 922, jump @2005\n      : @806 [@dyn 461] (gas: 1)\n 21909: jump @808 if a0 == 0\n      : @807 (gas: 1)\n 21912: jump @1305\n      : @808 (gas: 3)\n 21915: a0 = u64 [s1 + 0x158]\n 21919: a0 = i32 [a0]\n 21921: jump @810 if a0 >u 3\n      : @809 (gas: 1)\n 21925: jump @1306\n      : @810 (gas: 3)\n 21928: a0 = s1 + 0x360\n 21932: a1 = 0x40\n 21935: ra = 924, jump @17\n      : @811 [@dyn 462] (gas: 16)\n 21941: a0 = u64 [s1 + 0x378]\n 21945: u64 [s1 + 0xb8] = a0\n 21949: a0 = u64 [s1 + 0x370]\n 21953: u64 [s1 + 0xc0] = a0\n 21957: a0 = u64 [s1 + 0x368]\n 21961: u64 [s1 + 0xc8] = a0\n 21965: a0 = u64 [s1 + 0x360]\n 21969: u64 [s1 + 0xd0] = a0\n 21973: a0 = s1 + 0x30d8\n 21977: u64 [a0 + 480] = 0\n 21981: u64 [a0 + 472] = 0\n 21985: u64 [a0 + 464] = 0\n 21989: u64 [a0 + 456] = 0\n 21993: a0 = s1 + 0x340\n 21997: a1 = s1 + 0x32a0\n 22001: ra = 926, jump @21\n      : @812 [@dyn 463] (gas: 17)\n 22007: a4 = s1 + 0x300\n 22011: a0 = u64 [a4 + 0x58]\n 22014: a1 = u64 [a4 + 0x50]\n 22017: a2 = u64 [a4 + 0x48]\n 22020: a3 = u64 [a4 + 0x40]\n 22023: a5 = s1 + 0x100\n 22027: u64 [a5 + 0x50] = a0\n 22030: u64 [a4 + 0x18] = a0\n 22033: u64 [a5 + 0x48] = a1\n 22036: u64 [a4 + 0x10] = a1\n 22039: u64 [a5 + 0x40] = a2\n 22042: u64 [a4 + 0x8] = a2\n 22045: a0 = s1 + 0x320\n 22049: a1 = s1 + 0x300\n 22053: u64 [a5 + 0x58] = a3\n 22056: u64 [a4] = a3\n 22058: ra = 928, jump @1557\n      : @813 [@dyn 464] (gas: 1)\n 22064: t0 = 930, jump @1994\n      : @814 [@dyn 465] (gas: 1)\n 22071: jump @816 if a0 == 0\n      : @815 (gas: 1)\n 22074: jump @500\n      : @816 (gas: 17)\n 22077: a4 = s1 + 0x300\n 22081: a0 = u64 [a4 + 0x38]\n 22084: a2 = u64 [a4 + 0x30]\n 22087: a1 = u64 [a4 + 0x28]\n 22090: a3 = u64 [a4 + 0x20]\n 22093: u64 [s1 + 0xf8] = a3\n 22097: a4 = s1 + 0x200\n 22101: u64 [a4 + 0xe0] = a3\n 22105: u64 [s1 + 0x108] = a1\n 22109: u64 [a4 + 0xe8] = a1\n 22113: u64 [s1 + 0x100] = a2\n 22117: u64 [a4 + 0xf0] = a2\n 22121: a1 = s1 + 0x2e0\n 22125: u64 [s1 + 0x110] = a0\n 22129: u64 [a4 + 0xf8] = a0\n 22133: a0 = u64 [s1 + 0xd0]\n 22137: ra = 932, jump @19\n      : @817 [@dyn 466] (gas: 3)\n 22143: a0 = u64 [s1 + 0x158]\n 22147: a0 = a0 & 0x1\n 22150: jump @819 if a0 == 0\n      : @818 (gas: 1)\n 22153: jump @1012\n      : @819 (gas: 1)\n 22156: t0 = 934, jump @1978\n      : @820 [@dyn 467] (gas: 1)\n 22163: jump @822 if a1 != 0\n      : @821 (gas: 1)\n 22166: jump @500\n      : @822 (gas: 14)\n 22169: a0 = u64 [s1 + 0x158]\n 22173: a1 = a0 & 0xffffffffffffff00\n 22177: a0 = u64 [s1 + 0xd0]\n 22181: i32 a0 = a0 + 0x20\n 22184: a2 = u64 [s1 + 0x140]\n 22188: a3 = s1 + 0x200\n 22192: u64 [a3 + 0x68] = a2\n 22195: u64 [a3 + 0x60] = a1\n 22198: a1 = u64 [s1 + 0x148]\n 22202: u64 [a3 + 0x70] = a1\n 22205: a1 = s1 + 0x260\n 22209: a2 = u64 [s1 + 0x150]\n 22213: u64 [a3 + 0x78] = a2\n 22216: ra = 936, jump @19\n      : @823 [@dyn 468] (gas: 1)\n 22222: t0 = 938, jump @1965\n      : @824 [@dyn 469] (gas: 1)\n 22229: jump @1051\n      : @825 (gas: 11)\n 22232: a0 = s1 + 0x30d8\n 22236: u64 [a0 + 512] = 0\n 22240: u64 [a0 + 504] = 0\n 22244: u64 [a0 + 496] = 0\n 22248: u64 [a0 + 488] = 0\n 22252: a0 = s1 + 0x3000\n 22256: i32 a0 = a0 + 0x2c0\n 22260: ra = 0x3ac\n 22264: ecalli 16 // 'value_transferred'\n 22266: t0 = 0x3ae\n 22270: jump @2017\n      : @826 [@dyn 470] (gas: 1)\n 22274: t0 = 942, jump @2017\n      : @827 [@dyn 471] (gas: 8)\n 22281: a0 = u64 [a4 + 0xf8]\n 22285: a1 = u64 [a3 + 0x200]\n 22289: a2 = u64 [a4 + 0xf0]\n 22293: a3 = u64 [a4 + 0xe8]\n 22297: a1 = a1 | a2\n 22300: a0 = a0 | a3\n 22303: a0 = a0 | a1\n 22306: jump @829 if a0 == 0\n      : @828 (gas: 1)\n 22309: jump @1307\n      : @829 (gas: 1)\n 22312: t0 = 944, jump @2014\n      : @830 [@dyn 472] (gas: 1)\n 22319: jump @832 if a1 <u a0\n      : @831 (gas: 1)\n 22322: jump @1308\n      : @832 (gas: 21)\n 22325: a0 = s1 + 0x3000\n 22329: i32 a0 = a0 + 0x2e0\n 22333: a1 = 0x4\n 22336: ecalli 3 // 'call_data_load'\n 22338: a0 = s1 + 0x30d8\n 22342: a4 = a0 + 0x200\n 22346: a2 = u64 [a4 + 0x8]\n 22349: u64 [s1 + 0x158] = a2\n 22353: a1 = u64 [a4 + 0x10]\n 22356: u64 [s1 + 0x150] = a1\n 22360: a3 = u64 [a4 + 0x18]\n 22363: u64 [s1 + 0x148] = a3\n 22367: a0 = u64 [a4 + 0x20]\n 22370: u64 [s1 + 0x140] = a0\n 22374: u64 [s1 + 0x438] = a0\n 22378: u64 [s1 + 0x430] = a3\n 22382: u64 [s1 + 0x428] = a1\n 22386: a0 = s1 + 0x440\n 22390: a1 = s1 + 0x420\n 22394: u64 [s1 + 0x420] = a2\n 22398: ra = 946, jump @1823\n      : @833 [@dyn 473] (gas: 13)\n 22404: a2 = s1 + 0x100\n 22408: a0 = u64 [a2 + 0x40]\n 22411: a3 = s1 + 0x400\n 22415: u64 [a3 + 0x18] = a0\n 22418: a0 = u64 [a2 + 0x48]\n 22421: u64 [a3 + 0x10] = a0\n 22424: a0 = u64 [a2 + 0x50]\n 22427: u64 [a3 + 0x8] = a0\n 22430: a1 = s1 + 0x400\n 22434: a0 = u64 [a2 + 0x58]\n 22437: u64 [a3] = a0\n 22439: a0 = 0\n 22441: ra = 948, jump @19\n      : @834 [@dyn 474] (gas: 7)\n 22447: u64 [s1 + 1016] = 0\n 22451: u64 [s1 + 1008] = 0\n 22455: u64 [s1 + 992] = 0x4\n 22460: a0 = 0x20\n 22463: a1 = s1 + 0x3e0\n 22467: u64 [s1 + 1000] = 0\n 22471: ra = 950, jump @19\n      : @835 [@dyn 475] (gas: 2)\n 22477: a1 = i32 [0x2020c]\n 22482: jump @837 if a1 >u 63\n      : @836 (gas: 4)\n 22486: a1 = 0x40\n 22489: u32 [0x2020c] = a1\n 22494: t0 = 0x3b8\n 22498: jump @2006\n      : @837 (gas: 1)\n 22502: t0 = 952, jump @2006\n      : @838 [@dyn 476] (gas: 8)\n 22509: a0 = 0x20220\n 22514: i32 a0 = a0 + 0\n 22516: i32 a2 = a2 + 0\n 22518: a1 = 0x40\n 22521: ra = 0x3ba\n 22525: ecalli 9 // 'hash_keccak_256'\n 22527: t0 = 0x3bc\n 22531: jump @1958\n      : @839 [@dyn 477] (gas: 1)\n 22534: t0 = 956, jump @1958\n      : @840 [@dyn 478] (gas: 8)\n 22540: a5 = a4 + 0x200\n 22544: u64 [a5 + 0x40] = a3\n 22547: u64 [a5 + 0x38] = a2\n 22550: u64 [a5 + 0x30] = a1\n 22553: u64 [a5 + 0x28] = a0\n 22556: a0 = s1 + 0x3c0\n 22560: a1 = s1 + 0x3300\n 22564: ra = 958, jump @21\n      : @841 [@dyn 479] (gas: 10)\n 22570: a0 = u64 [s1 + 0x3d0]\n 22574: a1 = s1 + 0x100\n 22578: u64 [a1 + 0x48] = a0\n 22581: a0 = u64 [s1 + 0x3c8]\n 22585: u64 [a1 + 0x58] = a0\n 22588: a0 = u64 [s1 + 0x3c0]\n 22592: u64 [a1 + 0x50] = a0\n 22595: a0 = s1 + 0x3a0\n 22599: a1 = 0x40\n 22602: ra = 960, jump @17\n      : @842 [@dyn 480] (gas: 6)\n 22608: a3 = s1 + 0x300\n 22612: a0 = u64 [a3 + 0xb8]\n 22616: a1 = u64 [a3 + 0xb0]\n 22620: a2 = u64 [a3 + 0xa8]\n 22624: a4 = u64 [a3 + 0xa0]\n 22628: t0 = 962, jump @1927\n      : @843 [@dyn 481] (gas: 1)\n 22634: jump @845 if a0 == 0\n      : @844 (gas: 1)\n 22637: jump @500\n      : @845 (gas: 14)\n 22640: a3 = a4\n 22642: a2 = s1 + 0x100\n 22646: a0 = u64 [a2 + 0x48]\n 22649: a0 = a0 << 0x20\n 22652: a0 = a0 >> 0x20\n 22655: u64 [s1 + 920] = 0\n 22659: a1 = u64 [a2 + 0x50]\n 22662: a4 = s1 + 0x300\n 22666: u64 [a4 + 0x80] = a1\n 22670: a1 = u64 [a2 + 0x58]\n 22673: u64 [a4 + 0x88] = a1\n 22677: a1 = s1 + 0x380\n 22681: u64 [a4 + 0x90] = a0\n 22685: jump @889\n      : @846 (gas: 10)\n 22688: a0 = s1 + 0x30d8\n 22692: u64 [a0 + 960] = 0\n 22696: u64 [a0 + 952] = 0\n 22700: u64 [a0 + 944] = 0\n 22704: u64 [a0 + 936] = 0\n 22708: a0 = s1 + 0x3000\n 22712: i32 a0 = a0 + 0x480\n 22716: ra = 0x3c4\n 22720: ecalli 16 // 'value_transferred'\n 22722: fallthrough\n      : @847 [@dyn 482] (gas: 3)\n 22723: a3 = s1 + 0x30d8\n 22727: a4 = a3 + 0x300\n 22731: t0 = 966, jump @2005\n      : @848 [@dyn 483] (gas: 1)\n 22738: jump @850 if a0 == 0\n      : @849 (gas: 1)\n 22741: jump @1309\n      : @850 (gas: 3)\n 22744: a0 = u64 [s1 + 0x158]\n 22748: a0 = i32 [a0]\n 22750: jump @852 if a0 >u 3\n      : @851 (gas: 1)\n 22754: jump @1310\n      : @852 (gas: 9)\n 22757: a1 = s1 + 0x30d8\n 22761: u64 [a1 + 992] = 0\n 22765: u64 [a1 + 984] = 0\n 22769: u64 [a1 + 976] = 0\n 22773: u64 [a1 + 968] = 0x9\n 22778: a0 = s1 + 0x7ff\n 22782: a0 = a0 + 0x341\n 22786: a1 = s1 + 0x34a0\n 22790: ra = 968, jump @21\n      : @853 [@dyn 484] (gas: 4)\n 22796: a1 = s1 + 0x7ff\n 22800: a1 = a1 + 0xd9\n 22804: a2 = a1 + 0x200\n 22808: t0 = 970, jump @2015\n      : @854 [@dyn 485] (gas: 4)\n 22815: a0 = s1 + 0x7ff\n 22819: a0 = a0 + 0x321\n 22823: a1 = 0x40\n 22826: ra = 972, jump @17\n      : @855 [@dyn 486] (gas: 8)\n 22832: a3 = s1 + 0x7ff\n 22836: a3 = a3 + 0xd9\n 22840: a5 = a3 + 0x200\n 22844: a0 = u64 [a5 + 0x60]\n 22847: a1 = u64 [a5 + 0x58]\n 22850: a2 = u64 [a5 + 0x50]\n 22853: a4 = u64 [a5 + 0x48]\n 22856: t0 = 974, jump @1927\n      : @856 [@dyn 487] (gas: 1)\n 22862: jump @858 if a0 == 0\n      : @857 (gas: 1)\n 22865: jump @500\n      : @858 (gas: 16)\n 22868: a3 = a4\n 22870: a0 = s1 + 0x7ff\n 22874: a0 = a0 + 0xd9\n 22878: a4 = s1 + 0x100\n 22882: a1 = u64 [a4 + 0x40]\n 22885: a5 = a0 + 0x200\n 22889: u64 [a5 + 0x28] = a1\n 22892: a1 = u64 [a4 + 0x48]\n 22895: u64 [a5 + 0x30] = a1\n 22898: a1 = u64 [a4 + 0x50]\n 22901: u64 [a5 + 0x38] = a1\n 22904: a1 = s1 + 0x7ff\n 22908: a1 = a1 + 0x301\n 22912: a2 = u64 [a4 + 0x58]\n 22915: u64 [a5 + 0x40] = a2\n 22918: fallthrough\n      : @859 (gas: 3)\n 22919: a0 = a3\n 22921: u64 [s1 + 0x138] = a3\n 22925: ra = 976, jump @19\n      : @860 [@dyn 488] (gas: 4)\n 22931: a1 = 0x20\n 22934: a0 = u64 [s1 + 0x138]\n 22938: ra = 0x530\n 22942: jump @34\n      : @861 (gas: 9)\n 22945: a0 = s1 + 0x30d8\n 22949: u64 [a0 + 1312] = 0\n 22953: u64 [a0 + 1304] = 0\n 22957: u64 [a0 + 1296] = 0\n 22961: u64 [a0 + 1288] = 0\n 22965: a0 = s1 + 0x3000\n 22969: i32 a0 = a0 + 0x5e0\n 22973: ecalli 16 // 'value_transferred'\n 22975: fallthrough\n      : @862 (gas: 10)\n 22976: a3 = s1 + 0x30d8\n 22980: a4 = a3 + 0x500\n 22984: a0 = u64 [a4 + 0x18]\n 22987: a1 = u64 [a4 + 0x20]\n 22990: a2 = u64 [a4 + 0x10]\n 22993: a3 = u64 [a4 + 0x8]\n 22996: a1 = a1 | a2\n 22999: a0 = a0 | a3\n 23002: a0 = a0 | a1\n 23005: jump @864 if a0 == 0\n      : @863 (gas: 1)\n 23008: jump @1311\n      : @864 (gas: 10)\n 23011: a0 = u64 [s1 + 0x158]\n 23015: a0 = u32 [a0]\n 23017: a2 = s1 + 0x10d8\n 23021: u64 [a2 + 320] = 0\n 23025: u64 [a2 + 312] = 0\n 23029: u64 [a2 + 0x128] = a0\n 23033: a0 = s1 + 0x1220\n 23037: a1 = s1 + 0x1200\n 23041: u64 [a2 + 304] = 0\n 23045: ra = 978, jump @1501\n      : @865 [@dyn 489] (gas: 3)\n 23051: t0 = 0x3d4\n 23055: a1 = s1 + 0x10d8\n 23059: fallthrough\n      : @866 [@dyn 490] (gas: 28)\n 23060: a2 = a1 + 0x100\n 23064: a0 = u64 [a2 + 0xa0]\n 23068: u64 [s1 + 0x138] = a0\n 23072: a0 = u64 [a2 + 0x98]\n 23076: u64 [s1 + 0x130] = a0\n 23080: a0 = u64 [a2 + 0x90]\n 23084: u64 [s1 + 0x128] = a0\n 23088: a0 = u64 [a2 + 0x88]\n 23092: u64 [s1 + 0x120] = a0\n 23096: a0 = u64 [a2 + 0x80]\n 23100: u64 [s1 + 0x118] = a0\n 23104: a0 = u64 [a2 + 0x78]\n 23107: u64 [s1 + 0x110] = a0\n 23111: a0 = u64 [a2 + 0x70]\n 23114: u64 [s1 + 0x108] = a0\n 23118: a0 = u64 [a2 + 0x68]\n 23121: u64 [s1 + 0x100] = a0\n 23125: a0 = u64 [a2 + 0x60]\n 23128: u64 [s1 + 0xe0] = a0\n 23132: a0 = u64 [a2 + 0x58]\n 23135: u64 [s1 + 0xe8] = a0\n 23139: a0 = u64 [a2 + 0x50]\n 23142: u64 [s1 + 0xf0] = a0\n 23146: a0 = u64 [a2 + 0x48]\n 23149: u64 [s1 + 0xf8] = a0\n 23153: a0 = s1 + 0x11e0\n 23157: a1 = 0x40\n 23160: ra = 982, jump @17\n      : @867 [@dyn 491] (gas: 21)\n 23166: a1 = s1 + 0x10d8\n 23170: a2 = u64 [a1 + 0x120]\n 23174: u64 [s1 + 0x148] = a2\n 23178: a3 = u64 [a1 + 0x118]\n 23182: u64 [s1 + 0x150] = a3\n 23186: a5 = u64 [a1 + 0x110]\n 23190: u64 [s1 + 0x158] = a5\n 23194: a4 = u64 [a1 + 0x108]\n 23198: u64 [s1 + 0x140] = a4\n 23202: u64 [a1 + 224] = 0\n 23206: u64 [a1 + 216] = 0\n 23210: u64 [a1 + 208] = 0\n 23214: u64 [a1 + 200] = 0x20\n 23219: u64 [a1 + 0x100] = a2\n 23223: u64 [a1 + 0xf8] = a3\n 23227: u64 [a1 + 0xf0] = a5\n 23231: a2 = a1\n 23233: a0 = s1 + 0x11c0\n 23237: a1 = s1 + 0x11a0\n 23241: u64 [a2 + 0xe8] = a4\n 23245: ra = 984, jump @1521\n      : @868 [@dyn 492] (gas: 14)\n 23251: a4 = s1 + 0x100\n 23255: a0 = u64 [a4 + 0x48]\n 23258: a1 = u64 [a4 + 0x58]\n 23261: a0 = a0 | a1\n 23264: a1 = u64 [a4 + 0x40]\n 23267: a2 = a1\n 23269: a3 = u64 [a4 + 0x50]\n 23272: a1 = a1 | a3\n 23275: a1 = a1 | a0\n 23278: a1 = a1 >> 0x20\n 23281: a0 = a0 | a3\n 23284: a0 = a0 << 0x20\n 23287: a0 = a0 | a1\n 23290: jump @870 if a0 == 0\n      : @869 (gas: 1)\n 23293: jump @500\n      : @870 (gas: 8)\n 23296: a0 = s1 + 0x10d8\n 23300: u64 [a0 + 192] = 0\n 23304: u64 [a0 + 184] = 0\n 23308: u64 [a0 + 176] = 0\n 23312: a1 = s1 + 0x1180\n 23316: u64 [a0 + 168] = 0\n 23320: a0 = a2\n 23322: ra = 986, jump @19\n      : @871 [@dyn 493] (gas: 39)\n 23328: a0 = u64 [s1 + 0x148]\n 23332: a1 = s1 + 0x10d8\n 23336: u64 [a1 + 0x40] = a0\n 23339: a0 = u64 [s1 + 0x150]\n 23343: u64 [a1 + 0x38] = a0\n 23346: a0 = u64 [s1 + 0x158]\n 23350: u64 [a1 + 0x30] = a0\n 23353: a0 = u64 [s1 + 0x140]\n 23357: u64 [a1 + 0x28] = a0\n 23360: a0 = u64 [s1 + 0xe0]\n 23364: u64 [a1 + 0xa0] = a0\n 23368: a0 = u64 [s1 + 0xe8]\n 23372: u64 [a1 + 0x98] = a0\n 23376: a0 = u64 [s1 + 0xf0]\n 23380: u64 [a1 + 0x90] = a0\n 23384: a0 = u64 [s1 + 0xf8]\n 23388: u64 [a1 + 0x88] = a0\n 23392: a0 = u64 [s1 + 0x100]\n 23396: u64 [a1 + 0x68] = a0\n 23399: a0 = u64 [s1 + 0x108]\n 23403: u64 [a1 + 0x70] = a0\n 23406: a0 = u64 [s1 + 0x110]\n 23410: u64 [a1 + 0x78] = a0\n 23413: a0 = u64 [s1 + 0x118]\n 23417: u64 [a1 + 0x80] = a0\n 23421: a0 = u64 [s1 + 0x120]\n 23425: u64 [a1 + 0x48] = a0\n 23428: a0 = u64 [s1 + 0x128]\n 23432: u64 [a1 + 0x50] = a0\n 23435: a0 = u64 [s1 + 0x130]\n 23439: u64 [a1 + 0x58] = a0\n 23442: a5 = a1\n 23444: a0 = s1 + 0x1160\n 23448: a1 = s1 + 0x1140\n 23452: a2 = s1 + 0x1120\n 23456: a3 = s1 + 0x1100\n 23460: a4 = u64 [s1 + 0x138]\n 23464: u64 [a5 + 0x60] = a4\n 23467: ra = 988, jump @1723\n      : @872 [@dyn 494] (gas: 6)\n 23473: a1 = 0x20220\n 23478: i32 a1 = a1 + 0\n 23480: a0 = 0\n 23482: a2 = 0\n 23484: ecalli 13 // 'seal_return'\n 23486: jump @1373\n      : @873 (gas: 11)\n 23489: a0 = s1 + 0x30d8\n 23493: u64 [a0 + 1600] = 0\n 23497: u64 [a0 + 1592] = 0\n 23501: u64 [a0 + 1584] = 0\n 23505: u64 [a0 + 1576] = 0\n 23509: a0 = s1 + 0x3000\n 23513: i32 a0 = a0 + 0x700\n 23517: ra = 0x3de\n 23521: ecalli 16 // 'value_transferred'\n 23523: t0 = 0x3e0\n 23527: jump @2016\n      : @874 [@dyn 495] (gas: 1)\n 23531: t0 = 992, jump @2016\n      : @875 [@dyn 496] (gas: 8)\n 23538: a0 = u64 [a4 + 0x38]\n 23541: a1 = u64 [a4 + 0x40]\n 23544: a2 = u64 [a4 + 0x30]\n 23547: a3 = u64 [a4 + 0x28]\n 23550: a1 = a1 | a2\n 23553: a0 = a0 | a3\n 23556: a0 = a0 | a1\n 23559: jump @877 if a0 == 0\n      : @876 (gas: 1)\n 23562: jump @1312\n      : @877 (gas: 1)\n 23565: t0 = 994, jump @2014\n      : @878 [@dyn 497] (gas: 1)\n 23571: jump @880 if a1 <u a0\n      : @879 (gas: 1)\n 23574: jump @1313\n      : @880 (gas: 7)\n 23577: a0 = s1 + 0x3000\n 23581: i32 a0 = a0 + 0x720\n 23585: a1 = 0x4\n 23588: ra = 0x3e4\n 23592: ecalli 3 // 'call_data_load'\n 23594: t0 = 0x3e6\n 23598: jump @2016\n      : @881 [@dyn 498] (gas: 1)\n 23601: t0 = 998, jump @2016\n      : @882 [@dyn 499] (gas: 13)\n 23607: a2 = u64 [a4 + 0x48]\n 23610: a0 = u64 [a4 + 0x50]\n 23613: a1 = u64 [a4 + 0x58]\n 23616: a3 = u64 [a4 + 0x60]\n 23619: a4 = s1 + 0x10d8\n 23623: a5 = a4 + 0x600\n 23627: u64 [a5 + 0xc0] = a3\n 23631: u64 [a5 + 0xb8] = a1\n 23635: u64 [a5 + 0xb0] = a0\n 23639: a0 = s1 + 0x17a0\n 23643: a1 = s1 + 0x1780\n 23647: u64 [a5 + 0xa8] = a2\n 23651: ra = 1000, jump @1823\n      : @883 [@dyn 500] (gas: 3)\n 23657: t0 = 0x3ea\n 23661: a1 = s1 + 0x10d8\n 23665: fallthrough\n      : @884 [@dyn 501] (gas: 11)\n 23666: a2 = a1 + 0x600\n 23670: a0 = u64 [a2 + 0xd8]\n 23674: a1 = s1 + 0x100\n 23678: u64 [a1 + 0x48] = a0\n 23681: a0 = u64 [a2 + 0xd0]\n 23685: u64 [a1 + 0x58] = a0\n 23688: a0 = u64 [a2 + 0xc8]\n 23692: u64 [a1 + 0x50] = a0\n 23695: a0 = s1 + 0x1760\n 23699: a1 = 0x40\n 23702: ra = 1004, jump @17\n      : @885 [@dyn 502] (gas: 7)\n 23708: a3 = s1 + 0x10d8\n 23712: a5 = a3 + 0x600\n 23716: a0 = u64 [a5 + 0xa0]\n 23720: a1 = u64 [a5 + 0x98]\n 23724: a2 = u64 [a5 + 0x90]\n 23728: a4 = u64 [a5 + 0x88]\n 23732: t0 = 1006, jump @1927\n      : @886 [@dyn 503] (gas: 1)\n 23738: jump @888 if a0 == 0\n      : @887 (gas: 1)\n 23741: jump @500\n      : @888 (gas: 15)\n 23744: a3 = a4\n 23746: a4 = s1 + 0x100\n 23750: a0 = u64 [a4 + 0x48]\n 23753: a0 = a0 << 0x20\n 23756: a0 = a0 >> 0x20\n 23759: a2 = s1 + 0x10d8\n 23763: u64 [a2 + 1664] = 0\n 23767: a1 = u64 [a4 + 0x50]\n 23770: a5 = a2 + 0x600\n 23774: u64 [a5 + 0x68] = a1\n 23777: a1 = u64 [a4 + 0x58]\n 23780: u64 [a5 + 0x70] = a1\n 23783: a1 = s1 + 0x1740\n 23787: u64 [a5 + 0x78] = a0\n 23790: fallthrough\n      : @889 (gas: 3)\n 23791: a0 = a3\n 23793: u64 [s1 + 0x140] = a3\n 23797: ra = 1008, jump @19\n      : @890 [@dyn 504] (gas: 4)\n 23803: a1 = 0x20\n 23806: a0 = u64 [s1 + 0x140]\n 23810: ra = 0x530\n 23814: jump @34\n      : @891 (gas: 1)\n 23817: jump @893 if a0 == 1924380192\n      : @892 (gas: 1)\n 23824: jump @1314\n      : @893 (gas: 3)\n 23827: a0 = u64 [s1 + 0x158]\n 23831: a0 = i32 [a0]\n 23833: jump @895 if a0 >u 67\n      : @894 (gas: 1)\n 23837: jump @1319\n      : @895 (gas: 6)\n 23840: a0 = s1 + 0x3000\n 23844: i32 a0 = a0 + 0x780\n 23848: a1 = 0x4\n 23851: ra = 0x3f2\n 23855: ecalli 3 // 'call_data_load'\n 23857: fallthrough\n      : @896 [@dyn 505] (gas: 6)\n 23858: a0 = s1 + 0x30d8\n 23862: a4 = a0 + 0x600\n 23866: a1 = u64 [a4 + 0xc0]\n 23870: a2 = u64 [a4 + 0xb8]\n 23874: a3 = u64 [a4 + 0xb0]\n 23878: t0 = 1012, jump @1993\n      : @897 [@dyn 506] (gas: 1)\n 23884: jump @899 if a1 != 0\n      : @898 (gas: 1)\n 23887: jump @1320\n      : @899 (gas: 22)\n 23890: a0 = s1 + 0x30d8\n 23894: a1 = u64 [a0 + 0x6a8]\n 23898: a0 = u64 [s1 + 0x158]\n 23902: a5 = u32 [a0]\n 23904: a0 = a1 + 0x23\n 23907: t0 = a1\n 23909: a1 = a0 <u a1\n 23912: a3 = u64 [s1 + 0x140]\n 23916: a2 = a3 + a1\n 23919: a3 = a2 <u a3\n 23922: a3 = a1 if a1 == 0\n 23925: a1 = u64 [s1 + 0x148]\n 23929: a3 = a3 + a1\n 23932: a1 = a3 <u a1\n 23935: a4 = u64 [s1 + 0x150]\n 23939: a1 = a1 + a4\n 23942: a1 = a1 | a3\n 23945: u64 [s1 + 0x158] = a5\n 23949: a0 = a0 <u a5\n 23952: a0 = 0 if a2 != 0\n 23954: a0 = 0 if a1 != 0\n 23956: jump @901 if a0 != 0\n      : @900 (gas: 1)\n 23959: jump @1321\n      : @901 (gas: 43)\n 23962: u64 [s1 + 0x138] = t0\n 23966: i32 a1 = t0 + 0x4\n 23969: a0 = s1 + 0x3000\n 23973: i32 a0 = a0 + 0x7a0\n 23977: ecalli 3 // 'call_data_load'\n 23979: a0 = s1 + 0x30d8\n 23983: t0 = u64 [a0 + 0x6c8]\n 23987: t2 = u64 [a0 + 0x6d0]\n 23991: ra = u64 [a0 + 0x6d8]\n 23995: a1 = a0\n 23997: a0 = u64 [s1 + 0x138]\n 24001: a2 = a0 + 0x24\n 24004: a4 = a2 <u a0\n 24007: a0 = u64 [s1 + 0x140]\n 24011: a5 = a0 + a4\n 24014: a0 = a5 <u a0\n 24017: a0 = a4 if a4 == 0\n 24020: a4 = u64 [a1 + 0x6e0]\n 24024: a1 = u64 [s1 + 0x148]\n 24028: a0 = a0 + a1\n 24031: t1 = a0 <u a1\n 24034: a1 = u64 [s1 + 0x150]\n 24038: t1 = t1 + a1\n 24041: a1 = s1 + 0x20d8\n 24045: u64 [a1 + 96] = 0\n 24048: u64 [a1 + 88] = 0\n 24051: u64 [a1 + 80] = 0\n 24054: a3 = u64 [s1 + 0x158]\n 24058: u64 [a1 + 0x48] = a3\n 24061: u64 [a1 + 0x80] = a4\n 24065: u64 [a1 + 0x78] = ra\n 24068: u64 [a1 + 0x70] = t2\n 24071: u64 [a1 + 0x68] = t0\n 24074: u64 [a1 + 0x90] = a5\n 24078: u64 [a1 + 0x88] = a2\n 24082: u64 [a1 + 0x98] = a0\n 24086: a4 = a1\n 24088: a0 = s1 + 0x2180\n 24092: a1 = s1 + 0x2160\n 24096: a2 = s1 + 0x2140\n 24100: a3 = s1 + 0x2120\n 24104: u64 [a4 + 0xa0] = t1\n 24108: ra = 1014, jump @1540\n      : @902 [@dyn 507] (gas: 34)\n 24114: a1 = s1 + 0x20d8\n 24118: a0 = u64 [a1 + 0xc0]\n 24122: u64 [s1 + 0xe0] = a0\n 24126: a0 = u64 [a1 + 0xb8]\n 24130: u64 [s1 + 0xd8] = a0\n 24134: a0 = u64 [a1 + 0xb0]\n 24138: u64 [s1 + 0xe8] = a0\n 24142: a0 = u64 [a1 + 0xa8]\n 24146: u64 [s1 + 0xf0] = a0\n 24150: a0 = s1 + 0x3000\n 24154: i32 a0 = a0 + 0x7c0\n 24158: a1 = 0x24\n 24161: ecalli 3 // 'call_data_load'\n 24163: a1 = s1 + 0x30d8\n 24167: a0 = u64 [a1 + 0x700]\n 24171: u64 [s1 + 0x58] = a0\n 24174: a2 = a1 + 0x600\n 24178: a0 = u64 [a2 + 0xf8]\n 24182: u64 [s1 + 0x50] = a0\n 24185: a0 = u64 [a2 + 0xf0]\n 24189: u64 [s1 + 0x48] = a0\n 24192: a0 = u64 [a2 + 0xe8]\n 24196: u64 [s1 + 0x40] = a0\n 24199: a0 = sp + 0xffffffffffffffe0\n 24202: a0 = a0 & 0xffffffffffffffe0\n 24205: u64 [s1 + 0x158] = a0\n 24209: sp = a0\n 24211: u64 [a1 + 1824] = 0\n 24215: u64 [a1 + 1816] = 0\n 24219: u64 [a1 + 1808] = 0\n 24223: u64 [a1 + 1800] = 0x7\n 24228: a0 = s1 + 0x2100\n 24232: a1 = s1 + 0x37e0\n 24236: ra = 1016, jump @21\n      : @903 [@dyn 508] (gas: 13)\n 24242: a4 = s1 + 0x20d8\n 24246: a2 = u64 [a4 + 0x28]\n 24249: a0 = u64 [a4 + 0x30]\n 24252: a1 = u64 [a4 + 0x38]\n 24255: a3 = u64 [a4 + 0x40]\n 24258: u64 [a4] = a3\n 24260: a3 = a4 + 0xffffffffffffff00\n 24264: u64 [a3 + 0xf8] = a1\n 24268: u64 [a3 + 0xf0] = a0\n 24272: a0 = s1 + 0x20e0\n 24276: a1 = s1 + 0x20c0\n 24280: u64 [a3 + 0xe8] = a2\n 24284: ra = 1018, jump @1715\n      : @904 [@dyn 509] (gas: 22)\n 24290: a3 = s1 + 0x20d8\n 24294: a1 = u64 [a3 + 0x18]\n 24297: a0 = u64 [a3 + 0x20]\n 24300: a2 = u64 [a3 + 0x8]\n 24303: a3 = u64 [a3 + 0x10]\n 24306: u64 [s1 + 0xc0] = a1\n 24310: a4 = u64 [s1 + 0x158]\n 24314: u64 [a4 + 0x10] = a1\n 24317: u64 [s1 + 0xc8] = a0\n 24321: u64 [a4 + 0x18] = a0\n 24324: u64 [s1 + 0xb8] = a2\n 24328: u64 [a4] = a2\n 24330: u64 [s1 + 0xb0] = a3\n 24334: u64 [a4 + 0x8] = a3\n 24337: a1 = a4\n 24339: a2 = s1 + 0x30d8\n 24343: u64 [a2 + 1856] = 0\n 24347: u64 [a2 + 1848] = 0\n 24351: u64 [a2 + 1840] = 0\n 24355: u64 [a2 + 1832] = 0x7\n 24360: a0 = s1 + 0x3800\n 24364: ra = 1020, jump @23\n      : @905 [@dyn 510] (gas: 6)\n 24370: a0 = 0x30220\n 24375: u64 [s1 + 0xa8] = a0\n 24379: i32 a0 = a0 + 0\n 24381: u64 [s1 + 0x90] = a0\n 24385: ecalli 5 // 'caller'\n 24387: fallthrough\n      : @906 (gas: 7)\n 24388: a2 = u64 [s1 + 0xa8]\n 24392: a0 = u32 [a2 + 0x10]\n 24395: a1 = u64 [a2]\n 24397: a2 = u64 [a2 + 0x8]\n 24400: a0 = a0 | a1\n 24403: a0 = a0 | a2\n 24406: jump @908 if a0 != 0\n      : @907 (gas: 1)\n 24409: jump @1322\n      : @908 (gas: 6)\n 24412: a0 = u64 [s1 + 0x90]\n 24416: ra = 0x3fe\n 24420: ecalli 5 // 'caller'\n 24422: a2 = u64 [s1 + 0xa8]\n 24426: t0 = 0x400\n 24430: jump @1949\n      : @909 [@dyn 511] (gas: 2)\n 24433: a2 = u64 [s1 + 0xa8]\n 24437: t0 = 1024, jump @1949\n      : @910 [@dyn 512] (gas: 18)\n 24443: a4 = s1 + 0x18d8\n 24447: a3 = u64 [s1 + 0xc8]\n 24451: a5 = a4 + 0x700\n 24455: u64 [a5 + 0xa0] = a3\n 24459: a3 = u64 [s1 + 0xc0]\n 24463: u64 [a5 + 0x98] = a3\n 24467: a3 = u64 [s1 + 0xb0]\n 24471: u64 [a5 + 0x90] = a3\n 24475: a3 = u64 [s1 + 0xb8]\n 24479: u64 [a5 + 0x88] = a3\n 24483: u64 [a5 + 0xb8] = a2\n 24487: u64 [a5 + 0xb0] = a0\n 24491: u64 [a5 + 0xa8] = a1\n 24495: a0 = s1 + 0x20a0\n 24499: a1 = s1 + 0x2080\n 24503: a2 = s1 + 0x2060\n 24507: u64 [a4 + 1984] = 0\n 24511: ra = 1026, jump @1837\n      : @911 [@dyn 513] (gas: 10)\n 24517: a3 = s1 + 0x18d8\n 24521: a4 = a3 + 0x700\n 24525: a0 = u64 [a4 + 0xd8]\n 24529: a1 = u64 [a4 + 0xe0]\n 24533: a2 = u64 [a4 + 0xd0]\n 24537: a3 = u64 [a4 + 0xc8]\n 24541: a1 = a1 | a2\n 24544: a0 = a0 | a3\n 24547: a0 = a0 | a1\n 24550: jump @913 if a0 == 0\n      : @912 (gas: 1)\n 24553: jump @1327\n      : @913 (gas: 13)\n 24556: a2 = s1 + 0x18d8\n 24560: a0 = u64 [s1 + 0xb8]\n 24564: a3 = a2 + 0x700\n 24568: u64 [a3 + 0x28] = a0\n 24571: a0 = u64 [s1 + 0xb0]\n 24575: u64 [a3 + 0x30] = a0\n 24578: a0 = u64 [s1 + 0xc0]\n 24582: u64 [a3 + 0x38] = a0\n 24585: a1 = s1 + 0x2000\n 24589: a0 = u64 [s1 + 0xc8]\n 24593: u64 [a3 + 0x40] = a0\n 24596: a0 = 0\n 24598: ra = 1028, jump @19\n      : @914 [@dyn 514] (gas: 3)\n 24604: t0 = 0x406\n 24608: a1 = s1 + 0x18d8\n 24612: fallthrough\n      : @915 [@dyn 515] (gas: 8)\n 24613: u64 [a1 + 1824] = 0\n 24617: u64 [a1 + 1816] = 0\n 24621: u64 [a1 + 1800] = 0x6\n 24626: a2 = a1\n 24628: a0 = 0x20\n 24631: a1 = s1 + 0x1fe0\n 24635: u64 [a2 + 1808] = 0\n 24639: ra = 1032, jump @19\n      : @916 [@dyn 516] (gas: 9)\n 24645: a0 = sp + 0xffffffffffffffe0\n 24648: a0 = a0 & 0xffffffffffffffe0\n 24651: u64 [s1 + 0xa0] = a0\n 24655: sp = a0\n 24657: a0 = 0x2020c\n 24662: u64 [s1 + 0x88] = a0\n 24666: a0 = i32 [0x2020c]\n 24671: a1 = 0x3f\n 24674: jump @918 if a1 <u a0\n      : @917 (gas: 4)\n 24677: a1 = u64 [s1 + 0x88]\n 24681: u32 [a1 + 0] = 0x40\n 24684: t0 = 0x40a\n 24688: jump @2006\n      : @918 (gas: 1)\n 24691: t0 = 1034, jump @2006\n      : @919 [@dyn 517] (gas: 7)\n 24697: a0 = 0x20220\n 24702: i32 a0 = a0 + 0\n 24704: i32 a2 = a2 + 0\n 24706: a1 = 0x40\n 24709: u64 [s1 + 0x78] = a0\n 24712: ecalli 9 // 'hash_keccak_256'\n 24714: fallthrough\n      : @920 (gas: 32)\n 24715: a2 = u64 [s1 + 0x158]\n 24719: t1 = u64 [a2 + 0x10]\n 24722: a1 = u64 [a2 + 0x18]\n 24725: a0 = a2\n 24727: a2 = u64 [s1 + 0xf0]\n 24731: a5 = u64 [s1 + 0xd8]\n 24735: a2 = a2 | a5\n 24738: a3 = u64 [s1 + 0xe8]\n 24742: a4 = u64 [s1 + 0xe0]\n 24746: a3 = a3 | a4\n 24749: a2 = a2 | a3\n 24752: a2 = a2 >> 0x20\n 24755: a3 = a3 | a5\n 24758: a3 = a3 << 0x20\n 24761: t0 = a3 | a2\n 24764: a3 = u64 [a0 + 0x8]\n 24767: a4 = u64 [a0]\n 24769: a5 = reverse a1\n 24771: a2 = reverse t1\n 24773: a3 = reverse a3\n 24775: a1 = reverse a4\n 24777: a0 = u64 [s1 + 0xa0]\n 24781: a4 = s1 + 0x100\n 24785: u64 [a4 + 0x10] = a1\n 24788: u64 [a0 + 0x18] = a1\n 24791: u64 [s1 + 0xf8] = a3\n 24795: u64 [a0 + 0x10] = a3\n 24798: u64 [a4] = a2\n 24800: u64 [a0 + 0x8] = a2\n 24803: u64 [a4 + 0x8] = a5\n 24806: u64 [a0] = a5\n 24808: jump @922 if t0 == 0\n      : @921 (gas: 1)\n 24811: jump @500\n      : @922 (gas: 3)\n 24814: a0 = s1 + 0x1fc0\n 24818: a1 = u64 [s1 + 0xf0]\n 24822: ra = 1036, jump @17\n      : @923 [@dyn 518] (gas: 17)\n 24828: a0 = s1 + 0x18d8\n 24832: a3 = u64 [a0 + 0x700]\n 24836: a1 = u64 [a0 + 0x6f8]\n 24840: a2 = u64 [a0 + 0x6f0]\n 24844: a0 = a3 >u 0\n 24846: a4 = a1 >u 0\n 24848: a4 = a0 if a3 != 0\n 24851: u64 [s1 + 0xd0] = a2\n 24855: a0 = a2 >u 0\n 24857: u64 [s1 + 0x80] = a1\n 24861: u64 [s1 + 0x70] = a3\n 24864: a1 = a1 | a3\n 24867: u64 [s1 + 0x30] = a0\n 24870: u64 [s1 + 0x38] = a4\n 24873: u64 [s1 + 0x68] = a1\n 24876: a0 = a4 if a1 != 0\n 24879: jump @925 if a0 == 0\n      : @924 (gas: 1)\n 24882: jump @1332\n      : @925 (gas: 6)\n 24885: a0 = s1 + 0x18d8\n 24889: a0 = u64 [a0 + 0x6e8]\n 24893: u64 [s1 + 0x98] = a0\n 24897: a0 = s1 + 0x1fa0\n 24901: a1 = u64 [s1 + 0xa0]\n 24905: ra = 1038, jump @21\n      : @926 [@dyn 519] (gas: 13)\n 24911: a4 = s1 + 0x18d8\n 24915: a5 = a4 + 0x600\n 24919: a2 = u64 [a5 + 0xc8]\n 24923: a0 = u64 [a5 + 0xd0]\n 24927: a1 = u64 [a5 + 0xd8]\n 24931: a3 = u64 [a5 + 0xe0]\n 24935: u64 [a5 + 0xa0] = a3\n 24939: u64 [a5 + 0x98] = a1\n 24943: u64 [a5 + 0x90] = a0\n 24947: a0 = s1 + 0x1f80\n 24951: a1 = s1 + 0x1f60\n 24955: u64 [a5 + 0x88] = a2\n 24959: ra = 1040, jump @1557\n      : @927 [@dyn 520] (gas: 23)\n 24965: a0 = s1 + 0x18d8\n 24969: a1 = a0 + 0x600\n 24973: a3 = u64 [a1 + 0xc0]\n 24977: a4 = u64 [a1 + 0xb8]\n 24981: a5 = u64 [a1 + 0xb0]\n 24985: a2 = u64 [a1 + 0xa8]\n 24989: a0 = a3 >u 0\n 24991: a1 = a4 >u 0\n 24993: a1 = a0 if a3 != 0\n 24996: a0 = a5 >u 0\n 24998: u64 [s1 + 0x138] = a2\n 25002: a2 = a2 <u 0x20\n 25005: a2 = a2 ^ 0x1\n 25008: u64 [s1 + 0x140] = a5\n 25012: a2 = a0 if a5 != 0\n 25015: u64 [s1 + 0x148] = a3\n 25019: u64 [s1 + 0x150] = a4\n 25023: a0 = a4 | a3\n 25026: a2 = a1 if a0 != 0\n 25029: a0 = u64 [s1 + 0x98]\n 25033: a0 = a0 <u 0x20\n 25036: u64 [s1 + 0x60] = a0\n 25039: jump @983 if a2 == 0\n      : @928 (gas: 14)\n 25043: a0 = s1 + 0x18d8\n 25047: a3 = s1 + 0x100\n 25051: a1 = u64 [a3 + 0x8]\n 25054: a4 = a0 + 0x600\n 25058: u64 [a4 + 0x68] = a1\n 25061: a1 = u64 [a3]\n 25063: u64 [a4 + 0x70] = a1\n 25066: a1 = u64 [s1 + 0xf8]\n 25070: u64 [a4 + 0x78] = a1\n 25073: a1 = s1 + 0x1f40\n 25077: a2 = u64 [a3 + 0x10]\n 25080: u64 [a4 + 0x80] = a2\n 25084: a0 = 0\n 25086: ra = 1042, jump @19\n      : @929 [@dyn 521] (gas: 3)\n 25092: a0 = u64 [s1 + 0x88]\n 25096: a0 = i32 [a0]\n 25098: jump @931 if a0 >u 31\n      : @930 (gas: 3)\n 25102: a1 = u64 [s1 + 0x88]\n 25106: u32 [a1 + 0] = 0x20\n 25109: fallthrough\n      : @931 (gas: 117)\n 25110: a0 = sp + 0xffffffffffffffe0\n 25113: a0 = a0 & 0xffffffffffffffe0\n 25116: u64 [s1 + 0x120] = a0\n 25120: sp = a0\n 25122: i32 a2 = a0 + 0\n 25124: a1 = 0x20\n 25127: a0 = u64 [s1 + 0x78]\n 25130: ecalli 9 // 'hash_keccak_256'\n 25132: a0 = u64 [s1 + 0x98]\n 25136: a1 = a0 + 0x1f\n 25139: a0 = a1 <u a0\n 25142: a5 = u64 [s1 + 0xd0]\n 25146: a2 = a5 + a0\n 25149: a3 = a2 <u a5\n 25152: a3 = a0 if a0 == 0\n 25155: a4 = u64 [s1 + 0x80]\n 25159: a3 = a3 + a4\n 25162: u64 [s1 + 0x118] = a3\n 25166: a3 = a3 << 0x3b\n 25169: a4 = a2 >> 0x5\n 25172: a4 = a4 | a3\n 25175: a0 = u64 [s1 + 0x120]\n 25179: t1 = u64 [a0 + 0x18]\n 25182: a2 = a2 << 0x3b\n 25185: a3 = u64 [a0 + 0x10]\n 25188: a1 = a1 >> 0x5\n 25191: a0 = a1 | a2\n 25194: t2 = reverse t1\n 25196: a2 = reverse a3\n 25198: a1 = u64 [s1 + 0x60]\n 25201: a1 = 0 if a5 != 0\n 25203: a3 = u64 [s1 + 0x68]\n 25206: a1 = 0 if a3 != 0\n 25208: a4 = 0 if a1 != 0\n 25210: a0 = 0 if a1 != 0\n 25212: t0 = t2 + a0\n 25215: a0 = t0 <u t2\n 25218: a5 = a2 + a0\n 25221: a4 = a4 + a5\n 25224: u64 [s1 + 0x158] = a4\n 25228: a5 = a4 ^ a2\n 25231: a3 = a4 <u a2\n 25234: a3 = a0 if a5 == 0\n 25237: u64 [s1 + 0x28] = a3\n 25240: a0 = u64 [s1 + 0x138]\n 25244: ra = a0 + 0x1f\n 25247: a4 = ra <u a0\n 25250: a3 = u64 [s1 + 0x140]\n 25254: a0 = a3 + a4\n 25257: a5 = a0 <u a3\n 25260: a5 = a4 if a4 == 0\n 25263: t1 = u64 [s1 + 0x150]\n 25267: t1 = t1 + a5\n 25270: a4 = t1 << 0x3b\n 25273: a3 = a0 >> 0x5\n 25276: a3 = a3 | a4\n 25279: a0 = a0 << 0x3b\n 25282: a4 = ra >> 0x5\n 25285: a0 = a0 | a4\n 25288: a0 = a0 + t2\n 25291: u64 [s1 + 0x130] = a0\n 25295: a0 = a0 <u t2\n 25298: t2 = t0\n 25300: a4 = a2 + a0\n 25303: a4 = a4 + a3\n 25306: a3 = a4 ^ a2\n 25309: u64 [s1 + 0x128] = a4\n 25313: a2 = a4 <u a2\n 25316: a2 = a0 if a3 == 0\n 25319: a4 = u64 [s1 + 0x118]\n 25323: a0 = u64 [s1 + 0x80]\n 25327: a0 = a4 <u a0\n 25330: a3 = u64 [s1 + 0x70]\n 25333: a0 = a0 + a3\n 25336: a3 = a4 >> 0x5\n 25339: a4 = a0 << 0x3b\n 25342: a3 = a3 | a4\n 25345: a4 = u64 [s1 + 0x120]\n 25349: t0 = u64 [a4]\n 25351: a4 = u64 [a4 + 0x8]\n 25354: a0 = a0 >> 0x5\n 25357: a3 = 0 if a1 != 0\n 25359: a0 = 0 if a1 != 0\n 25361: a1 = reverse a4\n 25363: a4 = reverse t0\n 25365: a0 = a0 + a4\n 25368: a3 = a3 + a1\n 25371: a5 = a3 <u a1\n 25374: a0 = a0 + a5\n 25377: ra = u64 [s1 + 0x28]\n 25380: ra = ra + a3\n 25383: a3 = ra <u a3\n 25386: t0 = a0 + a3\n 25389: a0 = u64 [s1 + 0x150]\n 25393: a0 = t1 <u a0\n 25396: a3 = u64 [s1 + 0x148]\n 25400: a0 = a0 + a3\n 25403: a3 = t1 >> 0x5\n 25406: a5 = a0 << 0x3b\n 25409: a3 = a3 | a5\n 25412: a0 = a0 >> 0x5\n 25415: a0 = a0 + a4\n 25418: a5 = s1 + 0x100\n 25422: a4 = u64 [a5 + 0x58]\n 25425: a3 = a3 + a1\n 25428: a1 = a3 <u a1\n 25431: a0 = a0 + a1\n 25434: a2 = a2 + a3\n 25437: u64 [a5 + 0x20] = a2\n 25440: a1 = a2 <u a3\n 25443: a0 = a0 + a1\n 25446: u64 [a5 + 0x18] = a0\n 25449: a0 = sp + 0xffffffffffffffe0\n 25452: a0 = a0 & 0xffffffffffffffe0\n 25455: u64 [a5 + 0x50] = a0\n 25458: sp = a0\n 25460: fallthrough\n      : @932 (gas: 26)\n 25461: a0 = u64 [s1 + 0x130]\n 25465: a0 = t2 <u a0\n 25468: a2 = u64 [s1 + 0x128]\n 25472: a1 = a4 ^ a2\n 25475: a2 = a4 <u a2\n 25478: a2 = a0 if a1 == 0\n 25481: a5 = u64 [s1 + 0x120]\n 25485: a0 = ra <u a5\n 25488: a3 = u64 [s1 + 0x118]\n 25492: a1 = t0 ^ a3\n 25495: a3 = t0 <u a3\n 25498: a3 = a0 if a1 == 0\n 25501: a0 = ra ^ a5\n 25504: a0 = a0 | a1\n 25507: a3 = a2 if a0 == 0\n 25510: u64 [s1 + 0x148] = t2\n 25514: a0 = u64 [s1 + 0x150]\n 25518: u64 [a0] = t2\n 25520: u64 [s1 + 0x158] = a4\n 25524: u64 [a0 + 0x8] = a4\n 25527: u64 [s1 + 0x138] = ra\n 25531: u64 [a0 + 0x10] = ra\n 25534: u64 [s1 + 0x140] = t0\n 25538: u64 [a0 + 0x18] = t0\n 25541: a0 = s1 + 0x30d8\n 25545: jump @983 if a3 == 0\n      : @933 (gas: 7)\n 25549: u64 [a0 + 1888] = 0\n 25553: u64 [a0 + 1880] = 0\n 25557: u64 [a0 + 1872] = 0\n 25561: u64 [a0 + 1864] = 0\n 25565: a1 = s1 + 0x3820\n 25569: a0 = u64 [s1 + 0x150]\n 25573: ra = 1044, jump @23\n      : @934 [@dyn 522] (gas: 14)\n 25579: t2 = u64 [s1 + 0x148]\n 25583: t2 = t2 + 0x1\n 25586: a0 = t2 <u 0x1\n 25589: a4 = u64 [s1 + 0x158]\n 25593: a4 = a4 + a0\n 25596: a0 = t2 | a4\n 25599: a0 = a0 <u 0x1\n 25602: a1 = u64 [s1 + 0x138]\n 25606: a0 = a0 + a1\n 25609: a1 = a0 <u a1\n 25612: t0 = u64 [s1 + 0x140]\n 25616: t0 = t0 + a1\n 25619: ra = a0\n 25621: jump @932\n      : @935 (gas: 3)\n 25624: a0 = s1 + 0x2c00\n 25628: a1 = 0x40\n 25631: ra = 1046, jump @17\n      : @936 [@dyn 523] (gas: 7)\n 25637: a0 = s1 + 0x28d8\n 25641: a5 = a0 + 0x300\n 25645: a3 = u64 [a5 + 0x40]\n 25648: a4 = u64 [a5 + 0x38]\n 25651: a2 = u64 [a5 + 0x30]\n 25654: a1 = u64 [a5 + 0x28]\n 25657: t0 = 1048, jump @1916\n      : @937 [@dyn 524] (gas: 1)\n 25663: jump @939 if a0 == 0\n      : @938 (gas: 1)\n 25666: jump @500\n      : @939 (gas: 3)\n 25669: t0 = 0x41a\n 25673: a2 = s1 + 0x28d8\n 25677: fallthrough\n      : @940 [@dyn 525] (gas: 8)\n 25678: u64 [a2 + 792] = 0\n 25682: u64 [a2 + 784] = 0\n 25686: u64 [a2 + 776] = 0\n 25690: a0 = 0x8c379a000000000\n 25700: a1 = s1 + 0x2be0\n 25704: u64 [a2 + 0x320] = a0\n 25708: a0 = u64 [s1 + 0x158]\n 25712: ra = 1052, jump @19\n      : @941 [@dyn 526] (gas: 1)\n 25718: t0 = 1054, jump @1910\n      : @942 [@dyn 527] (gas: 1)\n 25724: jump @944 if a0 != 0\n      : @943 (gas: 1)\n 25727: jump @500\n      : @944 (gas: 1)\n 25730: t0 = 1056, jump @1987\n      : @945 [@dyn 528] (gas: 6)\n 25736: u64 [a2 + 768] = 0\n 25740: u64 [a2 + 760] = 0\n 25744: u64 [a2 + 744] = 0x20\n 25749: a1 = s1 + 0x2bc0\n 25753: u64 [a2 + 752] = 0\n 25757: ra = 1058, jump @19\n      : @946 [@dyn 529] (gas: 4)\n 25763: a2 = s1 + 0x100\n 25767: a0 = u64 [a2 + 0x40]\n 25770: a0 = a0 + 0xffffffffffffffdc\n 25773: t0 = 1060, jump @1909\n      : @947 [@dyn 530] (gas: 1)\n 25779: jump @949 if a0 != 0\n      : @948 (gas: 1)\n 25782: jump @500\n      : @949 (gas: 1)\n 25785: t0 = 1062, jump @1977\n      : @950 [@dyn 531] (gas: 6)\n 25791: u64 [a2 + 736] = 0\n 25795: u64 [a2 + 728] = 0\n 25799: u64 [a2 + 712] = 0x40\n 25804: a1 = s1 + 0x2ba0\n 25808: u64 [a2 + 720] = 0\n 25812: ra = 1064, jump @19\n      : @951 [@dyn 532] (gas: 5)\n 25818: a0 = 0x100000000\n 25828: a2 = s1 + 0x100\n 25832: u64 [a2 + 0x40] = a0\n 25835: a0 = 0xffffffbc\n 25845: t0 = 1066, jump @1909\n      : @952 [@dyn 533] (gas: 1)\n 25851: jump @954 if a0 != 0\n      : @953 (gas: 1)\n 25854: jump @500\n      : @954 (gas: 14)\n 25857: a0 = u64 [s1 + 0x158]\n 25861: i32 a0 = a0 + 0x44\n 25864: a1 = u64 [0x20058]\n 25869: a4 = s1 + 0x28d8\n 25873: a5 = a4 + 0x200\n 25877: u64 [a5 + 0xc0] = a1\n 25881: a1 = u64 [0x20060]\n 25886: a2 = u64 [0x20068]\n 25891: a3 = u64 [0x20070]\n 25896: u64 [a5 + 0xb8] = a1\n 25900: u64 [a5 + 0xb0] = a2\n 25904: a1 = s1 + 0x2b80\n 25908: u64 [a5 + 0xa8] = a3\n 25912: ra = 1068, jump @19\n      : @955 [@dyn 534] (gas: 4)\n 25918: a2 = s1 + 0x100\n 25922: a0 = u64 [a2 + 0x40]\n 25925: a0 = a0 + 0xffffffffffffff9c\n 25928: t0 = 1070, jump @1909\n      : @956 [@dyn 535] (gas: 1)\n 25934: jump @958 if a0 != 0\n      : @957 (gas: 1)\n 25937: jump @500\n      : @958 (gas: 15)\n 25940: a0 = u64 [s1 + 0x158]\n 25944: i32 a0 = a0 + 0x64\n 25947: a1 = u64 [0x20078]\n 25952: a4 = s1 + 0x28d8\n 25956: a5 = a4 + 0x200\n 25960: u64 [a5 + 0xa0] = a1\n 25964: a1 = u64 [0x20080]\n 25969: a2 = u64 [0x20088]\n 25974: a3 = u64 [0x20090]\n 25979: u64 [a5 + 0x98] = a1\n 25983: u64 [a5 + 0x90] = a2\n 25987: a1 = s1 + 0x2b60\n 25991: u64 [a5 + 0x88] = a3\n 25995: ra = 0x542\n 25999: jump @19\n      : @959 (gas: 3)\n 26002: a0 = s1 + 0x3060\n 26006: a1 = 0x40\n 26009: ra = 1072, jump @17\n      : @960 [@dyn 536] (gas: 7)\n 26015: a0 = s1 + 0x28d8\n 26019: a5 = a0 + 0x700\n 26023: a3 = u64 [a5 + 0xa0]\n 26027: a4 = u64 [a5 + 0x98]\n 26031: a2 = u64 [a5 + 0x90]\n 26035: a1 = u64 [a5 + 0x88]\n 26039: t0 = 1074, jump @1916\n      : @961 [@dyn 537] (gas: 1)\n 26045: jump @963 if a0 == 0\n      : @962 (gas: 1)\n 26048: jump @500\n      : @963 (gas: 3)\n 26051: t0 = 0x434\n 26055: a2 = s1 + 0x28d8\n 26059: fallthrough\n      : @964 [@dyn 538] (gas: 8)\n 26060: u64 [a2 + 1912] = 0\n 26064: u64 [a2 + 1904] = 0\n 26068: u64 [a2 + 1896] = 0\n 26072: a0 = 0x8c379a000000000\n 26082: a1 = s1 + 0x3040\n 26086: u64 [a2 + 0x780] = a0\n 26090: a0 = u64 [s1 + 0x158]\n 26094: ra = 1078, jump @19\n      : @965 [@dyn 539] (gas: 1)\n 26100: t0 = 1080, jump @1910\n      : @966 [@dyn 540] (gas: 1)\n 26106: jump @968 if a0 != 0\n      : @967 (gas: 1)\n 26109: jump @500\n      : @968 (gas: 1)\n 26112: t0 = 1082, jump @1987\n      : @969 [@dyn 541] (gas: 6)\n 26118: u64 [a2 + 1888] = 0\n 26122: u64 [a2 + 1880] = 0\n 26126: u64 [a2 + 1864] = 0x20\n 26131: a1 = s1 + 0x3020\n 26135: u64 [a2 + 1872] = 0\n 26139: ra = 1084, jump @19\n      : @970 [@dyn 542] (gas: 4)\n 26145: a2 = s1 + 0x100\n 26149: a0 = u64 [a2 + 0x40]\n 26152: a0 = a0 + 0xffffffffffffffdc\n 26155: t0 = 1086, jump @1909\n      : @971 [@dyn 543] (gas: 1)\n 26161: jump @973 if a0 != 0\n      : @972 (gas: 1)\n 26164: jump @500\n      : @973 (gas: 1)\n 26167: t0 = 1088, jump @1977\n      : @974 [@dyn 544] (gas: 6)\n 26173: u64 [a2 + 1856] = 0\n 26177: u64 [a2 + 1848] = 0\n 26181: u64 [a2 + 1832] = 0x2a\n 26186: a1 = s1 + 0x3000\n 26190: u64 [a2 + 1840] = 0\n 26194: ra = 1090, jump @19\n      : @975 [@dyn 545] (gas: 5)\n 26200: a0 = 0x100000000\n 26210: a2 = s1 + 0x100\n 26214: u64 [a2 + 0x40] = a0\n 26217: a0 = 0xffffffbc\n 26227: t0 = 1092, jump @1909\n      : @976 [@dyn 546] (gas: 1)\n 26233: jump @978 if a0 != 0\n      : @977 (gas: 1)\n 26236: jump @500\n      : @978 (gas: 14)\n 26239: a0 = u64 [s1 + 0x158]\n 26243: i32 a0 = a0 + 0x44\n 26246: a1 = u64 [0x20010]\n 26251: a4 = s1 + 0x28d8\n 26255: a5 = a4 + 0x700\n 26259: u64 [a5 + 0x20] = a1\n 26262: a1 = u64 [0x20018]\n 26267: a2 = u64 [0x20020]\n 26272: a3 = u64 [0x20028]\n 26277: u64 [a5 + 0x18] = a1\n 26280: u64 [a5 + 0x10] = a2\n 26283: a1 = s1 + 0x2fe0\n 26287: u64 [a5 + 0x8] = a3\n 26290: ra = 1094, jump @19\n      : @979 [@dyn 547] (gas: 4)\n 26296: a2 = s1 + 0x100\n 26300: a0 = u64 [a2 + 0x40]\n 26303: a0 = a0 + 0xffffffffffffff9c\n 26306: t0 = 1096, jump @1909\n      : @980 [@dyn 548] (gas: 1)\n 26312: jump @982 if a0 != 0\n      : @981 (gas: 1)\n 26315: jump @500\n      : @982 (gas: 12)\n 26318: a0 = u64 [s1 + 0x158]\n 26322: i32 a0 = a0 + 0x64\n 26325: a1 = u64 [0x20030]\n 26330: a2 = s1 + 0x28d8\n 26334: u64 [a2 + 1776] = 0\n 26338: u64 [a2 + 0x700] = a1\n 26342: a1 = 0x6f6e000000000000\n 26352: u64 [a2 + 0x6f8] = a1\n 26356: a1 = s1 + 0x2fc0\n 26360: u64 [a2 + 1768] = 0\n 26364: ra = 0x542\n 26368: jump @19\n      : @983 (gas: 28)\n 26371: a0 = u64 [s1 + 0x60]\n 26374: a0 = a0 ^ 0x1\n 26377: a3 = u64 [s1 + 0xd0]\n 26381: a1 = u64 [s1 + 0x30]\n 26384: a0 = a1 if a3 != 0\n 26387: a1 = u64 [s1 + 0x38]\n 26390: a2 = u64 [s1 + 0x68]\n 26393: a0 = a1 if a2 != 0\n 26396: a4 = u64 [s1 + 0x70]\n 26399: a1 = a3 | a4\n 26402: u64 [s1 + 0x68] = a1\n 26405: a1 = u64 [s1 + 0x80]\n 26409: a2 = a1 >> 0x3f\n 26412: u64 [s1 + 0x60] = a2\n 26415: a2 = a4 << 0x1\n 26418: u64 [s1 + 0x38] = a2\n 26421: a2 = a3 >> 0x3f\n 26424: u64 [s1 + 0x28] = a2\n 26427: a1 = a1 << 0x1\n 26430: u64 [s1 + 0x18] = a1\n 26433: a1 = u64 [s1 + 0x98]\n 26437: a2 = a1 >> 0x3f\n 26440: u64 [s1 + 0x30] = a2\n 26443: a2 = a3 << 0x1\n 26446: u64 [s1 + 0x20] = a2\n 26449: a1 = a1 << 0x1\n 26452: u64 [s1 + 0x70] = a1\n 26455: jump @1023 if a0 == 0\n      : @984 (gas: 16)\n 26459: a0 = u64 [s1 + 0x98]\n 26463: a0 = a0 & 0xffffffffffffffe0\n 26466: u64 [s1 + 0xd0] = a0\n 26470: a0 = s1 + 0x18d8\n 26474: a1 = u64 [s1 + 0x108]\n 26478: a3 = a0 + 0x600\n 26482: u64 [a3 + 0x28] = a1\n 26485: a1 = u64 [s1 + 0x100]\n 26489: u64 [a3 + 0x30] = a1\n 26492: a1 = u64 [s1 + 0xf8]\n 26496: u64 [a3 + 0x38] = a1\n 26499: a1 = s1 + 0x1f00\n 26503: a2 = u64 [s1 + 0x110]\n 26507: u64 [a3 + 0x40] = a2\n 26510: a0 = 0\n 26512: ra = 1098, jump @19\n      : @985 [@dyn 549] (gas: 7)\n 26518: a0 = sp + 0xffffffffffffffe0\n 26521: a0 = a0 & 0xffffffffffffffe0\n 26524: u64 [s1 + 0x130] = a0\n 26528: sp = a0\n 26530: a1 = 0x20\n 26533: a0 = 0\n 26535: ra = 1100, jump @34\n      : @986 [@dyn 550] (gas: 34)\n 26541: a1 = sp + 0xffffffffffffffe0\n 26544: a1 = a1 & 0xffffffffffffffe0\n 26547: u64 [s1 + 0x128] = a1\n 26551: sp = a1\n 26553: i32 a0 = a0 + 0\n 26555: i32 a2 = a1 + 0\n 26557: a1 = 0x20\n 26560: ecalli 9 // 'hash_keccak_256'\n 26562: u64 [s1 + 344] = 0x20\n 26567: a5 = 0\n 26569: u64 [s1 + 336] = 0\n 26573: u64 [s1 + 328] = 0\n 26577: u64 [s1 + 312] = 0\n 26581: u64 [s1 + 320] = 0\n 26585: a3 = u64 [s1 + 0x128]\n 26589: a0 = u64 [a3 + 0x18]\n 26592: a1 = u64 [a3 + 0x10]\n 26595: a2 = u64 [a3 + 0x8]\n 26598: a3 = u64 [a3]\n 26600: t1 = reverse a0\n 26602: t2 = reverse a1\n 26604: ra = reverse a2\n 26606: a2 = 0\n 26608: a4 = u64 [s1 + 0x138]\n 26612: a0 = reverse a3\n 26614: a3 = 0\n 26616: t0 = a0\n 26618: a1 = u64 [s1 + 0x130]\n 26622: u64 [a1 + 0x18] = a0\n 26625: u64 [s1 + 0x110] = ra\n 26629: u64 [a1 + 0x10] = ra\n 26632: u64 [a1 + 0x8] = t2\n 26635: u64 [a1] = t1\n 26637: fallthrough\n      : @987 (gas: 24)\n 26638: u64 [s1 + 0x128] = t0\n 26642: a0 = u64 [s1 + 0xd0]\n 26646: u64 [s1 + 0x138] = a4\n 26650: a0 = a4 <u a0\n 26653: a4 = a0 ^ 0x1\n 26656: u64 [s1 + 0x118] = a3\n 26660: a4 = 0x1 if a3 != 0\n 26663: u64 [s1 + 0x120] = a2\n 26667: a0 = u64 [s1 + 0x140]\n 26671: a0 = a0 | a2\n 26674: a4 = 0x1 if a0 != 0\n 26677: a1 = u64 [s1 + 0xf0]\n 26681: a0 = u64 [s1 + 0x158]\n 26685: a1 = a1 + a0\n 26688: a3 = u64 [s1 + 0xe8]\n 26692: ra = a5 + a3\n 26695: a2 = u64 [s1 + 0xd8]\n 26699: a0 = u64 [s1 + 0x150]\n 26703: a2 = a2 + a0\n 26706: a0 = u64 [s1 + 0xe0]\n 26710: a3 = a5\n 26712: a5 = u64 [s1 + 0x148]\n 26716: a0 = a0 + a5\n 26719: jump @1065 if a4 != 0\n      : @988 (gas: 23)\n 26723: a4 = u64 [s1 + 0x158]\n 26727: a4 = a1 <u a4\n 26730: ra = ra + a4\n 26733: t0 = ra ^ a3\n 26736: u64 [s1 + 0xf8] = a3\n 26740: a5 = ra <u a3\n 26743: a5 = a4 if t0 == 0\n 26746: a5 = a5 + a2\n 26749: t0 = a5 <u a2\n 26752: a3 = u64 [s1 + 0x150]\n 26756: a2 = a2 <u a3\n 26759: a0 = a0 + a2\n 26762: a0 = a0 + t0\n 26765: a2 = a1 | a5\n 26768: a0 = ra | a0\n 26771: a2 = a2 | a0\n 26774: a2 = a2 >> 0x20\n 26777: a0 = a0 | a5\n 26780: a0 = a0 << 0x20\n 26783: a0 = a0 | a2\n 26786: u64 [s1 + 0x108] = t1\n 26790: u64 [s1 + 0x100] = t2\n 26794: jump @990 if a0 == 0\n      : @989 (gas: 1)\n 26797: jump @500\n      : @990 (gas: 2)\n 26800: a0 = s1 + 0x1940\n 26804: ra = 1102, jump @17\n      : @991 [@dyn 551] (gas: 14)\n 26810: a3 = s1 + 0x18d8\n 26814: a0 = u64 [a3 + 0x80]\n 26818: a1 = u64 [a3 + 0x78]\n 26821: a2 = u64 [a3 + 0x70]\n 26824: a3 = u64 [a3 + 0x68]\n 26827: a4 = s1 + 0x30d8\n 26831: a5 = a4 + 0x700\n 26835: u64 [a5 + 0x80] = a0\n 26839: u64 [a5 + 0x78] = a1\n 26842: u64 [a5 + 0x70] = a2\n 26845: u64 [a5 + 0x68] = a3\n 26848: a1 = s1 + 0x3840\n 26852: a0 = u64 [s1 + 0x130]\n 26856: ra = 1104, jump @23\n      : @992 [@dyn 552] (gas: 53)\n 26862: t1 = u64 [s1 + 0x108]\n 26866: t1 = t1 + 0x1\n 26869: a0 = t1 <u 0x1\n 26872: t2 = u64 [s1 + 0x100]\n 26876: t2 = t2 + a0\n 26879: a0 = t1 | t2\n 26882: a0 = a0 <u 0x1\n 26885: a1 = u64 [s1 + 0x110]\n 26889: ra = a1 + a0\n 26892: a1 = ra <u a1\n 26895: a0 = u64 [s1 + 0x128]\n 26899: a0 = a0 + a1\n 26902: a1 = u64 [s1 + 0x158]\n 26906: a2 = a1 + 0x20\n 26909: u64 [s1 + 0x128] = a2\n 26913: a3 = a2 <u a1\n 26916: a1 = u64 [s1 + 0xf8]\n 26920: a2 = a1 + a3\n 26923: u64 [s1 + 0x108] = a2\n 26927: a4 = a2 <u a1\n 26930: a4 = a3 if a3 == 0\n 26933: a1 = u64 [s1 + 0x150]\n 26937: a3 = a1 + a4\n 26940: a4 = a3 <u a1\n 26943: a1 = u64 [s1 + 0x148]\n 26947: a1 = a1 + a4\n 26950: u64 [s1 + 0x148] = a1\n 26954: a1 = u64 [s1 + 0x138]\n 26958: a4 = a1 + 0x20\n 26961: a5 = a4 <u a1\n 26964: a2 = u64 [s1 + 0x118]\n 26968: a1 = a2 + a5\n 26971: a2 = a1 <u a2\n 26974: a2 = a5 if a5 == 0\n 26977: a5 = u64 [s1 + 0x120]\n 26981: a2 = a2 + a5\n 26984: a5 = a2 <u a5\n 26987: t0 = u64 [s1 + 0x140]\n 26991: t0 = t0 + a5\n 26994: u64 [s1 + 0x140] = t0\n 26998: a5 = u64 [s1 + 0x130]\n 27002: u64 [a5 + 0x8] = t2\n 27005: u64 [a5] = t1\n 27007: u64 [a5 + 0x10] = ra\n 27010: t0 = a0\n 27012: u64 [a5 + 0x18] = a0\n 27015: u64 [s1 + 0x110] = ra\n 27019: a0 = u64 [s1 + 0x128]\n 27023: u64 [s1 + 0x158] = a0\n 27027: a5 = u64 [s1 + 0x108]\n 27031: u64 [s1 + 0x150] = a3\n 27035: a3 = a1\n 27037: jump @987\n      : @993 (gas: 8)\n 27040: a2 = s1 + 0x20d8\n 27044: u64 [a2 + 544] = 0\n 27048: u64 [a2 + 536] = 0\n 27052: u64 [a2 + 528] = 0\n 27056: a1 = s1 + 0x22e0\n 27060: u64 [a2 + 520] = 0x1\n 27065: a0 = 0\n 27067: ra = 1106, jump @19\n      : @994 [@dyn 553] (gas: 36)\n 27073: a0 = sp + 0xffffffffffffffe0\n 27076: a5 = a0 & 0xffffffffffffffe0\n 27079: sp = a5\n 27081: u64 [s1 + 344] = 0\n 27085: a3 = 0\n 27087: t2 = 0\n 27089: t0 = 0\n 27091: ra = u64 [0x20108]\n 27096: t1 = u64 [0x20110]\n 27101: a0 = u64 [s1 + 0xd0]\n 27105: a1 = a0 + 0x20\n 27108: u64 [s1 + 0xf0] = a1\n 27112: a2 = a1 <u a0\n 27115: a1 = u64 [s1 + 0xc8]\n 27119: a0 = a1 + a2\n 27122: u64 [s1 + 0xe8] = a0\n 27126: a1 = a0 <u a1\n 27129: a1 = a2 if a2 == 0\n 27132: a4 = u64 [0x20118]\n 27137: a2 = u64 [0x20120]\n 27142: u64 [a5 + 0x18] = ra\n 27145: u64 [s1 + 0x118] = t1\n 27149: u64 [a5 + 0x10] = t1\n 27152: u64 [a5 + 0x8] = a4\n 27155: u64 [s1 + 0x138] = a5\n 27159: u64 [a5] = a2\n 27161: a0 = u64 [s1 + 0xc0]\n 27165: a1 = a1 + a0\n 27168: u64 [s1 + 0xe0] = a1\n 27172: a0 = a1 <u a0\n 27175: a1 = u64 [s1 + 0xb8]\n 27179: a0 = a0 + a1\n 27182: a1 = u64 [s1 + 0x158]\n 27186: u64 [s1 + 0xd8] = a0\n 27190: a0 = 0\n 27192: fallthrough\n      : @995 (gas: 24)\n 27193: u64 [s1 + 0x140] = a0\n 27197: u64 [s1 + 0x148] = a3\n 27201: u64 [s1 + 0x158] = a1\n 27205: u64 [s1 + 0x150] = t0\n 27209: u64 [s1 + 0x120] = a2\n 27213: u64 [s1 + 0x128] = a4\n 27217: u64 [s1 + 0x130] = ra\n 27221: a5 = a0\n 27223: a0 = u64 [s1 + 0xf8]\n 27227: a0 = a1 <u a0\n 27230: a2 = u64 [s1 + 0x108]\n 27234: a1 = a3 ^ a2\n 27237: a2 = a3 <u a2\n 27240: a2 = a0 if a1 == 0\n 27243: a4 = u64 [s1 + 0x100]\n 27247: a0 = a5 <u a4\n 27250: a3 = u64 [s1 + 0x110]\n 27254: a1 = t0 ^ a3\n 27257: a3 = t0 <u a3\n 27260: a3 = a0 if a1 == 0\n 27263: a0 = a5 ^ a4\n 27266: a0 = a0 | a1\n 27269: a3 = a2 if a0 == 0\n 27272: jump @1039 if a3 == 0\n      : @996 (gas: 3)\n 27276: a0 = s1 + 0x22c0\n 27280: a1 = u64 [s1 + 0x138]\n 27284: ra = 1108, jump @21\n      : @997 [@dyn 554] (gas: 1)\n 27290: t0 = 1110, jump @1940\n      : @998 [@dyn 555] (gas: 6)\n 27296: t0 = a1 <u a3\n 27299: a5 = u64 [s1 + 0xd8]\n 27303: a3 = u64 [s1 + 0x150]\n 27307: a5 = a5 + a3\n 27310: a3 = a5 + t0\n 27313: t0 = 1112, jump @1930\n      : @999 [@dyn 556] (gas: 1)\n 27319: jump @1001 if a1 == 0\n      : @1000 (gas: 1)\n 27322: jump @500\n      : @1001 (gas: 12)\n 27325: a5 = s1 + 0x20d8\n 27329: a2 = u64 [a5 + 0x200]\n 27333: a1 = u64 [a5 + 0x1f8]\n 27337: a3 = u64 [a5 + 0x1f0]\n 27341: a4 = u64 [a5 + 0x1e8]\n 27345: u64 [a5 + 0x1c8] = a4\n 27349: a4 = a5 + 0x100\n 27353: u64 [a4 + 0xd0] = a3\n 27357: u64 [a4 + 0xd8] = a1\n 27361: a1 = s1 + 0x22a0\n 27365: u64 [a4 + 0xe0] = a2\n 27369: ra = 1114, jump @19\n      : @1002 [@dyn 557] (gas: 1)\n 27375: t0 = 1116, jump @1920\n      : @1003 [@dyn 558] (gas: 12)\n 27381: t0 = u64 [s1 + 0x150]\n 27385: t0 = t0 + a2\n 27388: a2 = u64 [a5 + 0x38]\n 27391: u64 [a2 + 0x8] = t2\n 27394: u64 [a2] = t1\n 27396: u64 [a2 + 0x10] = a0\n 27399: u64 [a2 + 0x18] = ra\n 27402: u64 [a5 + 0x18] = a0\n 27405: a0 = a4\n 27407: a4 = t2\n 27409: a2 = t1\n 27411: jump @995\n      : @1004 (gas: 3)\n 27414: a0 = s1 + 0x2920\n 27418: a1 = 0x40\n 27421: ra = 1118, jump @17\n      : @1005 [@dyn 559] (gas: 11)\n 27427: a0 = s1 + 0x28d8\n 27431: a1 = u64 [a0 + 0x60]\n 27434: u64 [s1 + 0x150] = a1\n 27438: a1 = u64 [a0 + 0x58]\n 27441: u64 [s1 + 0x148] = a1\n 27445: a1 = u64 [a0 + 0x50]\n 27448: u64 [s1 + 0x140] = a1\n 27452: a0 = u64 [a0 + 0x48]\n 27455: u64 [s1 + 0x158] = a0\n 27459: ecalli 12 // 'return_data_size'\n 27461: fallthrough\n      : @1006 (gas: 13)\n 27462: a4 = s1 + 0x100\n 27466: a1 = u64 [a4 + 0x50]\n 27469: a2 = u64 [a4 + 0x40]\n 27472: a1 = a1 | a2\n 27475: a3 = u64 [a4 + 0x48]\n 27478: a2 = u64 [a4 + 0x58]\n 27481: a2 = a2 | a3\n 27484: a2 = a2 | a1\n 27487: a2 = a2 >> 0x20\n 27490: a1 = a1 | a3\n 27493: a1 = a1 << 0x20\n 27496: a1 = a1 | a2\n 27499: jump @1008 if a1 == 0\n      : @1007 (gas: 1)\n 27502: jump @500\n      : @1008 (gas: 2)\n 27505: a1 = a0 >> 0x20\n 27508: jump @1010 if a1 == 0\n      : @1009 (gas: 1)\n 27511: jump @500\n      : @1010 (gas: 6)\n 27514: a1 = a0\n 27516: u64 [s1 + 0x148] = a0\n 27520: i32 a0 = a0 + 0\n 27522: u64 [s1 + 0x150] = a0\n 27526: a0 = u64 [s1 + 0x158]\n 27530: ra = 1120, jump @34\n      : @1011 [@dyn 560] (gas: 11)\n 27536: a1 = s1 + 0x38d8\n 27540: a2 = u64 [s1 + 0x148]\n 27544: u32 [a1 + 0x468] = a2\n 27548: i32 a0 = a0 + 0\n 27550: a1 = s1 + 0x4000\n 27554: i32 a1 = a1 + 0xfffffffffffffd40\n 27558: a2 = 0\n 27560: ecalli 11 // 'return_data_copy'\n 27562: a0 = s1 + 0x38d8\n 27566: a0 = i32 [a0 + 0x468]\n 27570: jump @1032\n      : @1012 (gas: 7)\n 27573: u64 [s1 + 728] = 0\n 27577: u64 [s1 + 720] = 0\n 27581: u64 [s1 + 712] = 0\n 27585: a1 = s1 + 0x2c0\n 27589: u64 [s1 + 704] = 0\n 27593: a0 = 0\n 27595: ra = 1122, jump @19\n      : @1013 [@dyn 561] (gas: 36)\n 27601: a0 = sp + 0xffffffffffffffe0\n 27604: a5 = a0 & 0xffffffffffffffe0\n 27607: sp = a5\n 27609: u64 [s1 + 344] = 0\n 27613: a3 = 0\n 27615: t2 = 0\n 27617: t0 = 0\n 27619: ra = u64 [0x201a8]\n 27624: t1 = u64 [0x201b0]\n 27629: a0 = u64 [s1 + 0xd0]\n 27633: a1 = a0 + 0x20\n 27636: u64 [s1 + 0xf0] = a1\n 27640: a2 = a1 <u a0\n 27643: a1 = u64 [s1 + 0xc8]\n 27647: a0 = a1 + a2\n 27650: u64 [s1 + 0xe8] = a0\n 27654: a1 = a0 <u a1\n 27657: a1 = a2 if a2 == 0\n 27660: a4 = u64 [0x201b8]\n 27665: a2 = u64 [0x201c0]\n 27670: u64 [a5 + 0x18] = ra\n 27673: u64 [s1 + 0x118] = t1\n 27677: u64 [a5 + 0x10] = t1\n 27680: u64 [a5 + 0x8] = a4\n 27683: u64 [s1 + 0x138] = a5\n 27687: u64 [a5] = a2\n 27689: a0 = u64 [s1 + 0xc0]\n 27693: a1 = a1 + a0\n 27696: u64 [s1 + 0xe0] = a1\n 27700: a0 = a1 <u a0\n 27703: a1 = u64 [s1 + 0xb8]\n 27707: a0 = a0 + a1\n 27710: a1 = u64 [s1 + 0x158]\n 27714: u64 [s1 + 0xd8] = a0\n 27718: a0 = 0\n 27720: fallthrough\n      : @1014 (gas: 24)\n 27721: u64 [s1 + 0x140] = a0\n 27725: u64 [s1 + 0x148] = a3\n 27729: u64 [s1 + 0x158] = a1\n 27733: u64 [s1 + 0x150] = t0\n 27737: u64 [s1 + 0x120] = a2\n 27741: u64 [s1 + 0x128] = a4\n 27745: u64 [s1 + 0x130] = ra\n 27749: a5 = a0\n 27751: a0 = u64 [s1 + 0xf8]\n 27755: a0 = a1 <u a0\n 27758: a2 = u64 [s1 + 0x108]\n 27762: a1 = a3 ^ a2\n 27765: a2 = a3 <u a2\n 27768: a2 = a0 if a1 == 0\n 27771: a4 = u64 [s1 + 0x100]\n 27775: a0 = a5 <u a4\n 27778: a3 = u64 [s1 + 0x110]\n 27782: a1 = t0 ^ a3\n 27785: a3 = t0 <u a3\n 27788: a3 = a0 if a1 == 0\n 27791: a0 = a5 ^ a4\n 27794: a0 = a0 | a1\n 27797: a3 = a2 if a0 == 0\n 27800: jump @1050 if a3 == 0\n      : @1015 (gas: 3)\n 27804: a0 = s1 + 0x2a0\n 27808: a1 = u64 [s1 + 0x138]\n 27812: ra = 1124, jump @21\n      : @1016 [@dyn 562] (gas: 1)\n 27818: t0 = 1126, jump @1940\n      : @1017 [@dyn 563] (gas: 6)\n 27824: t0 = a1 <u a3\n 27827: a5 = u64 [s1 + 0xd8]\n 27831: a3 = u64 [s1 + 0x150]\n 27835: a5 = a5 + a3\n 27838: a3 = a5 + t0\n 27841: t0 = 1128, jump @1930\n      : @1018 [@dyn 564] (gas: 1)\n 27847: jump @1020 if a1 == 0\n      : @1019 (gas: 1)\n 27850: jump @500\n      : @1020 (gas: 11)\n 27853: a5 = s1 + 0x200\n 27857: a2 = u64 [a5 + 0xb8]\n 27861: a1 = u64 [a5 + 0xb0]\n 27865: a3 = u64 [a5 + 0xa8]\n 27869: a4 = u64 [a5 + 0xa0]\n 27873: u64 [a5 + 0x80] = a4\n 27877: u64 [a5 + 0x88] = a3\n 27881: u64 [a5 + 0x90] = a1\n 27885: a1 = s1 + 0x280\n 27889: u64 [a5 + 0x98] = a2\n 27893: ra = 1130, jump @19\n      : @1021 [@dyn 565] (gas: 1)\n 27899: t0 = 1132, jump @1920\n      : @1022 [@dyn 566] (gas: 12)\n 27905: t0 = u64 [s1 + 0x150]\n 27909: t0 = t0 + a2\n 27912: a2 = u64 [a5 + 0x38]\n 27915: u64 [a2 + 0x8] = t2\n 27918: u64 [a2] = t1\n 27920: u64 [a2 + 0x10] = a0\n 27923: u64 [a2 + 0x18] = ra\n 27926: u64 [a5 + 0x18] = a0\n 27929: a0 = a4\n 27931: a4 = t2\n 27933: a2 = t1\n 27935: jump @1014\n      : @1023 (gas: 6)\n 27938: a0 = u64 [s1 + 0x98]\n 27942: a1 = u64 [s1 + 0x80]\n 27946: a0 = a0 | a1\n 27949: a1 = u64 [s1 + 0x68]\n 27952: a0 = a0 | a1\n 27955: jump @1074 if a0 != 0\n      : @1024 (gas: 5)\n 27959: u64 [s1 + 264] = 0\n 27963: u64 [s1 + 256] = 0\n 27967: u64 [s1 + 272] = 0\n 27971: u64 [s1 + 280] = 0\n 27975: jump @1078\n      : @1025 (gas: 2)\n 27978: ecalli 12 // 'return_data_size'\n 27980: fallthrough\n      : @1026 (gas: 12)\n 27981: a1 = u64 [s1 + 0x158]\n 27985: a3 = u64 [s1 + 0x100]\n 27989: a1 = a1 | a3\n 27992: a2 = u64 [s1 + 0xf8]\n 27996: a4 = u64 [s1 + 0xd0]\n 28000: a2 = a2 | a4\n 28003: a1 = a1 | a2\n 28006: a1 = a1 >> 0x20\n 28009: a2 = a2 | a3\n 28012: a2 = a2 << 0x20\n 28015: a1 = a1 | a2\n 28018: jump @1028 if a1 == 0\n      : @1027 (gas: 1)\n 28021: jump @500\n      : @1028 (gas: 2)\n 28024: a1 = a0 >> 0x20\n 28027: jump @1030 if a1 == 0\n      : @1029 (gas: 1)\n 28030: jump @500\n      : @1030 (gas: 6)\n 28033: a1 = a0\n 28035: u64 [s1 + 0x148] = a0\n 28039: i32 a0 = a0 + 0\n 28041: u64 [s1 + 0x150] = a0\n 28045: a0 = u64 [s1 + 0x158]\n 28049: ra = 1134, jump @34\n      : @1031 [@dyn 567] (gas: 11)\n 28055: a1 = s1 + 0x38d8\n 28059: a2 = u64 [s1 + 0x148]\n 28063: u32 [a1 + 0x528] = a2\n 28067: i32 a0 = a0 + 0\n 28069: a1 = s1 + 0x4000\n 28073: i32 a1 = a1 + 0xfffffffffffffe00\n 28077: a2 = 0\n 28079: ecalli 11 // 'return_data_copy'\n 28081: a0 = s1 + 0x38d8\n 28085: a0 = i32 [a0 + 0x528]\n 28089: fallthrough\n      : @1032 (gas: 2)\n 28090: a1 = u64 [s1 + 0x150]\n 28094: jump @1034 if a0 >=u a1\n      : @1033 (gas: 1)\n 28097: jump @500\n      : @1034 (gas: 2)\n 28100: ecalli 12 // 'return_data_size'\n 28102: fallthrough\n      : @1035 (gas: 3)\n 28103: a1 = a0\n 28105: a0 = a0 >> 0x20\n 28108: jump @1037 if a0 == 0\n      : @1036 (gas: 1)\n 28111: jump @500\n      : @1037 (gas: 3)\n 28114: a0 = u64 [s1 + 0x158]\n 28118: u64 [s1 + 0x150] = a1\n 28122: ra = 1136, jump @34\n      : @1038 [@dyn 568] (gas: 6)\n 28128: i32 a1 = a0 + 0\n 28130: a2 = i32 [s1 + 0x150]\n 28134: a0 = 0x1\n 28137: ra = 0x472\n 28141: ecalli 13 // 'seal_return'\n 28143: fallthrough\n      : @1039 [@dyn 569] (gas: 7)\n 28144: a1 = s1 + 0x100\n 28148: a0 = u64 [a1 + 0x58]\n 28151: a3 = u64 [a1 + 0x48]\n 28154: a5 = u64 [a1 + 0x40]\n 28157: a4 = u64 [a1 + 0x50]\n 28160: t0 = 0x474\n 28164: jump @1969\n      : @1040 (gas: 1)\n 28167: t0 = 1140, jump @1969\n      : @1041 [@dyn 570] (gas: 17)\n 28173: a5 = s1 + 0x20d8\n 28177: a1 = u64 [s1 + 0xd0]\n 28181: u64 [a5 + 0x188] = a1\n 28185: u64 [a5 + 0x168] = a0\n 28189: a0 = u64 [s1 + 0xc8]\n 28193: u64 [a5 + 0x190] = a0\n 28197: a0 = u64 [s1 + 0xc0]\n 28201: u64 [a5 + 0x198] = a0\n 28205: u64 [a5 + 0x170] = a2\n 28209: a0 = u64 [s1 + 0xb8]\n 28213: a2 = a5 + 0x100\n 28217: u64 [a2 + 0xa0] = a0\n 28221: u64 [a2 + 0x78] = a3\n 28224: a0 = s1 + 0x2260\n 28228: a1 = s1 + 0x2240\n 28232: u64 [a2 + 0x80] = a4\n 28236: ra = 1142, jump @1521\n      : @1042 [@dyn 571] (gas: 3)\n 28242: a0 = s1 + 0x2220\n 28246: a1 = 0x40\n 28249: ra = 1144, jump @17\n      : @1043 [@dyn 572] (gas: 7)\n 28255: a1 = s1 + 0x20d8\n 28259: a4 = a1 + 0x100\n 28263: a2 = u64 [a4 + 0x60]\n 28266: a3 = u64 [a4 + 0x58]\n 28269: a0 = u64 [a4 + 0x50]\n 28272: a1 = u64 [a4 + 0x48]\n 28275: t0 = 1146, jump @1938\n      : @1044 [@dyn 573] (gas: 1)\n 28281: jump @1046 if a0 == 0\n      : @1045 (gas: 1)\n 28284: jump @500\n      : @1046 (gas: 8)\n 28287: a2 = s1 + 0x20d8\n 28291: u64 [a2 + 320] = 0\n 28295: u64 [a2 + 312] = 0\n 28299: u64 [a2 + 304] = 0\n 28303: a1 = s1 + 0x2200\n 28307: u64 [a2 + 296] = 0x20\n 28312: a0 = u64 [s1 + 0x158]\n 28316: ra = 1148, jump @19\n      : @1047 [@dyn 574] (gas: 1)\n 28322: t0 = 1150, jump @1935\n      : @1048 [@dyn 575] (gas: 17)\n 28328: u64 [a1 + 0xd0] = a2\n 28332: u64 [a1 + 0xc8] = a0\n 28336: a0 = u64 [s1 + 0xb8]\n 28340: u64 [a1 + 0x100] = a0\n 28344: a0 = u64 [s1 + 0xc0]\n 28348: u64 [a1 + 0xf8] = a0\n 28352: a0 = u64 [s1 + 0xc8]\n 28356: u64 [a1 + 0xf0] = a0\n 28360: a0 = u64 [s1 + 0xd0]\n 28364: u64 [a1 + 0xe8] = a0\n 28368: u64 [a1 + 0xd8] = a3\n 28372: a3 = a1\n 28374: a0 = s1 + 0x21e0\n 28378: a1 = s1 + 0x21c0\n 28382: a2 = s1 + 0x21a0\n 28386: u64 [a3 + 0xe0] = a4\n 28390: ra = 1152, jump @1435\n      : @1049 [@dyn 576] (gas: 6)\n 28396: a1 = s1 + 0x20d8\n 28400: a0 = u64 [a1 + 0x110]\n 28404: t0 = u64 [a1 + 0x120]\n 28408: t1 = u64 [a1 + 0x108]\n 28412: a3 = u64 [a1 + 0x118]\n 28416: jump @1061\n      : @1050 (gas: 7)\n 28419: a1 = s1 + 0x100\n 28423: a0 = u64 [a1 + 0x58]\n 28426: a3 = u64 [a1 + 0x48]\n 28429: a5 = u64 [a1 + 0x40]\n 28432: a4 = u64 [a1 + 0x50]\n 28435: t0 = 0x482\n 28439: jump @1969\n      : @1051 (gas: 1)\n 28442: t0 = 1154, jump @1969\n      : @1052 [@dyn 577] (gas: 15)\n 28448: a1 = u64 [s1 + 0xd0]\n 28452: u64 [s1 + 0x240] = a1\n 28456: u64 [s1 + 0x220] = a0\n 28460: a0 = u64 [s1 + 0xc8]\n 28464: u64 [s1 + 0x248] = a0\n 28468: a0 = u64 [s1 + 0xc0]\n 28472: u64 [s1 + 0x250] = a0\n 28476: u64 [s1 + 0x228] = a2\n 28480: a0 = u64 [s1 + 0xb8]\n 28484: u64 [s1 + 0x258] = a0\n 28488: u64 [s1 + 0x230] = a3\n 28492: a0 = s1 + 0x240\n 28496: a1 = s1 + 0x220\n 28500: u64 [s1 + 0x238] = a4\n 28504: ra = 1156, jump @1521\n      : @1053 [@dyn 578] (gas: 3)\n 28510: a0 = s1 + 0x200\n 28514: a1 = 0x40\n 28517: ra = 1158, jump @17\n      : @1054 [@dyn 579] (gas: 6)\n 28523: a4 = s1 + 0x200\n 28527: a2 = u64 [a4 + 0x18]\n 28530: a3 = u64 [a4 + 0x10]\n 28533: a0 = u64 [a4 + 0x8]\n 28536: a1 = u64 [a4]\n 28538: t0 = 1160, jump @1938\n      : @1055 [@dyn 580] (gas: 1)\n 28544: jump @1057 if a0 == 0\n      : @1056 (gas: 1)\n 28547: jump @500\n      : @1057 (gas: 7)\n 28550: u64 [s1 + 504] = 0\n 28554: u64 [s1 + 496] = 0\n 28558: u64 [s1 + 488] = 0\n 28562: a1 = s1 + 0x1e0\n 28566: u64 [s1 + 480] = 0x20\n 28571: a0 = u64 [s1 + 0x158]\n 28575: ra = 1162, jump @19\n      : @1058 [@dyn 581] (gas: 5)\n 28581: a1 = u64 [s1 + 0x158]\n 28585: a0 = a1 + 0x20\n 28588: a1 = a0 <u a1\n 28591: a3 = u64 [s1 + 0x150]\n 28595: t0 = 1164, jump @1991\n      : @1059 [@dyn 582] (gas: 21)\n 28601: a1 = u64 [s1 + 0x140]\n 28605: a3 = a3 + a1\n 28608: a1 = a3 <u a1\n 28611: a4 = u64 [s1 + 0x148]\n 28615: a4 = a4 + a1\n 28618: u64 [s1 + 0x188] = a2\n 28622: u64 [s1 + 0x180] = a0\n 28626: a0 = u64 [s1 + 0xb8]\n 28630: u64 [s1 + 0x1b8] = a0\n 28634: a0 = u64 [s1 + 0xc0]\n 28638: u64 [s1 + 0x1b0] = a0\n 28642: a0 = u64 [s1 + 0xc8]\n 28646: u64 [s1 + 0x1a8] = a0\n 28650: a0 = u64 [s1 + 0xd0]\n 28654: u64 [s1 + 0x1a0] = a0\n 28658: u64 [s1 + 0x190] = a3\n 28662: a0 = s1 + 0x1c0\n 28666: a1 = s1 + 0x1a0\n 28670: a2 = s1 + 0x180\n 28674: u64 [s1 + 0x198] = a4\n 28678: ra = 1166, jump @1435\n      : @1060 [@dyn 583] (gas: 5)\n 28684: a0 = u64 [s1 + 0x1c8]\n 28688: t0 = u64 [s1 + 0x1d8]\n 28692: t1 = u64 [s1 + 0x1c0]\n 28696: a3 = u64 [s1 + 0x1d0]\n 28700: fallthrough\n      : @1061 (gas: 28)\n 28701: a1 = u64 [s1 + 0x150]\n 28705: a4 = a0 ^ a1\n 28708: a5 = a0 <u a1\n 28711: ra = a1\n 28713: t2 = u64 [s1 + 0x158]\n 28717: a1 = t1 <u t2\n 28720: a5 = a1 if a4 == 0\n 28723: a2 = u64 [s1 + 0x140]\n 28727: a4 = a3 - a2\n 28730: a3 = a3 <u a2\n 28733: a2 = u64 [s1 + 0x148]\n 28737: a2 = t0 - a2\n 28740: a2 = a2 - a3\n 28743: a3 = a4 <u a5\n 28746: a2 = a2 - a3\n 28749: a4 = a4 - a5\n 28752: a0 = a0 - ra\n 28755: a0 = a0 - a1\n 28758: a1 = t1 - t2\n 28761: a0 = a0 | a2\n 28764: a2 = a1\n 28766: a1 = a1 | a4\n 28769: a1 = a1 | a0\n 28772: a0 = a0 | a4\n 28775: a1 = a1 >> 0x20\n 28778: a0 = a0 << 0x20\n 28781: a0 = a0 | a1\n 28784: jump @1063 if a0 == 0\n      : @1062 (gas: 1)\n 28787: jump @500\n      : @1063 (gas: 4)\n 28790: a0 = u64 [s1 + 0x158]\n 28794: a1 = a2\n 28796: u64 [s1 + 0x150] = a2\n 28800: ra = 1168, jump @34\n      : @1064 [@dyn 584] (gas: 5)\n 28806: i32 a1 = a0 + 0\n 28808: a2 = i32 [s1 + 0x150]\n 28812: a0 = 0\n 28814: ecalli 13 // 'seal_return'\n 28816: jump @1213\n      : @1065 (gas: 10)\n 28819: t1 = u64 [s1 + 0x150]\n 28823: t0 = u64 [s1 + 0x158]\n 28827: a4 = u64 [s1 + 0x98]\n 28831: a5 = u64 [s1 + 0xd0]\n 28835: a4 = a4 ^ a5\n 28838: a5 = u64 [s1 + 0x80]\n 28842: a4 = a4 | a5\n 28845: a5 = u64 [s1 + 0x68]\n 28848: a4 = a4 | a5\n 28851: jump @1073 if a4 == 0\n      : @1066 (gas: 19)\n 28855: t2 = a3\n 28857: a4 = a1 <u t0\n 28860: a3 = ra + a4\n 28863: t0 = a3 ^ t2\n 28866: a5 = a3 <u t2\n 28869: a5 = a4 if t0 == 0\n 28872: a5 = a5 + a2\n 28875: a4 = a5 <u a2\n 28878: a2 = a2 <u t1\n 28881: a0 = a0 + a2\n 28884: a0 = a0 + a4\n 28887: a2 = a1 | a5\n 28890: a0 = a0 | a3\n 28893: a2 = a2 | a0\n 28896: a2 = a2 >> 0x20\n 28899: a0 = a0 | a5\n 28902: a0 = a0 << 0x20\n 28905: a0 = a0 | a2\n 28908: jump @1068 if a0 == 0\n      : @1067 (gas: 1)\n 28911: jump @500\n      : @1068 (gas: 2)\n 28914: a0 = s1 + 0x1ee0\n 28918: ra = 1170, jump @17\n      : @1069 [@dyn 585] (gas: 18)\n 28924: a0 = s1 + 0x18d8\n 28928: a2 = a0 + 0x600\n 28932: a1 = u64 [a2 + 0x20]\n 28935: u64 [s1 + 0x150] = a1\n 28939: a1 = u64 [a2 + 0x18]\n 28942: u64 [s1 + 0x148] = a1\n 28946: a1 = u64 [a2 + 0x10]\n 28949: u64 [s1 + 0x140] = a1\n 28953: a0 = u64 [a2 + 0x8]\n 28956: u64 [s1 + 0x138] = a0\n 28960: a0 = u64 [s1 + 0x98]\n 28964: a0 = a0 << 0x3b\n 28967: a1 = a0 >> 0x38\n 28970: u64 [s1 + 0x158] = a1\n 28974: a2 = 0x80 - a1\n 28978: a0 = 0xffffffffffffffff\n 28981: a1 = 0xffffffffffffffff\n 28984: ra = 1172, jump @2025\n      : @1070 [@dyn 586] (gas: 6)\n 28990: u64 [s1 + 0x128] = a0\n 28994: u64 [s1 + 0x110] = a1\n 28998: a0 = 0xffffffffffffffff\n 29001: a1 = 0xffffffffffffffff\n 29004: a2 = u64 [s1 + 0x158]\n 29008: ra = 1174, jump @2020\n      : @1071 [@dyn 587] (gas: 10)\n 29014: u64 [s1 + 0x118] = a0\n 29018: u64 [s1 + 0x120] = a1\n 29022: a0 = u64 [s1 + 0x110]\n 29026: a0 = a0 | a1\n 29029: u64 [s1 + 0x110] = a0\n 29033: a0 = u64 [s1 + 0x158]\n 29037: a2 = a0 + 0xffffffffffffff80\n 29040: a0 = 0xffffffffffffffff\n 29043: a1 = 0xffffffffffffffff\n 29046: ra = 1176, jump @2020\n      : @1072 [@dyn 588] (gas: 30)\n 29052: a4 = u64 [s1 + 0x158]\n 29056: a2 = a4 <u 0x80\n 29060: a3 = u64 [s1 + 0x110]\n 29064: a1 = a3 if a2 != 0\n 29067: a5 = u64 [s1 + 0x118]\n 29071: a3 = u64 [s1 + 0x128]\n 29075: a3 = a3 | a5\n 29078: a3 = a0 if a2 == 0\n 29081: a1 = 0xffffffffffffffff if a4 == 0\n 29084: a3 = 0xffffffffffffffff if a4 == 0\n 29087: a4 = u64 [s1 + 0x120]\n 29091: a4 = 0 if a2 == 0\n 29093: a5 = 0 if a2 == 0\n 29095: a0 = u64 [s1 + 0x138]\n 29099: a0 = a0 & ~a3\n 29102: a2 = u64 [s1 + 0x140]\n 29106: a1 = a2 & ~a1\n 29109: a2 = u64 [s1 + 0x148]\n 29113: a2 = a2 & ~a5\n 29116: a3 = u64 [s1 + 0x150]\n 29120: a3 = a3 & ~a4\n 29123: a4 = s1 + 0x30d8\n 29127: a5 = a4 + 0x700\n 29131: u64 [a5 + 0xa0] = a3\n 29135: u64 [a5 + 0x98] = a2\n 29139: u64 [a5 + 0x90] = a1\n 29143: u64 [a5 + 0x88] = a0\n 29147: a1 = s1 + 0x3860\n 29151: a0 = u64 [s1 + 0x130]\n 29155: ra = 1178, jump @23\n      : @1073 [@dyn 589] (gas: 19)\n 29161: a0 = u64 [s1 + 0x60]\n 29164: a1 = u64 [s1 + 0x38]\n 29167: a0 = a0 | a1\n 29170: a1 = u64 [s1 + 0x28]\n 29173: a2 = u64 [s1 + 0x18]\n 29176: a1 = a1 | a2\n 29179: a2 = u64 [s1 + 0x30]\n 29182: a3 = u64 [s1 + 0x20]\n 29185: a2 = a2 | a3\n 29188: a3 = u64 [s1 + 0x70]\n 29191: a3 = a3 + 0x1\n 29194: a4 = s1 + 0x30d8\n 29198: a5 = a4 + 0x700\n 29202: u64 [a5 + 0xa8] = a3\n 29206: u64 [a5 + 0xb0] = a2\n 29210: u64 [a5 + 0xb8] = a1\n 29214: u64 [a5 + 0xc0] = a0\n 29218: a0 = 0x3880\n 29222: jump @1083\n      : @1074 (gas: 10)\n 29225: a0 = u64 [s1 + 0xe0]\n 29229: a1 = u64 [s1 + 0xd8]\n 29233: a0 = a0 | a1\n 29236: a1 = 0xffffffe0\n 29246: a2 = u64 [s1 + 0xf0]\n 29250: a1 = a2 <u a1\n 29253: a2 = u64 [s1 + 0xe8]\n 29257: a1 = 0 if a2 != 0\n 29259: a1 = 0 if a0 != 0\n 29261: jump @1076 if a1 != 0\n      : @1075 (gas: 1)\n 29264: jump @500\n      : @1076 (gas: 4)\n 29267: a0 = u64 [s1 + 0xf0]\n 29271: i32 a1 = a0 + 0x20\n 29274: a0 = s1 + 0x1f20\n 29278: ra = 1180, jump @17\n      : @1077 [@dyn 590] (gas: 12)\n 29284: a0 = s1 + 0x18d8\n 29288: a2 = a0 + 0x600\n 29292: a1 = u64 [a2 + 0x60]\n 29295: a3 = s1 + 0x100\n 29299: u64 [a3 + 0x18] = a1\n 29302: a1 = u64 [a2 + 0x58]\n 29305: u64 [a3 + 0x10] = a1\n 29308: a1 = u64 [a2 + 0x50]\n 29311: u64 [a3] = a1\n 29313: a0 = u64 [a2 + 0x48]\n 29316: u64 [a3 + 0x8] = a0\n 29319: fallthrough\n      : @1078 (gas: 19)\n 29320: a0 = u64 [s1 + 0x28]\n 29323: a1 = u64 [s1 + 0x18]\n 29326: a0 = a0 | a1\n 29329: u64 [s1 + 0x150] = a0\n 29333: a0 = u64 [s1 + 0x60]\n 29336: a1 = u64 [s1 + 0x38]\n 29339: a0 = a0 | a1\n 29342: u64 [s1 + 0x148] = a0\n 29346: a0 = u64 [s1 + 0x30]\n 29349: a1 = u64 [s1 + 0x20]\n 29352: a0 = a0 | a1\n 29355: u64 [s1 + 0x140] = a0\n 29359: a1 = u64 [s1 + 0x98]\n 29363: a1 = a1 << 0x3\n 29366: u64 [s1 + 0x158] = a1\n 29370: i32 a2 = 0x80 - a1\n 29374: a0 = 0xffffffffffffffff\n 29377: a1 = 0xffffffffffffffff\n 29380: ra = 1182, jump @2025\n      : @1079 [@dyn 591] (gas: 7)\n 29386: u64 [s1 + 0x120] = a0\n 29390: u64 [s1 + 0x138] = a1\n 29394: a0 = u64 [s1 + 0x98]\n 29398: i32 a2 = a0 << 0x3\n 29401: a0 = 0xffffffffffffffff\n 29404: a1 = 0xffffffffffffffff\n 29407: ra = 1184, jump @2020\n      : @1080 [@dyn 592] (gas: 10)\n 29413: u64 [s1 + 0x130] = a0\n 29417: u64 [s1 + 0x128] = a1\n 29421: a1 = u64 [s1 + 0x120]\n 29425: a0 = a0 | a1\n 29428: u64 [s1 + 0x120] = a0\n 29432: a0 = u64 [s1 + 0x158]\n 29436: i32 a2 = a0 + 0xffffffffffffff80\n 29439: a0 = 0xffffffffffffffff\n 29442: a1 = 0xffffffffffffffff\n 29445: ra = 1186, jump @2020\n      : @1081 [@dyn 593] (gas: 7)\n 29451: a4 = u64 [s1 + 0x158]\n 29455: a2 = a4 <u 0x80\n 29459: a3 = u64 [s1 + 0x120]\n 29463: a0 = a3 if a2 != 0\n 29466: a5 = u64 [s1 + 0x128]\n 29470: a3 = u64 [s1 + 0x138]\n 29474: t0 = 1188, jump @1964\n      : @1082 [@dyn 594] (gas: 27)\n 29480: a4 = u64 [s1 + 0x130]\n 29484: a4 = 0 if a2 == 0\n 29486: a1 = u64 [s1 + 0x100]\n 29490: a1 = a1 & ~a3\n 29493: a2 = u64 [s1 + 0x108]\n 29497: a0 = a2 & ~a0\n 29500: a2 = u64 [s1 + 0x110]\n 29504: a2 = a2 & ~a4\n 29507: a3 = u64 [s1 + 0x118]\n 29511: a3 = a3 & ~a5\n 29514: a4 = u64 [s1 + 0x70]\n 29517: a0 = a0 | a4\n 29520: a5 = s1 + 0x100\n 29524: a4 = u64 [a5 + 0x40]\n 29527: a1 = a1 | a4\n 29530: a4 = u64 [a5 + 0x48]\n 29533: a3 = a3 | a4\n 29536: a4 = u64 [a5 + 0x50]\n 29539: a2 = a2 | a4\n 29542: a4 = s1 + 0x30d8\n 29546: a5 = a4 + 0x700\n 29550: u64 [a5 + 0xd8] = a2\n 29554: u64 [a5 + 0xe0] = a3\n 29558: u64 [a5 + 0xd0] = a1\n 29562: u64 [a5 + 0xc8] = a0\n 29566: a0 = 0x38a0\n 29570: fallthrough\n      : @1083 (gas: 3)\n 29571: a1 = s1 + a0\n 29574: a0 = u64 [s1 + 0xa0]\n 29578: ra = 1190, jump @23\n      : @1084 [@dyn 595] (gas: 3)\n 29584: a0 = s1 + 0x1ec0\n 29588: a1 = 0x40\n 29591: ra = 1192, jump @17\n      : @1085 [@dyn 596] (gas: 7)\n 29597: a3 = s1 + 0x18d8\n 29601: a0 = u64 [a3 + 0x600]\n 29605: a5 = a3 + 0x500\n 29609: a1 = u64 [a5 + 0xf8]\n 29613: a2 = u64 [a5 + 0xf0]\n 29617: a4 = u64 [a5 + 0xe8]\n 29621: t0 = 1194, jump @1927\n      : @1086 [@dyn 597] (gas: 1)\n 29627: jump @1088 if a0 == 0\n      : @1087 (gas: 1)\n 29630: jump @500\n      : @1088 (gas: 15)\n 29633: a3 = a4\n 29635: a2 = s1 + 0x18d8\n 29639: a0 = u64 [s1 + 0xb8]\n 29643: a5 = a2 + 0x500\n 29647: u64 [a5 + 0xc8] = a0\n 29651: a0 = u64 [s1 + 0xb0]\n 29655: u64 [a5 + 0xd0] = a0\n 29659: a0 = u64 [s1 + 0xc0]\n 29663: u64 [a5 + 0xd8] = a0\n 29667: a1 = s1 + 0x1ea0\n 29671: a0 = u64 [s1 + 0xc8]\n 29675: u64 [a5 + 0xe0] = a0\n 29679: a0 = a4\n 29681: u64 [s1 + 0x158] = a3\n 29685: ra = 1196, jump @19\n      : @1089 [@dyn 598] (gas: 32)\n 29691: a0 = u64 [0x20128]\n 29696: a1 = u64 [0x20130]\n 29701: a2 = s1 + 0x18d8\n 29705: a4 = a2 + 0x500\n 29709: u64 [a4 + 0xc0] = a0\n 29713: a0 = u64 [0x20138]\n 29718: u64 [a4 + 0xb8] = a1\n 29722: a3 = u64 [0x20140]\n 29727: u64 [a4 + 0xb0] = a0\n 29731: a0 = a2\n 29733: a1 = 0x20\n 29736: a2 = s1 + 0x1e80\n 29740: u64 [a0 + 0x5a8] = a3\n 29744: a0 = u64 [s1 + 0x158]\n 29748: ra = 0x4ae\n 29752: sp = sp + 0xffffffffffffffa0\n 29755: u64 [sp + 0x58] = ra\n 29758: u64 [sp + 0x50] = s0\n 29761: u64 [sp + 0x48] = s1\n 29764: s0 = sp + 0x60\n 29767: sp = sp & 0xffffffffffffffe0\n 29770: a3 = u64 [a2]\n 29772: u64 [sp + 0x18] = a3\n 29775: a3 = u64 [a2 + 0x8]\n 29778: u64 [sp + 0x10] = a3\n 29781: a3 = u64 [a2 + 0x10]\n 29784: u64 [sp + 0x8] = a3\n 29787: a2 = u64 [a2 + 0x18]\n 29790: u64 [sp] = a2\n 29792: s1 = a1\n 29794: ra = 0x8\n 29797: jump @34\n      : @1090 [@dyn 599] (gas: 8)\n 29800: a0 = u64 [s1 + 0x50]\n 29803: a1 = u64 [s1 + 0x40]\n 29806: a0 = a0 | a1\n 29809: a1 = u64 [s1 + 0x58]\n 29812: a2 = u64 [s1 + 0x48]\n 29815: a1 = a1 | a2\n 29818: a0 = a0 | a1\n 29821: jump @1110 if a0 != 0\n      : @1091 (gas: 3)\n 29825: a0 = s1 + 0x19e0\n 29829: a1 = 0x40\n 29832: ra = 1200, jump @17\n      : @1092 [@dyn 600] (gas: 7)\n 29838: a0 = s1 + 0x18d8\n 29842: a5 = a0 + 0x100\n 29846: a3 = u64 [a5 + 0x20]\n 29849: a4 = u64 [a5 + 0x18]\n 29852: a2 = u64 [a5 + 0x10]\n 29855: a1 = u64 [a5 + 0x8]\n 29858: t0 = 1202, jump @1916\n      : @1093 [@dyn 601] (gas: 1)\n 29864: jump @1095 if a0 == 0\n      : @1094 (gas: 1)\n 29867: jump @500\n      : @1095 (gas: 9)\n 29870: a2 = s1 + 0x18d8\n 29874: u64 [a2 + 248] = 0\n 29878: u64 [a2 + 240] = 0\n 29882: u64 [a2 + 232] = 0\n 29886: a0 = 0x8c379a000000000\n 29896: a1 = s1 + 0x19c0\n 29900: u64 [a2 + 0x100] = a0\n 29904: a0 = u64 [s1 + 0x158]\n 29908: ra = 1204, jump @19\n      : @1096 [@dyn 602] (gas: 1)\n 29914: t0 = 1206, jump @1910\n      : @1097 [@dyn 603] (gas: 1)\n 29920: jump @1099 if a0 != 0\n      : @1098 (gas: 1)\n 29923: jump @500\n      : @1099 (gas: 9)\n 29926: a0 = u64 [s1 + 0x158]\n 29930: i32 a0 = a0 + 0x4\n 29933: a2 = s1 + 0x18d8\n 29937: u64 [a2 + 224] = 0\n 29941: u64 [a2 + 216] = 0\n 29945: u64 [a2 + 200] = 0x20\n 29950: a1 = s1 + 0x19a0\n 29954: u64 [a2 + 208] = 0\n 29958: ra = 1208, jump @19\n      : @1100 [@dyn 604] (gas: 4)\n 29964: a2 = s1 + 0x100\n 29968: a0 = u64 [a2 + 0x40]\n 29971: a0 = a0 + 0xffffffffffffffdc\n 29974: t0 = 1210, jump @1909\n      : @1101 [@dyn 605] (gas: 1)\n 29980: jump @1103 if a0 != 0\n      : @1102 (gas: 1)\n 29983: jump @500\n      : @1103 (gas: 9)\n 29986: a0 = u64 [s1 + 0x158]\n 29990: i32 a0 = a0 + 0x24\n 29993: a2 = s1 + 0x18d8\n 29997: u64 [a2 + 192] = 0\n 30001: u64 [a2 + 184] = 0\n 30005: u64 [a2 + 168] = 0x1c\n 30010: a1 = s1 + 0x1980\n 30014: u64 [a2 + 176] = 0\n 30018: ra = 1212, jump @19\n      : @1104 [@dyn 606] (gas: 3)\n 30024: a0 = 0xffffffbc\n 30034: a2 = s1 + 0x100\n 30038: t0 = 1214, jump @1909\n      : @1105 [@dyn 607] (gas: 1)\n 30044: jump @1107 if a0 != 0\n      : @1106 (gas: 1)\n 30047: jump @500\n      : @1107 (gas: 13)\n 30050: a0 = u64 [s1 + 0x158]\n 30054: i32 a0 = a0 + 0x44\n 30057: a1 = u64 [0x20038]\n 30062: a2 = u64 [0x20178]\n 30067: a3 = u64 [0x20180]\n 30072: a4 = s1 + 0x18d8\n 30076: u64 [a4 + 0xa0] = a1\n 30080: u64 [a4 + 0x98] = a2\n 30084: u64 [a4 + 0x90] = a3\n 30088: a2 = 0x2077656900000000\n 30098: a1 = s1 + 0x1960\n 30102: u64 [a4 + 0x88] = a2\n 30106: ra = 1216, jump @19\n      : @1108 [@dyn 608] (gas: 3)\n 30112: a1 = 0x64\n 30115: a0 = u64 [s1 + 0x158]\n 30119: ra = 1218, jump @34\n      : @1109 [@dyn 609] (gas: 6)\n 30125: i32 a1 = a0 + 0\n 30127: a0 = 0x1\n 30130: a2 = 0x64\n 30133: ecalli 13 // 'seal_return'\n 30135: a1 = s1 + 0x38d8\n 30139: jump @1111\n      : @1110 (gas: 2)\n 30141: a1 = s1 + 0x38d8\n 30145: fallthrough\n      : @1111 (gas: 7)\n 30146: u64 [a1 + 0] = 0\n 30148: u64 [a1 + 4294967288] = 0\n 30151: u64 [a1 + 4294967280] = 0\n 30154: u64 [a1 + 4294967272] = 0x9\n 30158: a0 = s1 + 0x1e60\n 30162: a1 = s1 + 0x38c0\n 30166: ra = 1220, jump @21\n      : @1112 [@dyn 610] (gas: 38)\n 30172: a0 = s1 + 0x18d8\n 30176: a2 = a0 + 0x500\n 30180: a1 = u64 [a2 + 0x88]\n 30184: u64 [s1 + 0x158] = a1\n 30188: a1 = u64 [a2 + 0x98]\n 30192: u64 [s1 + 0x150] = a1\n 30196: a1 = u64 [a2 + 0x90]\n 30200: u64 [s1 + 0x148] = a1\n 30204: a0 = u64 [a2 + 0xa0]\n 30208: u64 [s1 + 0x140] = a0\n 30212: a0 = s1 + 0x38d8\n 30216: u64 [a0 + 32] = 0\n 30219: u64 [a0 + 24] = 0\n 30222: u64 [a0 + 16] = 0\n 30225: u64 [a0 + 8] = 0\n 30228: a0 = s1 + 0x4000\n 30232: i32 a0 = a0 + 0xfffffffffffff8e0\n 30236: ecalli 16 // 'value_transferred'\n 30238: a3 = s1 + 0x38d8\n 30242: a0 = u64 [a3 + 0x20]\n 30245: a1 = u64 [a3 + 0x10]\n 30248: a2 = u64 [a3 + 0x8]\n 30251: a3 = u64 [a3 + 0x18]\n 30254: a4 = u64 [s1 + 0x140]\n 30258: a0 = a0 ^ a4\n 30261: a4 = u64 [s1 + 0x148]\n 30265: a1 = a1 ^ a4\n 30268: a0 = a0 | a1\n 30271: a1 = u64 [s1 + 0x150]\n 30275: a1 = a1 ^ a3\n 30278: a3 = u64 [s1 + 0x158]\n 30282: a2 = a2 ^ a3\n 30285: a1 = a1 | a2\n 30288: a0 = a0 | a1\n 30291: u64 [s1 + 0x138] = a0\n 30295: a0 = s1 + 0x1e40\n 30299: a1 = 0x40\n 30302: ra = 1222, jump @17\n      : @1113 [@dyn 611] (gas: 3)\n 30308: t0 = 0x4c8\n 30312: a1 = s1 + 0x18d8\n 30316: fallthrough\n      : @1114 [@dyn 612] (gas: 12)\n 30317: a2 = a1 + 0x500\n 30321: a0 = u64 [a2 + 0x80]\n 30325: a1 = s1 + 0x100\n 30329: u64 [a1 + 0x48] = a0\n 30332: a0 = u64 [a2 + 0x78]\n 30335: u64 [a1 + 0x40] = a0\n 30338: a0 = u64 [a2 + 0x70]\n 30341: u64 [a1 + 0x50] = a0\n 30344: a0 = u64 [a2 + 0x68]\n 30347: u64 [a1 + 0x58] = a0\n 30350: a0 = u64 [a1 + 0x38]\n 30353: jump @1190 if a0 != 0\n      : @1115 (gas: 12)\n 30357: a1 = s1 + 0x18d8\n 30361: a0 = u64 [s1 + 0x158]\n 30365: a3 = a1 + 0x400\n 30369: u64 [a3 + 0xa8] = a0\n 30373: a0 = u64 [s1 + 0x150]\n 30377: u64 [a3 + 0xb0] = a0\n 30381: a0 = u64 [s1 + 0x140]\n 30385: u64 [a3 + 0xb8] = a0\n 30389: a0 = s1 + 0x1d80\n 30393: a2 = u64 [s1 + 0x148]\n 30397: u64 [a3 + 0xc0] = a2\n 30401: ra = 1226, jump @1511\n      : @1116 [@dyn 613] (gas: 13)\n 30407: a4 = s1 + 0x100\n 30411: a2 = u64 [a4 + 0x40]\n 30414: a0 = u64 [a4 + 0x58]\n 30417: a0 = a0 | a2\n 30420: a1 = u64 [a4 + 0x50]\n 30423: a3 = u64 [a4 + 0x48]\n 30426: a1 = a1 | a3\n 30429: a0 = a0 | a1\n 30432: a0 = a0 >> 0x20\n 30435: a1 = a1 | a2\n 30438: a1 = a1 << 0x20\n 30441: a0 = a0 | a1\n 30444: jump @1118 if a0 == 0\n      : @1117 (gas: 1)\n 30447: jump @500\n      : @1118 (gas: 13)\n 30450: a0 = s1 + 0x18d8\n 30454: a1 = u64 [s1 + 0xb8]\n 30458: a3 = a0 + 0x400\n 30462: u64 [a3 + 0x88] = a1\n 30466: a1 = u64 [s1 + 0xb0]\n 30470: u64 [a3 + 0x90] = a1\n 30474: a1 = u64 [s1 + 0xc0]\n 30478: u64 [a3 + 0x98] = a1\n 30482: a1 = s1 + 0x1d60\n 30486: a2 = u64 [s1 + 0xc8]\n 30490: u64 [a3 + 0xa0] = a2\n 30494: a0 = u64 [s1 + 0x158]\n 30498: ra = 1228, jump @19\n      : @1119 [@dyn 614] (gas: 5)\n 30504: a0 = u64 [s1 + 0x90]\n 30508: ra = 0x4ce\n 30512: ecalli 5 // 'caller'\n 30514: t0 = 0x4d0\n 30518: jump @1955\n      : @1120 [@dyn 615] (gas: 1)\n 30521: t0 = 1232, jump @1955\n      : @1121 [@dyn 616] (gas: 1)\n 30527: jump @1123 if a0 != 0\n      : @1122 (gas: 1)\n 30530: jump @500\n      : @1123 (gas: 1)\n 30533: t0 = 1234, jump @1939\n      : @1124 [@dyn 617] (gas: 10)\n 30539: i32 a0 = a0 + 0x20\n 30542: a2 = s1 + 0x18d8\n 30546: u64 [a2 + 1152] = 0\n 30550: a5 = a2 + 0x400\n 30554: u64 [a5 + 0x78] = a1\n 30557: u64 [a5 + 0x70] = a4\n 30560: a1 = s1 + 0x1d40\n 30564: u64 [a5 + 0x68] = a3\n 30567: u64 [s1 + 0x138] = a0\n 30571: ra = 1236, jump @19\n      : @1125 [@dyn 618] (gas: 4)\n 30577: a0 = u64 [s1 + 0x90]\n 30581: ra = 0x4d6\n 30585: ecalli 0 // 'address'\n 30586: fallthrough\n      : @1126 [@dyn 619] (gas: 4)\n 30587: a2 = s1 + 0x100\n 30591: a0 = u64 [a2 + 0x40]\n 30594: a0 = a0 + 0xffffffffffffffc0\n 30597: t0 = 1240, jump @1909\n      : @1127 [@dyn 620] (gas: 1)\n 30603: jump @1129 if a0 != 0\n      : @1128 (gas: 1)\n 30606: jump @500\n      : @1129 (gas: 1)\n 30609: t0 = 1242, jump @1939\n      : @1130 [@dyn 621] (gas: 10)\n 30615: i32 a0 = a0 + 0x40\n 30618: a2 = s1 + 0x18d8\n 30622: u64 [a2 + 1120] = 0\n 30626: a5 = a2 + 0x400\n 30630: u64 [a5 + 0x58] = a1\n 30633: u64 [a5 + 0x50] = a4\n 30636: a1 = s1 + 0x1d20\n 30640: u64 [a5 + 0x48] = a3\n 30643: u64 [s1 + 0x130] = a0\n 30647: ra = 1244, jump @19\n      : @1131 [@dyn 622] (gas: 5)\n 30653: a0 = 0x100000000\n 30663: a2 = s1 + 0x100\n 30667: u64 [a2 + 0x40] = a0\n 30670: a0 = 0xffffffa0\n 30680: t0 = 1246, jump @1909\n      : @1132 [@dyn 623] (gas: 1)\n 30686: jump @1134 if a0 != 0\n      : @1133 (gas: 1)\n 30689: jump @500\n      : @1134 (gas: 16)\n 30692: a0 = u64 [s1 + 0x158]\n 30696: i32 a3 = a0 + 0x60\n 30699: a0 = s1 + 0x18d8\n 30703: a1 = u64 [s1 + 0x40]\n 30706: a4 = a0 + 0x400\n 30710: u64 [a4 + 0x28] = a1\n 30713: a1 = u64 [s1 + 0x48]\n 30716: u64 [a4 + 0x30] = a1\n 30719: a1 = u64 [s1 + 0x50]\n 30722: u64 [a4 + 0x38] = a1\n 30725: a1 = s1 + 0x1d00\n 30729: a2 = u64 [s1 + 0x58]\n 30732: u64 [a4 + 0x40] = a2\n 30735: u64 [s1 + 0x120] = a3\n 30739: a0 = a3\n 30741: ra = 1248, jump @19\n      : @1135 [@dyn 624] (gas: 4)\n 30747: a2 = s1 + 0x100\n 30751: a0 = u64 [a2 + 0x40]\n 30754: a0 = a0 + 0xffffffffffffff80\n 30757: t0 = 1250, jump @1909\n      : @1136 [@dyn 625] (gas: 1)\n 30763: jump @1138 if a0 != 0\n      : @1137 (gas: 1)\n 30766: jump @500\n      : @1138 (gas: 11)\n 30769: a0 = u64 [s1 + 0x158]\n 30773: i32 a2 = a0 + 0x80\n 30777: a0 = s1 + 0x18d8\n 30781: u64 [a0 + 1056] = 0\n 30785: u64 [a0 + 1048] = 0\n 30789: u64 [a0 + 1040] = 0\n 30793: a1 = s1 + 0x1ce0\n 30797: u64 [a0 + 1032] = 0\n 30801: u64 [s1 + 0x110] = a2\n 30805: a0 = a2\n 30807: ra = 1252, jump @19\n      : @1139 [@dyn 626] (gas: 13)\n 30813: a0 = u64 [s1 + 0xc8]\n 30817: a2 = s1 + 0x18d8\n 30821: u64 [a2 + 0x400] = a0\n 30825: a0 = u64 [s1 + 0xc0]\n 30829: a3 = a2 + 0x300\n 30833: u64 [a3 + 0xf8] = a0\n 30837: a0 = u64 [s1 + 0xb0]\n 30841: u64 [a3 + 0xf0] = a0\n 30845: a1 = s1 + 0x1cc0\n 30849: a0 = u64 [s1 + 0xb8]\n 30853: u64 [a3 + 0xe8] = a0\n 30857: a0 = 0\n 30859: ra = 1254, jump @19\n      : @1140 [@dyn 627] (gas: 3)\n 30865: t0 = 0x4e8\n 30869: a1 = s1 + 0x18d8\n 30873: fallthrough\n      : @1141 [@dyn 628] (gas: 8)\n 30874: u64 [a1 + 992] = 0\n 30878: u64 [a1 + 984] = 0\n 30882: u64 [a1 + 968] = 0xb\n 30887: a2 = a1\n 30889: a0 = 0x20\n 30892: a1 = s1 + 0x1ca0\n 30896: u64 [a2 + 976] = 0\n 30900: ra = 1258, jump @19\n      : @1142 [@dyn 629] (gas: 7)\n 30906: a0 = sp + 0xffffffffffffffe0\n 30909: a0 = a0 & 0xffffffffffffffe0\n 30912: u64 [s1 + 0x118] = a0\n 30916: sp = a0\n 30918: a0 = u64 [s1 + 0x88]\n 30922: a0 = i32 [a0]\n 30924: jump @1144 if a0 >u 63\n      : @1143 (gas: 3)\n 30928: a1 = u64 [s1 + 0x88]\n 30932: u32 [a1 + 0] = 0x40\n 30935: fallthrough\n      : @1144 (gas: 29)\n 30936: a0 = sp + 0xffffffffffffffe0\n 30939: a0 = a0 & 0xffffffffffffffe0\n 30942: u64 [s1 + 0x150] = a0\n 30946: sp = a0\n 30948: i32 a2 = a0 + 0\n 30950: a1 = 0x40\n 30953: a0 = u64 [s1 + 0x78]\n 30956: ecalli 9 // 'hash_keccak_256'\n 30958: a3 = u64 [s1 + 0x150]\n 30962: a0 = u64 [a3 + 0x18]\n 30965: a1 = u64 [a3 + 0x10]\n 30968: a2 = u64 [a3 + 0x8]\n 30971: a3 = u64 [a3]\n 30973: a4 = reverse a0\n 30975: u64 [s1 + 0x140] = a4\n 30979: a1 = reverse a1\n 30981: u64 [s1 + 0x148] = a1\n 30985: a2 = reverse a2\n 30987: u64 [s1 + 0x128] = a2\n 30991: a0 = reverse a3\n 30993: u64 [s1 + 0x150] = a0\n 30997: a3 = u64 [s1 + 0x118]\n 31001: u64 [a3 + 0x18] = a0\n 31004: u64 [a3 + 0x10] = a2\n 31007: u64 [a3 + 0x8] = a1\n 31010: u64 [a3] = a4\n 31012: a0 = s1 + 0x1c80\n 31016: a1 = u64 [s1 + 0x158]\n 31020: ra = 1260, jump @17\n      : @1145 [@dyn 630] (gas: 14)\n 31026: a3 = s1 + 0x18d8\n 31030: a4 = a3 + 0x300\n 31034: a0 = u64 [a4 + 0xc0]\n 31038: a1 = u64 [a4 + 0xb8]\n 31042: a2 = u64 [a4 + 0xb0]\n 31046: a3 = u64 [a4 + 0xa8]\n 31050: a4 = s1 + 0x38d8\n 31054: u64 [a4 + 0x40] = a0\n 31057: u64 [a4 + 0x38] = a1\n 31060: u64 [a4 + 0x30] = a2\n 31063: u64 [a4 + 0x28] = a3\n 31066: a1 = s1 + 0x3900\n 31070: a0 = u64 [s1 + 0x118]\n 31074: ra = 1262, jump @23\n      : @1146 [@dyn 631] (gas: 3)\n 31080: a0 = s1 + 0x1c60\n 31084: a1 = u64 [s1 + 0x138]\n 31088: ra = 1264, jump @17\n      : @1147 [@dyn 632] (gas: 31)\n 31094: a0 = s1 + 0x18d8\n 31098: a1 = u64 [a0 + 0x388]\n 31102: u64 [s1 + 0x158] = a1\n 31106: a1 = u64 [a0 + 0x390]\n 31110: u64 [s1 + 0x138] = a1\n 31114: a1 = u32 [a0 + 0x398]\n 31118: u64 [s1 + 0x118] = a1\n 31122: a0 = sp + 0xffffffffffffffe0\n 31125: t0 = a0 & 0xffffffffffffffe0\n 31128: sp = t0\n 31130: a0 = u64 [s1 + 0x140]\n 31134: a0 = a0 + 0x1\n 31137: a1 = a0 <u 0x1\n 31140: a2 = u64 [s1 + 0x148]\n 31144: a5 = a2 + a1\n 31147: a2 = a0 | a5\n 31150: a2 = a2 <u 0x1\n 31153: a3 = u64 [s1 + 0x128]\n 31157: a2 = a2 + a3\n 31160: a3 = a2 <u a3\n 31163: a4 = u64 [s1 + 0x150]\n 31167: a3 = a3 + a4\n 31170: a1 = t0\n 31172: u64 [s1 + 0x108] = t0\n 31176: a4 = t0\n 31178: u64 [a4 + 0x18] = a3\n 31181: u64 [a4 + 0x10] = a2\n 31184: u64 [a4 + 0x8] = a5\n 31187: u64 [a4] = a0\n 31189: a0 = s1 + 0x1c40\n 31193: ra = 1266, jump @21\n      : @1148 [@dyn 633] (gas: 16)\n 31199: a1 = s1 + 0x18d8\n 31203: a0 = u32 [a1 + 0x37c]\n 31207: a0 = a0 << 0x20\n 31210: a1 = u64 [a1 + 0x380]\n 31214: a2 = u64 [s1 + 0x118]\n 31218: a0 = a0 | a2\n 31221: a2 = s1 + 0x38d8\n 31225: a3 = u64 [s1 + 0x138]\n 31229: u64 [a2 + 0x50] = a3\n 31232: a3 = u64 [s1 + 0x158]\n 31236: u64 [a2 + 0x48] = a3\n 31239: u64 [a2 + 0x60] = a1\n 31242: u64 [a2 + 0x58] = a0\n 31245: a1 = s1 + 0x3920\n 31249: a0 = u64 [s1 + 0x108]\n 31253: ra = 1268, jump @23\n      : @1149 [@dyn 634] (gas: 3)\n 31259: a0 = s1 + 0x1c20\n 31263: a1 = u64 [s1 + 0x130]\n 31267: ra = 1270, jump @17\n      : @1150 [@dyn 635] (gas: 15)\n 31273: a0 = s1 + 0x18d8\n 31277: a1 = u64 [a0 + 0x348]\n 31281: u64 [s1 + 0x158] = a1\n 31285: a1 = u64 [a0 + 0x350]\n 31289: u64 [s1 + 0x138] = a1\n 31293: a1 = u32 [a0 + 0x358]\n 31297: u64 [s1 + 0x130] = a1\n 31301: a0 = sp + 0xffffffffffffffe0\n 31304: a5 = a0 & 0xffffffffffffffe0\n 31307: sp = a5\n 31309: a1 = u64 [s1 + 0x140]\n 31313: a0 = a1 + 0x2\n 31316: a1 = a0 <u a1\n 31319: a3 = u64 [s1 + 0x148]\n 31323: t0 = 1272, jump @1991\n      : @1151 [@dyn 636] (gas: 13)\n 31329: a1 = u64 [s1 + 0x128]\n 31333: a3 = a3 + a1\n 31336: a1 = a3 <u a1\n 31339: a4 = u64 [s1 + 0x150]\n 31343: a4 = a4 + a1\n 31346: a1 = a5\n 31348: u64 [s1 + 0x118] = a5\n 31352: u64 [a5 + 0x18] = a4\n 31355: u64 [a5 + 0x10] = a3\n 31358: u64 [a5 + 0x8] = a2\n 31361: u64 [a5] = a0\n 31363: a0 = s1 + 0x1c00\n 31367: ra = 1274, jump @21\n      : @1152 [@dyn 637] (gas: 16)\n 31373: a1 = s1 + 0x18d8\n 31377: a0 = u32 [a1 + 0x33c]\n 31381: a0 = a0 << 0x20\n 31384: a1 = u64 [a1 + 0x340]\n 31388: a2 = u64 [s1 + 0x130]\n 31392: a0 = a0 | a2\n 31395: a2 = s1 + 0x38d8\n 31399: a3 = u64 [s1 + 0x138]\n 31403: u64 [a2 + 0x70] = a3\n 31406: a3 = u64 [s1 + 0x158]\n 31410: u64 [a2 + 0x68] = a3\n 31413: u64 [a2 + 0x80] = a1\n 31417: u64 [a2 + 0x78] = a0\n 31420: a1 = s1 + 0x3940\n 31424: a0 = u64 [s1 + 0x118]\n 31428: ra = 1276, jump @23\n      : @1153 [@dyn 638] (gas: 3)\n 31434: a0 = s1 + 0x1be0\n 31438: a1 = u64 [s1 + 0x120]\n 31442: ra = 1278, jump @17\n      : @1154 [@dyn 639] (gas: 29)\n 31448: a0 = s1 + 0x18d8\n 31452: t0 = u64 [a0 + 0x308]\n 31456: t1 = u64 [a0 + 0x310]\n 31460: t2 = u64 [a0 + 0x318]\n 31464: a3 = u64 [a0 + 0x320]\n 31468: a0 = u64 [s1 + 0x140]\n 31472: a4 = a0 + 0x3\n 31475: a5 = a4 <u a0\n 31478: a1 = u64 [s1 + 0x148]\n 31482: a0 = a1 + a5\n 31485: a1 = a0 <u a1\n 31488: a1 = a5 if a5 == 0\n 31491: a2 = u64 [s1 + 0x128]\n 31495: a1 = a1 + a2\n 31498: a5 = a1 <u a2\n 31501: a2 = u64 [s1 + 0x150]\n 31505: a5 = a5 + a2\n 31508: a2 = s1 + 0x38d8\n 31512: u64 [a2 + 0xa0] = a5\n 31516: u64 [a2 + 0x98] = a1\n 31520: u64 [a2 + 0x90] = a0\n 31524: u64 [a2 + 0x88] = a4\n 31528: u64 [a2 + 0xc0] = a3\n 31532: u64 [a2 + 0xb8] = t2\n 31536: u64 [a2 + 0xb0] = t1\n 31540: u64 [a2 + 0xa8] = t0\n 31544: a0 = s1 + 0x3960\n 31548: a1 = s1 + 0x3980\n 31552: ra = 1280, jump @23\n      : @1155 [@dyn 640] (gas: 3)\n 31558: a0 = s1 + 0x1bc0\n 31562: a1 = u64 [s1 + 0x110]\n 31566: ra = 1282, jump @17\n      : @1156 [@dyn 641] (gas: 33)\n 31572: a5 = s1 + 0x18d8\n 31576: a0 = u64 [a5 + 0x2f8]\n 31580: a1 = u64 [a5 + 0x300]\n 31584: a2 = u64 [a5 + 0x2f0]\n 31588: a3 = u64 [a5 + 0x2e8]\n 31592: a1 = a1 | a2\n 31595: a0 = a0 | a3\n 31598: a0 = a0 | a1\n 31601: t0 = a0 >u 0\n 31603: a1 = u64 [s1 + 0x140]\n 31607: a0 = a1 + 0x4\n 31610: a1 = a0 <u a1\n 31613: a2 = u64 [s1 + 0x148]\n 31617: a3 = a2 + a1\n 31620: a4 = a3 <u a2\n 31623: a4 = a1 if a1 == 0\n 31626: a1 = u64 [s1 + 0x128]\n 31630: a4 = a4 + a1\n 31633: a1 = a4 <u a1\n 31636: a2 = u64 [s1 + 0x150]\n 31640: a1 = a1 + a2\n 31643: u64 [a5 + 704] = 0\n 31647: u64 [a5 + 696] = 0\n 31651: u64 [a5 + 688] = 0\n 31655: a2 = a5 + 0x200\n 31659: u64 [a2 + 0xe0] = a1\n 31663: u64 [a2 + 0xd8] = a4\n 31667: u64 [a2 + 0xd0] = a3\n 31671: u64 [a2 + 0xc8] = a0\n 31675: a0 = s1 + 0x1ba0\n 31679: a1 = s1 + 0x1b80\n 31683: u64 [a5 + 0x2a8] = t0\n 31687: ra = 1284, jump @1820\n      : @1157 [@dyn 642] (gas: 6)\n 31693: a0 = u64 [s1 + 0x90]\n 31697: ra = 0x506\n 31701: ecalli 0 // 'address'\n 31702: a2 = u64 [s1 + 0xa8]\n 31706: t0 = 0x508\n 31710: jump @1943\n      : @1158 [@dyn 643] (gas: 2)\n 31713: a2 = u64 [s1 + 0xa8]\n 31717: t0 = 1288, jump @1943\n      : @1159 [@dyn 644] (gas: 9)\n 31723: u64 [s1 + 0x150] = a0\n 31727: a1 = a1 >> 0x20\n 31730: u64 [s1 + 0x148] = a1\n 31734: a0 = u64 [s1 + 0x90]\n 31738: ra = 0x50a\n 31742: ecalli 5 // 'caller'\n 31744: a2 = u64 [s1 + 0xa8]\n 31748: t0 = 0x50c\n 31752: jump @1947\n      : @1160 [@dyn 645] (gas: 2)\n 31755: a2 = u64 [s1 + 0xa8]\n 31759: t0 = 1292, jump @1947\n      : @1161 [@dyn 646] (gas: 25)\n 31765: a4 = s1 + 0x18d8\n 31769: a3 = u64 [s1 + 0x148]\n 31773: a5 = a4 + 0x200\n 31777: u64 [a5 + 0x78] = a3\n 31780: a3 = u64 [s1 + 0x150]\n 31784: u64 [a5 + 0x70] = a3\n 31787: a3 = u64 [s1 + 0x158]\n 31791: u64 [a5 + 0x68] = a3\n 31794: a3 = u64 [s1 + 0xc8]\n 31798: u64 [a5 + 0x60] = a3\n 31801: a3 = u64 [s1 + 0xc0]\n 31805: u64 [a5 + 0x58] = a3\n 31808: a3 = u64 [s1 + 0xb0]\n 31812: u64 [a5 + 0x50] = a3\n 31815: a3 = u64 [s1 + 0xb8]\n 31819: u64 [a5 + 0x48] = a3\n 31822: u64 [a4 + 640] = 0\n 31826: u64 [a5 + 0x98] = a1\n 31830: u64 [a5 + 0x90] = a2\n 31834: u64 [a5 + 0x88] = a0\n 31838: a0 = s1 + 0x1b60\n 31842: a1 = s1 + 0x1b40\n 31846: a2 = s1 + 0x1b20\n 31850: u64 [a4 + 672] = 0\n 31854: ra = 1294, jump @1875\n      : @1162 [@dyn 647] (gas: 3)\n 31860: a0 = s1 + 0x1b00\n 31864: a1 = 0x40\n 31867: ra = 1296, jump @17\n      : @1163 [@dyn 648] (gas: 14)\n 31873: a0 = s1 + 0x18d8\n 31877: a2 = a0 + 0x200\n 31881: a1 = u64 [a2 + 0x40]\n 31884: u64 [s1 + 0x148] = a1\n 31888: a1 = u64 [a2 + 0x38]\n 31891: u64 [s1 + 0x140] = a1\n 31895: a1 = u64 [a2 + 0x30]\n 31898: u64 [s1 + 0x150] = a1\n 31902: a0 = u64 [a2 + 0x28]\n 31905: u64 [s1 + 0x158] = a0\n 31909: a0 = u64 [s1 + 0x90]\n 31913: ra = 0x512\n 31917: ecalli 5 // 'caller'\n 31919: fallthrough\n      : @1164 [@dyn 649] (gas: 13)\n 31920: a3 = s1 + 0x100\n 31924: a0 = u64 [a3 + 0x48]\n 31927: a1 = u64 [a3 + 0x50]\n 31930: a0 = a0 | a1\n 31933: a2 = u64 [a3 + 0x40]\n 31936: a1 = u64 [a3 + 0x58]\n 31939: a1 = a1 | a2\n 31942: a1 = a1 | a0\n 31945: a1 = a1 >> 0x20\n 31948: a0 = a0 | a2\n 31951: a0 = a0 << 0x20\n 31954: a0 = a0 | a1\n 31957: jump @1166 if a0 == 0\n      : @1165 (gas: 1)\n 31960: jump @500\n      : @1166 (gas: 2)\n 31963: a2 = u64 [s1 + 0xa8]\n 31967: t0 = 1300, jump @1944\n      : @1167 [@dyn 650] (gas: 10)\n 31973: i32 a2 = a2 + 0xfffffffffffff8d8\n 31977: a2 = a2 + s1\n 31980: u64 [a2 + 544] = 0\n 31984: a4 = a2 + 0x200\n 31988: u64 [a4 + 0x18] = a1\n 31991: u64 [a4 + 0x10] = a0\n 31994: a1 = s1 + 0x1ae0\n 31998: u64 [a4 + 0x8] = a3\n 32001: a0 = u64 [s1 + 0x158]\n 32005: ra = 1302, jump @19\n      : @1168 [@dyn 651] (gas: 5)\n 32011: a0 = u64 [s1 + 0x90]\n 32015: ra = 0x518\n 32019: ecalli 0 // 'address'\n 32020: t0 = 0x51a\n 32024: jump @1955\n      : @1169 [@dyn 652] (gas: 1)\n 32027: t0 = 1306, jump @1955\n      : @1170 [@dyn 653] (gas: 1)\n 32033: jump @1172 if a0 != 0\n      : @1171 (gas: 1)\n 32036: jump @500\n      : @1172 (gas: 2)\n 32039: a2 = u64 [s1 + 0xa8]\n 32043: t0 = 1308, jump @1950\n      : @1173 [@dyn 654] (gas: 10)\n 32049: a0 = u64 [s1 + 0x158]\n 32053: i32 a0 = a0 + 0x20\n 32056: a4 = s1 + 0x18d8\n 32060: u64 [a4 + 512] = 0\n 32064: a5 = a4 + 0x100\n 32068: u64 [a5 + 0xf8] = a1\n 32072: u64 [a5 + 0xf0] = a2\n 32076: a1 = s1 + 0x1ac0\n 32080: u64 [a5 + 0xe8] = a3\n 32084: ra = 1310, jump @19\n      : @1174 [@dyn 655] (gas: 4)\n 32090: a2 = s1 + 0x100\n 32094: a0 = u64 [a2 + 0x40]\n 32097: a0 = a0 + 0xffffffffffffffc0\n 32100: t0 = 1312, jump @1909\n      : @1175 [@dyn 656] (gas: 1)\n 32106: jump @1177 if a0 != 0\n      : @1176 (gas: 1)\n 32109: jump @500\n      : @1177 (gas: 14)\n 32112: a0 = u64 [s1 + 0x158]\n 32116: i32 a0 = a0 + 0x40\n 32119: a2 = s1 + 0x18d8\n 32123: a1 = u64 [s1 + 0x40]\n 32126: a4 = a2 + 0x100\n 32130: u64 [a4 + 0xc8] = a1\n 32134: a1 = u64 [s1 + 0x48]\n 32137: u64 [a4 + 0xd0] = a1\n 32141: a1 = u64 [s1 + 0x50]\n 32144: u64 [a4 + 0xd8] = a1\n 32148: a1 = s1 + 0x1aa0\n 32152: a3 = u64 [s1 + 0x58]\n 32155: u64 [a4 + 0xe0] = a3\n 32159: ra = 1314, jump @19\n      : @1178 [@dyn 657] (gas: 3)\n 32165: a0 = 0xffffffa0\n 32175: a2 = s1 + 0x100\n 32179: t0 = 1316, jump @1909\n      : @1179 [@dyn 658] (gas: 1)\n 32185: jump @1181 if a0 != 0\n      : @1180 (gas: 1)\n 32188: jump @500\n      : @1181 (gas: 9)\n 32191: a0 = u64 [s1 + 0x158]\n 32195: i32 a0 = a0 + 0x60\n 32198: a2 = s1 + 0x18d8\n 32202: u64 [a2 + 448] = 0\n 32206: u64 [a2 + 440] = 0\n 32210: u64 [a2 + 432] = 0\n 32214: a1 = s1 + 0x1a80\n 32218: u64 [a2 + 424] = 0\n 32222: ra = 1318, jump @19\n      : @1182 [@dyn 659] (gas: 48)\n 32228: a0 = u64 [0x20158]\n 32233: a1 = u64 [s1 + 0xc8]\n 32237: a4 = s1 + 0x18d8\n 32241: a5 = a4 + 0x100\n 32245: u64 [a5 + 0x80] = a1\n 32249: a1 = u64 [s1 + 0xc0]\n 32253: u64 [a5 + 0x78] = a1\n 32256: u64 [a5 + 0xa0] = a0\n 32260: a0 = u64 [0x20160]\n 32265: a1 = u64 [0x20168]\n 32270: a2 = u64 [0x20170]\n 32275: a3 = u64 [s1 + 0xb0]\n 32279: u64 [a5 + 0x70] = a3\n 32282: u64 [a5 + 0x98] = a0\n 32286: u64 [a5 + 0x90] = a1\n 32290: u64 [a5 + 0x88] = a2\n 32294: a1 = 0x80\n 32298: a2 = s1 + 0x1a60\n 32302: a3 = s1 + 0x1a40\n 32306: a0 = u64 [s1 + 0xb8]\n 32310: u64 [a5 + 0x68] = a0\n 32313: a0 = u64 [s1 + 0x158]\n 32317: ra = 0x528\n 32321: sp = sp + 0xffffffffffffff60\n 32325: u64 [sp + 0x98] = ra\n 32329: u64 [sp + 0x90] = s0\n 32333: u64 [sp + 0x88] = s1\n 32337: s0 = sp + 0xa0\n 32341: sp = sp & 0xffffffffffffffe0\n 32344: a4 = u64 [a3]\n 32346: u64 [sp + 0x38] = a4\n 32349: a4 = u64 [a3 + 0x8]\n 32352: u64 [sp + 0x30] = a4\n 32355: a4 = u64 [a3 + 0x10]\n 32358: u64 [sp + 0x28] = a4\n 32361: a3 = u64 [a3 + 0x18]\n 32364: u64 [sp + 0x20] = a3\n 32367: a3 = u64 [a2]\n 32369: u64 [sp + 0x18] = a3\n 32372: a3 = u64 [a2 + 0x8]\n 32375: u64 [sp + 0x10] = a3\n 32378: a3 = u64 [a2 + 0x10]\n 32381: u64 [sp + 0x8] = a3\n 32384: a2 = u64 [a2 + 0x18]\n 32387: u64 [sp] = a2\n 32389: s1 = a1\n 32391: ra = 0xe\n 32394: jump @34\n      : @1183 [@dyn 660] (gas: 3)\n 32397: a0 = s1 + 0x1a20\n 32401: a1 = 0x40\n 32404: ra = 1322, jump @17\n      : @1184 [@dyn 661] (gas: 7)\n 32410: a3 = s1 + 0x18d8\n 32414: a5 = a3 + 0x100\n 32418: a0 = u64 [a5 + 0x60]\n 32421: a1 = u64 [a5 + 0x58]\n 32424: a2 = u64 [a5 + 0x50]\n 32427: a4 = u64 [a5 + 0x48]\n 32430: t0 = 1324, jump @1927\n      : @1185 [@dyn 662] (gas: 1)\n 32436: jump @1187 if a0 == 0\n      : @1186 (gas: 1)\n 32439: jump @500\n      : @1187 (gas: 15)\n 32442: a3 = a4\n 32444: a0 = s1 + 0x18d8\n 32448: a1 = u64 [s1 + 0xb8]\n 32452: a5 = a0 + 0x100\n 32456: u64 [a5 + 0x28] = a1\n 32459: a1 = u64 [s1 + 0xb0]\n 32463: u64 [a5 + 0x30] = a1\n 32466: a1 = u64 [s1 + 0xc0]\n 32470: u64 [a5 + 0x38] = a1\n 32473: a1 = s1 + 0x1a00\n 32477: a2 = u64 [s1 + 0xc8]\n 32481: u64 [a5 + 0x40] = a2\n 32484: a0 = a4\n 32486: u64 [s1 + 0x158] = a3\n 32490: ra = 1326, jump @19\n      : @1188 [@dyn 663] (gas: 3)\n 32496: a1 = 0x20\n 32499: a0 = u64 [s1 + 0x158]\n 32503: ra = 1328, jump @34\n      : @1189 [@dyn 664] (gas: 5)\n 32509: i32 a1 = a0 + 0\n 32511: a2 = 0x20\n 32514: a0 = 0\n 32516: ecalli 13 // 'seal_return'\n 32518: jump @1213\n      : @1190 (gas: 13)\n 32521: a4 = s1 + 0x100\n 32525: a0 = u64 [a4 + 0x58]\n 32528: a3 = u64 [a4 + 0x40]\n 32531: a0 = a0 | a3\n 32534: a1 = u64 [a4 + 0x50]\n 32537: a2 = u64 [a4 + 0x48]\n 32540: a1 = a1 | a2\n 32543: a0 = a0 | a1\n 32546: a0 = a0 >> 0x20\n 32549: a1 = a1 | a3\n 32552: a1 = a1 << 0x20\n 32555: a0 = a0 | a1\n 32558: jump @1192 if a0 == 0\n      : @1191 (gas: 1)\n 32561: jump @500\n      : @1192 (gas: 9)\n 32564: a2 = s1 + 0x18d8\n 32568: u64 [a2 + 1368] = 0\n 32572: u64 [a2 + 1360] = 0\n 32576: u64 [a2 + 1352] = 0\n 32580: a0 = 0x8c379a000000000\n 32590: a1 = s1 + 0x1e20\n 32594: u64 [a2 + 0x560] = a0\n 32598: a0 = u64 [s1 + 0x158]\n 32602: ra = 1330, jump @19\n      : @1193 [@dyn 665] (gas: 1)\n 32608: t0 = 1332, jump @1910\n      : @1194 [@dyn 666] (gas: 1)\n 32614: jump @1196 if a0 != 0\n      : @1195 (gas: 1)\n 32617: jump @500\n      : @1196 (gas: 9)\n 32620: a0 = u64 [s1 + 0x158]\n 32624: i32 a0 = a0 + 0x4\n 32627: a2 = s1 + 0x18d8\n 32631: u64 [a2 + 1344] = 0\n 32635: u64 [a2 + 1336] = 0\n 32639: u64 [a2 + 1320] = 0x20\n 32644: a1 = s1 + 0x1e00\n 32648: u64 [a2 + 1328] = 0\n 32652: ra = 1334, jump @19\n      : @1197 [@dyn 667] (gas: 4)\n 32658: a2 = s1 + 0x100\n 32662: a0 = u64 [a2 + 0x40]\n 32665: a0 = a0 + 0xffffffffffffffdc\n 32668: t0 = 1336, jump @1909\n      : @1198 [@dyn 668] (gas: 1)\n 32674: jump @1200 if a0 != 0\n      : @1199 (gas: 1)\n 32677: jump @500\n      : @1200 (gas: 9)\n 32680: a0 = u64 [s1 + 0x158]\n 32684: i32 a0 = a0 + 0x24\n 32687: a2 = s1 + 0x18d8\n 32691: u64 [a2 + 1312] = 0\n 32695: u64 [a2 + 1304] = 0\n 32699: u64 [a2 + 1288] = 0x24\n 32704: a1 = s1 + 0x1de0\n 32708: u64 [a2 + 1296] = 0\n 32712: ra = 1338, jump @19\n      : @1201 [@dyn 669] (gas: 5)\n 32718: a0 = 0x100000000\n 32728: a2 = s1 + 0x100\n 32732: u64 [a2 + 0x40] = a0\n 32735: a0 = 0xffffffbc\n 32745: t0 = 1340, jump @1909\n      : @1202 [@dyn 670] (gas: 1)\n 32751: jump @1204 if a0 != 0\n      : @1203 (gas: 1)\n 32754: jump @500\n      : @1204 (gas: 14)\n 32757: a0 = u64 [s1 + 0x158]\n 32761: i32 a0 = a0 + 0x44\n 32764: a1 = u64 [0x20038]\n 32769: a4 = s1 + 0x18d8\n 32773: u64 [a4 + 0x500] = a1\n 32777: a1 = u64 [0x20040]\n 32782: a2 = u64 [0x20148]\n 32787: a3 = u64 [0x20150]\n 32792: a5 = a4 + 0x400\n 32796: u64 [a5 + 0xf8] = a1\n 32800: u64 [a5 + 0xf0] = a2\n 32804: a1 = s1 + 0x1dc0\n 32808: u64 [a5 + 0xe8] = a3\n 32812: ra = 1342, jump @19\n      : @1205 [@dyn 671] (gas: 4)\n 32818: a2 = s1 + 0x100\n 32822: a0 = u64 [a2 + 0x40]\n 32825: a0 = a0 + 0xffffffffffffff9c\n 32828: t0 = 1344, jump @1909\n      : @1206 [@dyn 672] (gas: 1)\n 32834: jump @1208 if a0 != 0\n      : @1207 (gas: 1)\n 32837: jump @500\n      : @1208 (gas: 10)\n 32840: a0 = u64 [s1 + 0x158]\n 32844: i32 a0 = a0 + 0x64\n 32847: a2 = s1 + 0x18d8\n 32851: u64 [a2 + 1240] = 0\n 32855: u64 [a2 + 1232] = 0\n 32859: a1 = 0x7269636500000000\n 32869: u64 [a2 + 0x4e0] = a1\n 32873: a1 = s1 + 0x1da0\n 32877: u64 [a2 + 1224] = 0\n 32881: ra = 1346, jump @19\n      : @1209 [@dyn 673] (gas: 3)\n 32887: a1 = 0x84\n 32891: a0 = u64 [s1 + 0x158]\n 32895: ra = 1348, jump @34\n      : @1210 [@dyn 674] (gas: 5)\n 32901: i32 a1 = a0 + 0\n 32903: a0 = 0x1\n 32906: a2 = 0x84\n 32910: ecalli 13 // 'seal_return'\n 32912: fallthrough\n      : @1211 (gas: 3)\n 32913: a0 = a2\n 32915: u64 [s1 + 0x158] = a1\n 32919: ra = 1350, jump @34\n      : @1212 [@dyn 675] (gas: 5)\n 32925: i32 a1 = a0 + 0\n 32927: a2 = i32 [s1 + 0x158]\n 32931: a0 = 0\n 32933: ecalli 13 // 'seal_return'\n 32935: fallthrough\n      : @1213 (gas: 6)\n 32936: a1 = 0x20220\n 32941: i32 a1 = a1 + 0\n 32943: a0 = 0x1\n 32946: a2 = 0\n 32948: ecalli 13 // 'seal_return'\n 32950: jump @1373\n      : @1214 (gas: 6)\n 32953: a1 = 0x20220\n 32958: i32 a1 = a1 + 0\n 32960: a0 = 0x1\n 32963: a2 = 0\n 32965: ecalli 13 // 'seal_return'\n 32967: jump @1373\n      : @1215 (gas: 6)\n 32970: a1 = 0x20220\n 32975: i32 a1 = a1 + 0\n 32977: a0 = 0x1\n 32980: a2 = 0\n 32982: ecalli 13 // 'seal_return'\n 32984: jump @1373\n      : @1216 (gas: 6)\n 32987: a1 = 0x20220\n 32992: i32 a1 = a1 + 0\n 32994: a0 = 0x1\n 32997: a2 = 0\n 32999: ecalli 13 // 'seal_return'\n 33001: jump @1373\n      : @1217 (gas: 6)\n 33004: u64 [s1 + 1712] = 0\n 33008: u64 [s1 + 1704] = 0\n 33012: u64 [s1 + 1696] = 0\n 33016: t0 = 0x548\n 33020: a0 = 0x4e487b7100000000\n 33030: fallthrough\n      : @1218 [@dyn 676] (gas: 4)\n 33031: a1 = s1 + 0x6a0\n 33035: u64 [s1 + 0x6b8] = a0\n 33039: a0 = 0\n 33041: ra = 1354, jump @19\n      : @1219 [@dyn 677] (gas: 7)\n 33047: u64 [s1 + 1688] = 0\n 33051: u64 [s1 + 1680] = 0\n 33055: u64 [s1 + 1664] = 0x11\n 33060: a0 = 0x4\n 33063: a1 = s1 + 0x680\n 33067: u64 [s1 + 1672] = 0\n 33071: ra = 1356, jump @19\n      : @1220 [@dyn 678] (gas: 2)\n 33077: a1 = i32 [0x2020c]\n 33082: jump @1222 if a1 >u 63\n      : @1221 (gas: 3)\n 33086: u32 [0x2020c] = 0x40\n 33092: a1 = 0x20220\n 33097: jump @1223\n      : @1222 (gas: 2)\n 33099: a1 = 0x20220\n 33104: fallthrough\n      : @1223 (gas: 5)\n 33105: i32 a1 = a1 + 0\n 33107: a0 = 0x1\n 33110: a2 = 0x24\n 33113: ecalli 13 // 'seal_return'\n 33115: fallthrough\n      : @1224 (gas: 6)\n 33116: a1 = 0x20220\n 33121: i32 a1 = a1 + 0\n 33123: a0 = 0x1\n 33126: a2 = 0\n 33128: ecalli 13 // 'seal_return'\n 33130: jump @1373\n      : @1225 (gas: 6)\n 33133: a1 = 0x20220\n 33138: i32 a1 = a1 + 0\n 33140: a0 = 0x1\n 33143: a2 = 0\n 33145: ecalli 13 // 'seal_return'\n 33147: jump @1373\n      : @1226 (gas: 6)\n 33150: a1 = 0x20220\n 33155: i32 a1 = a1 + 0\n 33157: a0 = 0x1\n 33160: a2 = 0\n 33162: ecalli 13 // 'seal_return'\n 33164: jump @1373\n      : @1227 (gas: 6)\n 33167: a1 = 0x20220\n 33172: i32 a1 = a1 + 0\n 33174: a0 = 0x1\n 33177: a2 = 0\n 33179: ecalli 13 // 'seal_return'\n 33181: jump @1373\n      : @1228 (gas: 10)\n 33184: a0 = s1 + 0x10d8\n 33188: u64 [a0 + 1816] = 0\n 33192: u64 [a0 + 1808] = 0\n 33196: u64 [a0 + 1800] = 0\n 33200: a2 = a0\n 33202: a0 = 0x89c62b6400000000\n 33212: a1 = s1 + 0x17e0\n 33216: u64 [a2 + 0x720] = a0\n 33220: a0 = 0\n 33222: ra = 1358, jump @19\n      : @1229 [@dyn 679] (gas: 9)\n 33229: a0 = s1 + 0x10d8\n 33233: u64 [a0 + 1792] = 0\n 33237: u64 [a0 + 1784] = 0\n 33241: u64 [a0 + 1776] = 0\n 33245: a2 = a0\n 33247: a0 = 0x4\n 33250: a1 = s1 + 0x17c0\n 33254: u64 [a2 + 1768] = 0\n 33258: ra = 1360, jump @19\n      : @1230 [@dyn 680] (gas: 2)\n 33265: a1 = i32 [0x2020c]\n 33270: jump @1232 if a1 >u 63\n      : @1231 (gas: 3)\n 33274: u32 [0x2020c] = 0x40\n 33280: a1 = 0x20220\n 33285: jump @1223\n      : @1232 (gas: 2)\n 33288: a1 = 0x20220\n 33293: jump @1223\n      : @1233 (gas: 6)\n 33296: a1 = 0x20220\n 33301: i32 a1 = a1 + 0\n 33303: a0 = 0x1\n 33306: a2 = 0\n 33308: ecalli 13 // 'seal_return'\n 33310: jump @1373\n      : @1234 (gas: 6)\n 33313: a1 = 0x20220\n 33318: i32 a1 = a1 + 0\n 33320: a0 = 0x1\n 33323: a2 = 0\n 33325: ecalli 13 // 'seal_return'\n 33327: jump @1373\n      : @1235 (gas: 6)\n 33330: a1 = 0x20220\n 33335: i32 a1 = a1 + 0\n 33337: a0 = 0x1\n 33340: a2 = 0\n 33342: ecalli 13 // 'seal_return'\n 33344: jump @1373\n      : @1236 (gas: 6)\n 33347: a1 = 0x20220\n 33352: i32 a1 = a1 + 0\n 33354: a0 = 0x1\n 33357: a2 = 0\n 33359: ecalli 13 // 'seal_return'\n 33361: jump @1373\n      : @1237 (gas: 6)\n 33364: a1 = 0x20220\n 33369: i32 a1 = a1 + 0\n 33371: a0 = 0x1\n 33374: a2 = 0\n 33376: ecalli 13 // 'seal_return'\n 33378: jump @1373\n      : @1238 (gas: 10)\n 33381: a0 = s1 + 0x20d8\n 33385: u64 [a0 + 760] = 0\n 33389: u64 [a0 + 752] = 0\n 33393: u64 [a0 + 744] = 0\n 33397: a2 = a0\n 33399: a0 = 0x5b08ba1800000000\n 33409: a1 = s1 + 0x23c0\n 33413: u64 [a2 + 0x300] = a0\n 33417: a0 = 0\n 33419: ra = 1362, jump @19\n      : @1239 [@dyn 681] (gas: 9)\n 33426: a0 = s1 + 0x20d8\n 33430: u64 [a0 + 736] = 0\n 33434: u64 [a0 + 728] = 0\n 33438: u64 [a0 + 720] = 0\n 33442: a2 = a0\n 33444: a0 = 0x4\n 33447: a1 = s1 + 0x23a0\n 33451: u64 [a2 + 712] = 0\n 33455: ra = 1364, jump @19\n      : @1240 [@dyn 682] (gas: 2)\n 33462: a1 = i32 [0x2020c]\n 33467: jump @1242 if a1 >u 63\n      : @1241 (gas: 3)\n 33471: u32 [0x2020c] = 0x40\n 33477: a1 = 0x20220\n 33482: jump @1223\n      : @1242 (gas: 2)\n 33485: a1 = 0x20220\n 33490: jump @1223\n      : @1243 (gas: 6)\n 33493: a1 = 0x20220\n 33498: i32 a1 = a1 + 0\n 33500: a0 = 0x1\n 33503: a2 = 0\n 33505: ecalli 13 // 'seal_return'\n 33507: jump @1373\n      : @1244 (gas: 21)\n 33510: a0 = s1 + 0x4000\n 33514: i32 a0 = a0 + 0xfffffffffffffa40\n 33518: a1 = 0x4\n 33521: ecalli 3 // 'call_data_load'\n 33523: a5 = s1 + 0x38d8\n 33527: a0 = u64 [a5 + 0x168]\n 33531: a1 = u64 [a5 + 0x170]\n 33535: a2 = u64 [a5 + 0x178]\n 33539: a3 = u64 [a5 + 0x180]\n 33543: u64 [a5 + 416] = 0\n 33547: u64 [a5 + 408] = 0\n 33551: u64 [a5 + 400] = 0\n 33555: u64 [a5 + 392] = 0x9\n 33560: a4 = a5 + 0x100\n 33564: u64 [a4 + 0xc0] = a3\n 33568: u64 [a4 + 0xb8] = a2\n 33572: u64 [a4 + 0xb0] = a1\n 33576: u64 [a4 + 0xa8] = a0\n 33580: a0 = s1 + 0x3a60\n 33584: a1 = s1 + 0x3a80\n 33588: ra = 1366, jump @23\n      : @1245 [@dyn 683] (gas: 6)\n 33595: a1 = 0x20220\n 33600: i32 a1 = a1 + 0\n 33602: a0 = 0\n 33604: a2 = 0\n 33606: ecalli 13 // 'seal_return'\n 33608: jump @1373\n      : @1246 (gas: 6)\n 33611: a1 = 0x20220\n 33616: i32 a1 = a1 + 0\n 33618: a0 = 0x1\n 33621: a2 = 0\n 33623: ecalli 13 // 'seal_return'\n 33625: jump @1373\n      : @1247 (gas: 6)\n 33628: a1 = 0x20220\n 33633: i32 a1 = a1 + 0\n 33635: a0 = 0x1\n 33638: a2 = 0\n 33640: ecalli 13 // 'seal_return'\n 33642: jump @1373\n      : @1248 (gas: 6)\n 33645: a1 = 0x20220\n 33650: i32 a1 = a1 + 0\n 33652: a0 = 0x1\n 33655: a2 = 0\n 33657: ecalli 13 // 'seal_return'\n 33659: jump @1373\n      : @1249 (gas: 6)\n 33662: a1 = 0x20220\n 33667: i32 a1 = a1 + 0\n 33669: a0 = 0x1\n 33672: a2 = 0\n 33674: ecalli 13 // 'seal_return'\n 33676: jump @1373\n      : @1250 (gas: 3)\n 33679: t0 = 0x558\n 33683: a2 = s1 + 0x28d8\n 33687: fallthrough\n      : @1251 [@dyn 684] (gas: 12)\n 33688: a0 = u64 [s1 + 0x158]\n 33692: a3 = a2 + 0x600\n 33696: u64 [a3 + 0x8] = a0\n 33699: a0 = u64 [s1 + 0x150]\n 33703: u64 [a3 + 0x10] = a0\n 33706: a0 = u64 [s1 + 0x148]\n 33710: u64 [a3 + 0x18] = a0\n 33713: a1 = s1 + 0x2ee0\n 33717: a0 = u64 [s1 + 0x140]\n 33721: u64 [a3 + 0x20] = a0\n 33724: a0 = 0\n 33726: ra = 1370, jump @19\n      : @1252 [@dyn 685] (gas: 9)\n 33733: a0 = s1 + 0x28d8\n 33737: u64 [a0 + 1536] = 0\n 33741: u64 [a0 + 1528] = 0\n 33745: u64 [a0 + 1520] = 0\n 33749: a3 = a0\n 33751: a0 = 0x20\n 33754: a1 = s1 + 0x2ec0\n 33758: u64 [a3 + 1512] = 0xb\n 33763: ra = 1372, jump @19\n      : @1253 [@dyn 686] (gas: 7)\n 33770: a0 = sp + 0xffffffffffffffe0\n 33773: a0 = a0 & 0xffffffffffffffe0\n 33776: u64 [s1 + 0x128] = a0\n 33780: sp = a0\n 33782: a0 = u64 [s1 + 0x110]\n 33786: a0 = i32 [a0]\n 33788: jump @1255 if a0 >u 63\n      : @1254 (gas: 4)\n 33792: a1 = u64 [s1 + 0x110]\n 33796: u32 [a1 + 0] = 0x40\n 33799: t0 = 0x55e\n 33803: jump @1953\n      : @1255 (gas: 1)\n 33806: t0 = 1374, jump @1953\n      : @1256 [@dyn 687] (gas: 5)\n 33812: ra = 0x560\n 33816: ecalli 9 // 'hash_keccak_256'\n 33818: a3 = u64 [s1 + 0x120]\n 33822: t0 = 0x562\n 33826: jump @1932\n      : @1257 [@dyn 688] (gas: 2)\n 33829: a3 = u64 [s1 + 0x120]\n 33833: t0 = 1378, jump @1932\n      : @1258 [@dyn 689] (gas: 7)\n 33839: a1 = u64 [s1 + 0x128]\n 33843: u64 [a1] = a4\n 33845: u64 [a1 + 0x8] = a5\n 33848: u64 [a1 + 0x10] = a2\n 33851: u64 [a1 + 0x18] = a0\n 33854: a0 = s1 + 0x2ea0\n 33858: ra = 1380, jump @21\n      : @1259 [@dyn 690] (gas: 16)\n 33865: a3 = s1 + 0x28d8\n 33869: a4 = a3 + 0x500\n 33873: a0 = u64 [a4 + 0xc8]\n 33877: a1 = u64 [a4 + 0xe0]\n 33881: a2 = u64 [a4 + 0xd8]\n 33885: a3 = u64 [a4 + 0xd0]\n 33889: a0 = a0 & 0xffffffffffffff00\n 33893: a4 = s1 + 0x38d8\n 33897: a5 = a4 + 0x500\n 33901: u64 [a5 + 0xe0] = a1\n 33905: u64 [a5 + 0xd8] = a2\n 33909: u64 [a5 + 0xd0] = a3\n 33913: u64 [a5 + 0xc8] = a0\n 33917: a1 = s1 + 0x3ea0\n 33921: a0 = u64 [s1 + 0x128]\n 33925: ra = 1382, jump @23\n      : @1260 [@dyn 691] (gas: 13)\n 33932: a0 = u64 [s1 + 0x140]\n 33936: a2 = s1 + 0x28d8\n 33940: a3 = a2 + 0x500\n 33944: u64 [a3 + 0xc0] = a0\n 33948: a0 = u64 [s1 + 0x148]\n 33952: u64 [a3 + 0xb8] = a0\n 33956: a0 = u64 [s1 + 0x150]\n 33960: u64 [a3 + 0xb0] = a0\n 33964: a1 = s1 + 0x2e80\n 33968: a0 = u64 [s1 + 0x158]\n 33972: u64 [a3 + 0xa8] = a0\n 33976: a0 = 0\n 33978: ra = 1384, jump @19\n      : @1261 [@dyn 692] (gas: 3)\n 33985: t0 = 0x56a\n 33989: a1 = s1 + 0x28d8\n 33993: fallthrough\n      : @1262 [@dyn 693] (gas: 8)\n 33994: u64 [a1 + 1440] = 0\n 33998: u64 [a1 + 1432] = 0\n 34002: u64 [a1 + 1416] = 0xb\n 34007: a2 = a1\n 34009: a0 = 0x20\n 34012: a1 = s1 + 0x2e60\n 34016: u64 [a2 + 1424] = 0\n 34020: ra = 1388, jump @19\n      : @1263 [@dyn 694] (gas: 3)\n 34027: a0 = u64 [s1 + 0x110]\n 34031: a0 = i32 [a0]\n 34033: jump @1265 if a0 >u 63\n      : @1264 (gas: 3)\n 34037: a0 = u64 [s1 + 0x110]\n 34041: u32 [a0 + 0] = 0x40\n 34044: fallthrough\n      : @1265 (gas: 11)\n 34045: a0 = sp + 0xffffffffffffffe0\n 34048: a0 = a0 & 0xffffffffffffffe0\n 34051: u64 [s1 + 0x128] = a0\n 34055: sp = a0\n 34057: i32 a2 = a0 + 0\n 34059: a1 = 0x40\n 34062: a0 = u64 [s1 + 0xe8]\n 34066: ra = 0x56e\n 34070: ecalli 9 // 'hash_keccak_256'\n 34072: t0 = 0x570\n 34076: jump @1925\n      : @1266 [@dyn 695] (gas: 1)\n 34079: t0 = 1392, jump @1925\n      : @1267 [@dyn 696] (gas: 8)\n 34085: a3 = a1 + 0x500\n 34089: u64 [a3 + 0xe8] = a4\n 34093: u64 [a3 + 0xf0] = a5\n 34097: u64 [a3 + 0xf8] = a2\n 34101: u64 [a1 + 0x600] = a0\n 34105: a0 = s1 + 0x3ec0\n 34109: a1 = u64 [s1 + 0x130]\n 34113: ra = 1394, jump @23\n      : @1268 [@dyn 697] (gas: 3)\n 34120: t0 = 0x574\n 34124: a2 = s1 + 0x28d8\n 34128: fallthrough\n      : @1269 [@dyn 698] (gas: 12)\n 34129: a0 = u64 [s1 + 0x140]\n 34133: a3 = a2 + 0x500\n 34137: u64 [a3 + 0x80] = a0\n 34141: a0 = u64 [s1 + 0x148]\n 34145: u64 [a3 + 0x78] = a0\n 34148: a0 = u64 [s1 + 0x150]\n 34152: u64 [a3 + 0x70] = a0\n 34155: a1 = s1 + 0x2e40\n 34159: a0 = u64 [s1 + 0x158]\n 34163: u64 [a3 + 0x68] = a0\n 34166: a0 = 0\n 34168: ra = 1398, jump @19\n      : @1270 [@dyn 699] (gas: 9)\n 34175: a0 = s1 + 0x28d8\n 34179: u64 [a0 + 1376] = 0\n 34183: u64 [a0 + 1368] = 0\n 34187: u64 [a0 + 1360] = 0\n 34191: a3 = a0\n 34193: a0 = 0x20\n 34196: a1 = s1 + 0x2e20\n 34200: u64 [a3 + 1352] = 0xb\n 34205: ra = 1400, jump @19\n      : @1271 [@dyn 700] (gas: 1)\n 34212: t0 = 1402, jump @1998\n      : @1272 [@dyn 701] (gas: 1)\n 34218: jump @1274 if a1 <u a0\n      : @1273 (gas: 3)\n 34221: a0 = u64 [s1 + 0x110]\n 34225: u32 [a0 + 0] = 0x40\n 34228: fallthrough\n      : @1274 (gas: 3)\n 34229: a0 = 0xffffffff00000000\n 34239: u64 [s1 + 0x128] = a0\n 34243: t0 = 1404, jump @1953\n      : @1275 [@dyn 702] (gas: 5)\n 34249: ra = 0x57e\n 34253: ecalli 9 // 'hash_keccak_256'\n 34255: a3 = u64 [s1 + 0x120]\n 34259: t0 = 0x580\n 34263: jump @1915\n      : @1276 [@dyn 703] (gas: 2)\n 34266: a3 = u64 [s1 + 0x120]\n 34270: t0 = 1408, jump @1915\n      : @1277 [@dyn 704] (gas: 10)\n 34276: a1 = u64 [s1 + 0x130]\n 34280: u64 [a1] = a3\n 34282: u64 [a1 + 0x8] = a2\n 34285: u64 [a1 + 0x10] = a4\n 34288: u64 [a1 + 0x18] = a0\n 34291: a0 = u64 [s1 + 0xe0]\n 34295: ra = 0x582\n 34299: ecalli 5 // 'caller'\n 34301: t0 = 0x584\n 34305: jump @1931\n      : @1278 [@dyn 705] (gas: 1)\n 34308: t0 = 1412, jump @1931\n      : @1279 [@dyn 706] (gas: 4)\n 34314: i32 a0 = a0 + 0xfffffffffffffe00\n 34318: a0 = a0 + s1\n 34321: a1 = u64 [s1 + 0x130]\n 34325: ra = 1414, jump @21\n      : @1280 [@dyn 707] (gas: 17)\n 34332: a1 = s1 + 0x28d8\n 34336: a0 = u32 [a1 + 0x53c]\n 34340: a1 = u64 [a1 + 0x540]\n 34344: a0 = a0 << 0x20\n 34347: a2 = u64 [s1 + 0x108]\n 34351: a0 = a0 | a2\n 34354: a2 = s1 + 0x38d8\n 34358: a3 = a2 + 0x600\n 34362: u64 [a3 + 0x20] = a1\n 34365: a1 = u64 [s1 + 0x118]\n 34369: u64 [a3 + 0x10] = a1\n 34372: a1 = u64 [s1 + 0x120]\n 34376: u64 [a3 + 0x8] = a1\n 34379: u64 [a3 + 0x18] = a0\n 34382: a1 = s1 + 0x3ee0\n 34386: a0 = u64 [s1 + 0x130]\n 34390: ra = 1416, jump @23\n      : @1281 [@dyn 708] (gas: 13)\n 34397: a0 = u64 [s1 + 0x140]\n 34401: a2 = s1 + 0x28d8\n 34405: a3 = a2 + 0x500\n 34409: u64 [a3 + 0x20] = a0\n 34412: a0 = u64 [s1 + 0x148]\n 34416: u64 [a3 + 0x18] = a0\n 34419: a0 = u64 [s1 + 0x150]\n 34423: u64 [a3 + 0x10] = a0\n 34426: a1 = s1 + 0x2de0\n 34430: a0 = u64 [s1 + 0x158]\n 34434: u64 [a3 + 0x8] = a0\n 34437: a0 = 0\n 34439: ra = 1418, jump @19\n      : @1282 [@dyn 709] (gas: 3)\n 34446: t0 = 0x58c\n 34450: a1 = s1 + 0x28d8\n 34454: fallthrough\n      : @1283 [@dyn 710] (gas: 8)\n 34455: u64 [a1 + 1280] = 0\n 34459: u64 [a1 + 1272] = 0\n 34463: u64 [a1 + 1256] = 0xb\n 34468: a2 = a1\n 34470: a0 = 0x20\n 34473: a1 = s1 + 0x2dc0\n 34477: u64 [a2 + 1264] = 0\n 34481: ra = 1422, jump @19\n      : @1284 [@dyn 711] (gas: 1)\n 34488: t0 = 1424, jump @1998\n      : @1285 [@dyn 712] (gas: 1)\n 34494: jump @1287 if a1 <u a0\n      : @1286 (gas: 4)\n 34497: a0 = u64 [s1 + 0x110]\n 34501: u32 [a0 + 0] = 0x40\n 34504: t0 = 0x592\n 34508: jump @1953\n      : @1287 (gas: 1)\n 34511: t0 = 1426, jump @1953\n      : @1288 [@dyn 713] (gas: 5)\n 34517: ra = 0x594\n 34521: ecalli 9 // 'hash_keccak_256'\n 34523: a3 = u64 [s1 + 0x120]\n 34527: t0 = 0x596\n 34531: jump @1912\n      : @1289 [@dyn 714] (gas: 2)\n 34534: a3 = u64 [s1 + 0x120]\n 34538: t0 = 1430, jump @1912\n      : @1290 [@dyn 715] (gas: 10)\n 34544: a1 = u64 [s1 + 0x130]\n 34548: u64 [a1] = a4\n 34550: u64 [a1 + 0x8] = a5\n 34553: u64 [a1 + 0x10] = a2\n 34556: u64 [a1 + 0x18] = a0\n 34559: a0 = u64 [s1 + 0xe0]\n 34563: ra = 0x598\n 34567: ecalli 0 // 'address'\n 34568: t0 = 0x59a\n 34572: jump @1931\n      : @1291 [@dyn 716] (gas: 1)\n 34575: t0 = 1434, jump @1931\n      : @1292 [@dyn 717] (gas: 4)\n 34581: i32 a0 = a0 + 0xfffffffffffffda0\n 34585: a0 = a0 + s1\n 34588: a1 = u64 [s1 + 0x130]\n 34592: ra = 1436, jump @21\n      : @1293 [@dyn 718] (gas: 20)\n 34599: a1 = s1 + 0x28d8\n 34603: a0 = u64 [a1 + 0x4e0]\n 34607: a1 = u64 [a1 + 0x4d8]\n 34611: a0 = a0 & 0xffffffffffffffff\n 34614: a4 = s1 + 0x100\n 34618: a2 = u64 [a4 + 0x28]\n 34621: a1 = a1 & a2\n 34624: a2 = u64 [a4 + 0x8]\n 34627: a1 = a1 | a2\n 34630: a3 = s1 + 0x38d8\n 34634: a2 = u64 [a4 + 0x18]\n 34637: a5 = a3 + 0x600\n 34641: u64 [a5 + 0x30] = a2\n 34644: a2 = u64 [a4 + 0x20]\n 34647: u64 [a5 + 0x28] = a2\n 34650: u64 [a5 + 0x40] = a0\n 34653: u64 [a5 + 0x38] = a1\n 34656: a1 = s1 + 0x3f00\n 34660: a0 = u64 [a4 + 0x30]\n 34663: ra = 1438, jump @23\n      : @1294 [@dyn 719] (gas: 9)\n 34670: a0 = s1 + 0x38d8\n 34674: u64 [a0 + 1632] = 0\n 34678: u64 [a0 + 1624] = 0\n 34682: u64 [a0 + 1616] = 0\n 34686: a1 = a0\n 34688: u64 [a1 + 1608] = 0x8\n 34693: a0 = s1 + 0x2d80\n 34697: a1 = s1 + 0x3f20\n 34701: ra = 1440, jump @21\n      : @1295 [@dyn 720] (gas: 10)\n 34708: a0 = s1 + 0x28d8\n 34712: a4 = a0 + 0x400\n 34716: a3 = u64 [a4 + 0xc0]\n 34720: a2 = u64 [a4 + 0xb8]\n 34724: a1 = u64 [a4 + 0xb0]\n 34728: a0 = u64 [a4 + 0xa8]\n 34732: a4 = a1 | a3\n 34735: a5 = a0 | a2\n 34738: a4 = a4 | a5\n 34741: jump @1339 if a4 == 0\n      : @1296 (gas: 21)\n 34745: a4 = a0 | a1\n 34748: a4 = a4 <u 0x1\n 34751: a5 = a2 <u a4\n 34754: a3 = a3 - a5\n 34757: a2 = a2 - a4\n 34760: a4 = a0 <u 0x1\n 34763: a1 = a1 - a4\n 34766: a0 = a0 + 0xffffffffffffffff\n 34769: a4 = s1 + 0x38d8\n 34773: u64 [a4 + 1664] = 0\n 34777: u64 [a4 + 1656] = 0\n 34781: u64 [a4 + 1648] = 0\n 34785: u64 [a4 + 1640] = 0x8\n 34790: a5 = a4 + 0x600\n 34794: u64 [a5 + 0x88] = a0\n 34798: u64 [a5 + 0x90] = a1\n 34802: u64 [a5 + 0x98] = a2\n 34806: u64 [a5 + 0xa0] = a3\n 34810: a0 = s1 + 0x3f40\n 34814: a1 = s1 + 0x3f60\n 34818: ra = 1442, jump @23\n      : @1297 [@dyn 721] (gas: 6)\n 34825: a0 = u64 [s1 + 0xe0]\n 34829: ra = 0x5a4\n 34833: ecalli 0 // 'address'\n 34834: a2 = u64 [s1 + 0x138]\n 34838: t0 = 0x5a6\n 34842: jump @1948\n      : @1298 [@dyn 722] (gas: 2)\n 34845: a2 = u64 [s1 + 0x138]\n 34849: t0 = 1446, jump @1948\n      : @1299 [@dyn 723] (gas: 12)\n 34855: u64 [s1 + 0x130] = a1\n 34859: a0 = a0 >> 0x20\n 34862: a1 = reverse a2\n 34864: a2 = a1 << 0x20\n 34867: a0 = a0 | a2\n 34870: u64 [s1 + 0x128] = a0\n 34874: a1 = a1 >> 0x20\n 34877: u64 [s1 + 0x120] = a1\n 34881: a0 = u64 [s1 + 0xe0]\n 34885: ra = 0x5a8\n 34889: ecalli 5 // 'caller'\n 34891: fallthrough\n      : @1300 [@dyn 724] (gas: 3)\n 34892: a5 = s1 + 0x100\n 34896: a2 = u64 [a5 + 0x38]\n 34899: t0 = 1450, jump @1949\n      : @1301 [@dyn 725] (gas: 25)\n 34905: a3 = s1 + 0x28d8\n 34909: a4 = u64 [a5 + 0x40]\n 34912: u64 [a3 + 0x460] = a4\n 34916: a4 = u64 [a5 + 0x48]\n 34919: u64 [a3 + 0x458] = a4\n 34923: a4 = u64 [a5 + 0x50]\n 34926: u64 [a3 + 0x450] = a4\n 34930: a4 = u64 [a5 + 0x58]\n 34933: u64 [a3 + 0x448] = a4\n 34937: a4 = u64 [a5 + 0x20]\n 34940: u64 [a3 + 0x478] = a4\n 34944: a4 = u64 [a5 + 0x28]\n 34947: u64 [a3 + 0x470] = a4\n 34951: a4 = u64 [a5 + 0x30]\n 34954: a5 = a3 + 0x400\n 34958: u64 [a5 + 0x68] = a4\n 34961: u64 [a3 + 1152] = 0\n 34965: u64 [a5 + 0x98] = a2\n 34969: u64 [a5 + 0x90] = a0\n 34973: u64 [a5 + 0x88] = a1\n 34977: a0 = s1 + 0x2d60\n 34981: a1 = s1 + 0x2d40\n 34985: a2 = s1 + 0x2d20\n 34989: u64 [a3 + 1184] = 0\n 34993: ra = 1452, jump @1875\n      : @1302 [@dyn 726] (gas: 5)\n 34999: a0 = 0\n 35001: a1 = u64 [s1 + 0xe8]\n 35005: a2 = 0\n 35007: ecalli 13 // 'seal_return'\n 35009: jump @1373\n      : @1303 (gas: 6)\n 35012: a1 = 0x20220\n 35017: i32 a1 = a1 + 0\n 35019: a0 = 0x1\n 35022: a2 = 0\n 35024: ecalli 13 // 'seal_return'\n 35026: jump @1373\n      : @1304 (gas: 6)\n 35029: a1 = 0x20220\n 35034: i32 a1 = a1 + 0\n 35036: a0 = 0x1\n 35039: a2 = 0\n 35041: ecalli 13 // 'seal_return'\n 35043: jump @1373\n      : @1305 (gas: 6)\n 35046: a1 = 0x20220\n 35051: i32 a1 = a1 + 0\n 35053: a0 = 0x1\n 35056: a2 = 0\n 35058: ecalli 13 // 'seal_return'\n 35060: jump @1373\n      : @1306 (gas: 6)\n 35063: a1 = 0x20220\n 35068: i32 a1 = a1 + 0\n 35070: a0 = 0x1\n 35073: a2 = 0\n 35075: ecalli 13 // 'seal_return'\n 35077: jump @1373\n      : @1307 (gas: 6)\n 35080: a1 = 0x20220\n 35085: i32 a1 = a1 + 0\n 35087: a0 = 0x1\n 35090: a2 = 0\n 35092: ecalli 13 // 'seal_return'\n 35094: jump @1373\n      : @1308 (gas: 6)\n 35097: a1 = 0x20220\n 35102: i32 a1 = a1 + 0\n 35104: a0 = 0x1\n 35107: a2 = 0\n 35109: ecalli 13 // 'seal_return'\n 35111: jump @1373\n      : @1309 (gas: 6)\n 35114: a1 = 0x20220\n 35119: i32 a1 = a1 + 0\n 35121: a0 = 0x1\n 35124: a2 = 0\n 35126: ecalli 13 // 'seal_return'\n 35128: jump @1373\n      : @1310 (gas: 6)\n 35131: a1 = 0x20220\n 35136: i32 a1 = a1 + 0\n 35138: a0 = 0x1\n 35141: a2 = 0\n 35143: ecalli 13 // 'seal_return'\n 35145: jump @1373\n      : @1311 (gas: 6)\n 35148: a1 = 0x20220\n 35153: i32 a1 = a1 + 0\n 35155: a0 = 0x1\n 35158: a2 = 0\n 35160: ecalli 13 // 'seal_return'\n 35162: jump @1373\n      : @1312 (gas: 6)\n 35165: a1 = 0x20220\n 35170: i32 a1 = a1 + 0\n 35172: a0 = 0x1\n 35175: a2 = 0\n 35177: ecalli 13 // 'seal_return'\n 35179: jump @1373\n      : @1313 (gas: 6)\n 35182: a1 = 0x20220\n 35187: i32 a1 = a1 + 0\n 35189: a0 = 0x1\n 35192: a2 = 0\n 35194: ecalli 13 // 'seal_return'\n 35196: jump @1373\n      : @1314 (gas: 1)\n 35199: jump @1346 if a0 != 3096268766\n      : @1315 (gas: 12)\n 35207: a0 = s1 + 0x38d8\n 35211: u64 [a0 + 480] = 0\n 35215: u64 [a0 + 472] = 0\n 35219: u64 [a0 + 464] = 0\n 35223: u64 [a0 + 456] = 0\n 35227: a0 = s1 + 0x4000\n 35231: i32 a0 = a0 + 0xfffffffffffffaa0\n 35235: ra = 0x5ae\n 35239: ecalli 16 // 'value_transferred'\n 35241: a0 = 0x4000\n 35245: t0 = 0x5b0\n 35249: jump @2011\n      : @1316 [@dyn 727] (gas: 2)\n 35252: a0 = 0x4000\n 35256: t0 = 1456, jump @2011\n      : @1317 [@dyn 728] (gas: 8)\n 35262: a0 = u64 [a4 + 0xd8]\n 35266: a1 = u64 [a4 + 0xe0]\n 35270: a2 = u64 [a4 + 0xd0]\n 35274: a3 = u64 [a4 + 0xc8]\n 35278: a1 = a1 | a2\n 35281: a0 = a0 | a3\n 35284: a0 = a0 | a1\n 35287: jump @1351 if a0 == 0\n      : @1318 (gas: 6)\n 35291: a1 = 0x20220\n 35296: i32 a1 = a1 + 0\n 35298: a0 = 0x1\n 35301: a2 = 0\n 35303: ecalli 13 // 'seal_return'\n 35305: jump @1373\n      : @1319 (gas: 6)\n 35308: a1 = 0x20220\n 35313: i32 a1 = a1 + 0\n 35315: a0 = 0x1\n 35318: a2 = 0\n 35320: ecalli 13 // 'seal_return'\n 35322: jump @1373\n      : @1320 (gas: 6)\n 35325: a1 = 0x20220\n 35330: i32 a1 = a1 + 0\n 35332: a0 = 0x1\n 35335: a2 = 0\n 35337: ecalli 13 // 'seal_return'\n 35339: jump @1373\n      : @1321 (gas: 6)\n 35342: a1 = 0x20220\n 35347: i32 a1 = a1 + 0\n 35349: a0 = 0x1\n 35352: a2 = 0\n 35354: ecalli 13 // 'seal_return'\n 35356: jump @1373\n      : @1322 (gas: 10)\n 35359: a0 = s1 + 0x18d8\n 35363: u64 [a0 + 24] = 0\n 35366: u64 [a0 + 16] = 0\n 35369: u64 [a0 + 8] = 0\n 35372: a2 = a0\n 35374: a0 = 0x64a0ae9200000000\n 35384: a1 = s1 + 0x18e0\n 35388: u64 [a2 + 0x20] = a0\n 35391: a0 = 0\n 35393: ra = 1458, jump @19\n      : @1323 [@dyn 729] (gas: 9)\n 35400: a0 = s1 + 0x18d8\n 35404: u64 [a0 + 0] = 0\n 35406: u64 [a0 + 4294967288] = 0\n 35409: u64 [a0 + 4294967280] = 0\n 35412: a2 = a0\n 35414: a0 = 0x4\n 35417: a1 = s1 + 0x18c0\n 35421: u64 [a2 + 4294967272] = 0\n 35424: ra = 1460, jump @19\n      : @1324 [@dyn 730] (gas: 2)\n 35431: a1 = i32 [0x2020c]\n 35436: jump @1326 if a1 >u 63\n      : @1325 (gas: 3)\n 35440: u32 [0x2020c] = 0x40\n 35446: a1 = 0x20220\n 35451: jump @1223\n      : @1326 (gas: 2)\n 35454: a1 = 0x20220\n 35459: jump @1223\n      : @1327 (gas: 10)\n 35462: a0 = s1 + 0x18d8\n 35466: u64 [a0 + 1912] = 0\n 35470: u64 [a0 + 1904] = 0\n 35474: u64 [a0 + 1896] = 0\n 35478: a2 = a0\n 35480: a0 = 0x73c6ac6e00000000\n 35490: a1 = s1 + 0x2040\n 35494: u64 [a2 + 0x780] = a0\n 35498: a0 = 0\n 35500: ra = 1462, jump @19\n      : @1328 [@dyn 731] (gas: 9)\n 35507: a0 = s1 + 0x18d8\n 35511: u64 [a0 + 1888] = 0\n 35515: u64 [a0 + 1880] = 0\n 35519: u64 [a0 + 1872] = 0\n 35523: a2 = a0\n 35525: a0 = 0x4\n 35528: a1 = s1 + 0x2020\n 35532: u64 [a2 + 1864] = 0\n 35536: ra = 1464, jump @19\n      : @1329 [@dyn 732] (gas: 2)\n 35543: a1 = i32 [0x2020c]\n 35548: jump @1331 if a1 >u 63\n      : @1330 (gas: 3)\n 35552: u32 [0x2020c] = 0x40\n 35558: a1 = 0x20220\n 35563: jump @1223\n      : @1331 (gas: 2)\n 35566: a1 = 0x20220\n 35571: jump @1223\n      : @1332 (gas: 8)\n 35574: a0 = s1 + 0x18d8\n 35578: u64 [a0 + 88] = 0\n 35581: u64 [a0 + 80] = 0\n 35584: u64 [a0 + 72] = 0\n 35587: a2 = a0\n 35589: t0 = 0x5ba\n 35593: a0 = 0x4e487b7100000000\n 35603: fallthrough\n      : @1333 [@dyn 733] (gas: 4)\n 35604: a1 = s1 + 0x1920\n 35608: u64 [a2 + 0x60] = a0\n 35611: a0 = 0\n 35613: ra = 1468, jump @19\n      : @1334 [@dyn 734] (gas: 3)\n 35620: t0 = 0x5be\n 35624: a1 = s1 + 0x18d8\n 35628: fallthrough\n      : @1335 [@dyn 735] (gas: 8)\n 35629: u64 [a1 + 64] = 0\n 35632: u64 [a1 + 56] = 0\n 35635: u64 [a1 + 40] = 0x41\n 35639: a2 = a1\n 35641: a0 = 0x4\n 35644: a1 = s1 + 0x1900\n 35648: u64 [a2 + 48] = 0\n 35651: ra = 1472, jump @19\n      : @1336 [@dyn 736] (gas: 3)\n 35658: a0 = u64 [s1 + 0x88]\n 35662: a0 = i32 [a0]\n 35664: jump @1338 if a0 >u 63\n      : @1337 (gas: 3)\n 35668: a1 = u64 [s1 + 0x88]\n 35672: u32 [a1 + 0] = 0x40\n 35675: fallthrough\n      : @1338 (gas: 5)\n 35676: a0 = 0x1\n 35679: a2 = 0x24\n 35682: a1 = u64 [s1 + 0x78]\n 35685: ecalli 13 // 'seal_return'\n 35687: fallthrough\n      : @1339 (gas: 8)\n 35688: a0 = s1 + 0x28d8\n 35692: u64 [a0 + 1080] = 0\n 35696: u64 [a0 + 1072] = 0\n 35700: u64 [a0 + 1064] = 0\n 35704: a2 = a0\n 35706: t0 = 0x5c2\n 35710: a0 = 0x4e487b7100000000\n 35720: fallthrough\n      : @1340 [@dyn 737] (gas: 4)\n 35721: a1 = s1 + 0x2d00\n 35725: u64 [a2 + 0x440] = a0\n 35729: a0 = 0\n 35731: ra = 1476, jump @19\n      : @1341 [@dyn 738] (gas: 3)\n 35738: t0 = 0x5c6\n 35742: a1 = s1 + 0x28d8\n 35746: fallthrough\n      : @1342 [@dyn 739] (gas: 8)\n 35747: u64 [a1 + 1056] = 0\n 35751: u64 [a1 + 1048] = 0\n 35755: u64 [a1 + 1032] = 0x11\n 35760: a2 = a1\n 35762: a0 = 0x4\n 35765: a1 = s1 + 0x2ce0\n 35769: u64 [a2 + 1040] = 0\n 35773: ra = 1480, jump @19\n      : @1343 [@dyn 740] (gas: 3)\n 35780: a0 = u64 [s1 + 0x110]\n 35784: a0 = i32 [a0]\n 35786: jump @1345 if a0 >u 63\n      : @1344 (gas: 3)\n 35790: a1 = u64 [s1 + 0x110]\n 35794: u32 [a1 + 0] = 0x40\n 35797: fallthrough\n      : @1345 (gas: 5)\n 35798: a0 = 0x1\n 35801: a2 = 0x24\n 35804: a1 = u64 [s1 + 0xe8]\n 35808: ecalli 13 // 'seal_return'\n 35810: fallthrough\n      : @1346 (gas: 1)\n 35811: jump @1353 if a0 != 33540519\n      : @1347 (gas: 11)\n 35819: a0 = s1 + 0x30d8\n 35823: u64 [a0 + 384] = 0\n 35827: u64 [a0 + 376] = 0\n 35831: u64 [a0 + 368] = 0\n 35835: u64 [a0 + 360] = 0\n 35839: a0 = s1 + 0x3000\n 35843: i32 a0 = a0 + 0x240\n 35847: ra = 0x5ca\n 35851: ecalli 16 // 'value_transferred'\n 35853: t0 = 0x5cc\n 35857: jump @2017\n      : @1348 [@dyn 741] (gas: 1)\n 35860: t0 = 1484, jump @2017\n      : @1349 [@dyn 742] (gas: 8)\n 35866: a0 = u64 [a4 + 0x78]\n 35869: a1 = u64 [a4 + 0x80]\n 35873: a2 = u64 [a4 + 0x70]\n 35876: a3 = u64 [a4 + 0x68]\n 35879: a1 = a1 | a2\n 35882: a0 = a0 | a3\n 35885: a0 = a0 | a1\n 35888: jump @1358 if a0 == 0\n      : @1350 (gas: 6)\n 35892: a1 = 0x20220\n 35897: i32 a1 = a1 + 0\n 35899: a0 = 0x1\n 35902: a2 = 0\n 35904: ecalli 13 // 'seal_return'\n 35906: jump @1373\n      : @1351 (gas: 4)\n 35909: a0 = u64 [s1 + 0x158]\n 35913: a0 = i32 [a0]\n 35915: a1 = 0x83\n 35919: jump @1361 if a1 <u a0\n      : @1352 (gas: 6)\n 35923: a1 = 0x20220\n 35928: i32 a1 = a1 + 0\n 35930: a0 = 0x1\n 35933: a2 = 0\n 35935: ecalli 13 // 'seal_return'\n 35937: jump @1373\n      : @1353 (gas: 1)\n 35940: jump @1367 if a0 != 157198259\n      : @1354 (gas: 12)\n 35948: a0 = s1 + 0x30d8\n 35952: u64 [a0 + 608] = 0\n 35956: u64 [a0 + 600] = 0\n 35960: u64 [a0 + 592] = 0\n 35964: u64 [a0 + 584] = 0\n 35968: a0 = s1 + 0x3000\n 35972: i32 a0 = a0 + 0x320\n 35976: ra = 0x5ce\n 35980: ecalli 16 // 'value_transferred'\n 35982: a0 = 0x30d8\n 35986: t0 = 0x5d0\n 35990: jump @2001\n      : @1355 [@dyn 743] (gas: 2)\n 35993: a0 = 0x30d8\n 35997: t0 = 1488, jump @2001\n      : @1356 [@dyn 744] (gas: 1)\n 36003: jump @1373 if a0 == 0\n      : @1357 (gas: 6)\n 36007: a1 = 0x20220\n 36012: i32 a1 = a1 + 0\n 36014: a0 = 0x1\n 36017: a2 = 0\n 36019: ecalli 13 // 'seal_return'\n 36021: jump @1373\n      : @1358 (gas: 1)\n 36024: t0 = 1490, jump @2014\n      : @1359 [@dyn 745] (gas: 1)\n 36030: jump @1375 if a1 <u a0\n      : @1360 (gas: 6)\n 36034: a1 = 0x20220\n 36039: i32 a1 = a1 + 0\n 36041: a0 = 0x1\n 36044: a2 = 0\n 36046: ecalli 13 // 'seal_return'\n 36048: jump @1373\n      : @1361 (gas: 4)\n 36051: a0 = s1 + 0x2760\n 36055: ra = 0x5d4\n 36059: t0 = 0x62e\n 36063: jump @2009\n      : @1362 [@dyn 746] (gas: 14)\n 36066: a1 = s1 + 0x20d8\n 36070: a2 = a1 + 0x600\n 36074: a0 = u64 [a2 + 0xa0]\n 36078: u64 [s1 + 0x120] = a0\n 36082: a0 = u64 [a2 + 0x98]\n 36086: u64 [s1 + 0x128] = a0\n 36090: a0 = u64 [a2 + 0x90]\n 36094: u64 [s1 + 0x130] = a0\n 36098: a0 = u64 [a2 + 0x88]\n 36102: u64 [s1 + 0x138] = a0\n 36106: a0 = s1 + 0x2740\n 36110: ra = 0x5d6\n 36114: t0 = 0x638\n 36118: jump @2009\n      : @1363 [@dyn 747] (gas: 16)\n 36121: a1 = s1 + 0x20d8\n 36125: a2 = a1 + 0x600\n 36129: a0 = u64 [a2 + 0x80]\n 36133: u64 [s1 + 0x100] = a0\n 36137: a0 = u64 [a2 + 0x78]\n 36140: u64 [s1 + 0x108] = a0\n 36144: a0 = u64 [a2 + 0x70]\n 36147: u64 [s1 + 0x110] = a0\n 36151: a0 = u64 [a2 + 0x68]\n 36154: u64 [s1 + 0x118] = a0\n 36158: a0 = s1 + 0x4000\n 36162: i32 a0 = a0 + 0xfffffffffffffac0\n 36166: a1 = 0x64\n 36169: ra = 0x5d8\n 36173: ecalli 3 // 'call_data_load'\n 36175: fallthrough\n      : @1364 [@dyn 748] (gas: 5)\n 36176: a0 = s1 + 0x38d8\n 36180: a1 = u64 [a0 + 0x200]\n 36184: a2 = u64 [a0 + 0x1f8]\n 36188: a3 = u64 [a0 + 0x1f0]\n 36192: t0 = 1498, jump @1993\n      : @1365 [@dyn 749] (gas: 1)\n 36198: jump @1378 if a1 != 0\n      : @1366 (gas: 6)\n 36202: a1 = 0x20220\n 36207: i32 a1 = a1 + 0\n 36209: a0 = 0x1\n 36212: a2 = 0\n 36214: ecalli 13 // 'seal_return'\n 36216: jump @1373\n      : @1367 (gas: 2)\n 36218: a2 = s1 + 0x30d8\n 36222: jump @1371 if a0 != 599290589\n      : @1368 (gas: 8)\n 36229: u64 [a2 + 1280] = 0\n 36233: u64 [a2 + 1272] = 0\n 36237: u64 [a2 + 1264] = 0\n 36241: u64 [a2 + 1256] = 0\n 36245: a0 = s1 + 0x3000\n 36249: i32 a0 = a0 + 0x5c0\n 36253: ecalli 16 // 'value_transferred'\n 36255: fallthrough\n      : @1369 (gas: 10)\n 36256: a3 = s1 + 0x30d8\n 36260: a4 = a3 + 0x400\n 36264: a0 = u64 [a4 + 0xf8]\n 36268: a1 = u64 [a3 + 0x500]\n 36272: a2 = u64 [a4 + 0xf0]\n 36276: a3 = u64 [a4 + 0xe8]\n 36280: a1 = a1 | a2\n 36283: a0 = a0 | a3\n 36286: a0 = a0 | a1\n 36289: jump @1382 if a0 == 0\n      : @1370 (gas: 6)\n 36293: a1 = 0x20220\n 36298: i32 a1 = a1 + 0\n 36300: a0 = 0x1\n 36303: a2 = 0\n 36305: ecalli 13 // 'seal_return'\n 36307: jump @1373\n      : @1371 (gas: 6)\n 36309: a1 = 0x20220\n 36314: i32 a1 = a1 + 0\n 36316: a0 = 0x1\n 36319: a2 = 0\n 36321: ecalli 13 // 'seal_return'\n 36323: jump @1373\n      : @1372 (gas: 5)\n 36325: i32 a1 = a1 + 0\n 36327: a0 = 0x1\n 36330: a2 = 0\n 36332: ecalli 13 // 'seal_return'\n 36334: fallthrough\n      : @1373 (gas: 4)\n 36335: a0 = u64 [s1 + 0x158]\n 36339: a0 = i32 [a0]\n 36341: a1 = 0x43\n 36344: jump @1385 if a1 <u a0\n      : @1374 (gas: 2)\n 36348: a1 = 0x20220\n 36353: jump @1372\n      : @1375 (gas: 6)\n 36355: a0 = s1 + 0x3000\n 36359: i32 a0 = a0 + 0x260\n 36363: a1 = 0x4\n 36366: ra = 0x5dc\n 36370: ecalli 3 // 'call_data_load'\n 36372: fallthrough\n      : @1376 [@dyn 750] (gas: 12)\n 36373: a2 = s1 + 0x30d8\n 36377: a4 = a2 + 0x100\n 36381: a1 = u64 [a4 + 0xa0]\n 36385: a0 = u64 [a4 + 0x98]\n 36389: a3 = u64 [a4 + 0x88]\n 36393: a2 = u64 [a4 + 0x90]\n 36397: a4 = a1 << 0x20\n 36400: a4 = a4 >> 0x20\n 36403: a3 = a3 | a0\n 36406: a4 = a4 | a2\n 36409: a4 = a4 | a3\n 36412: jump @1418 if a4 == 0\n      : @1377 (gas: 2)\n 36416: a1 = 0x20220\n 36421: jump @1372\n      : @1378 (gas: 22)\n 36423: a0 = s1 + 0x38d8\n 36427: a1 = u64 [a0 + 0x1e8]\n 36431: a0 = u64 [s1 + 0x158]\n 36435: a5 = u32 [a0]\n 36437: a0 = a1 + 0x23\n 36440: t0 = a1\n 36442: a1 = a0 <u a1\n 36445: a3 = u64 [s1 + 0x140]\n 36449: a2 = a3 + a1\n 36452: a3 = a2 <u a3\n 36455: a3 = a1 if a1 == 0\n 36458: a1 = u64 [s1 + 0x148]\n 36462: a3 = a3 + a1\n 36465: a1 = a3 <u a1\n 36468: a4 = u64 [s1 + 0x150]\n 36472: a1 = a1 + a4\n 36475: a1 = a1 | a3\n 36478: u64 [s1 + 0x158] = a5\n 36482: a0 = a0 <u a5\n 36485: a0 = 0 if a2 != 0\n 36487: a0 = 0 if a1 != 0\n 36489: jump @1427 if a0 == 0\n      : @1379 (gas: 44)\n 36493: u64 [s1 + 0xf8] = t0\n 36497: i32 a1 = t0 + 0x4\n 36500: a0 = s1 + 0x4000\n 36504: i32 a0 = a0 + 0xfffffffffffffae0\n 36508: ecalli 3 // 'call_data_load'\n 36510: a0 = s1 + 0x38d8\n 36514: t0 = u64 [a0 + 0x208]\n 36518: t2 = u64 [a0 + 0x210]\n 36522: ra = u64 [a0 + 0x218]\n 36526: a1 = a0\n 36528: a0 = u64 [s1 + 0xf8]\n 36532: a2 = a0 + 0x24\n 36535: a4 = a2 <u a0\n 36538: a0 = u64 [s1 + 0x140]\n 36542: a5 = a0 + a4\n 36545: a0 = a5 <u a0\n 36548: a0 = a4 if a4 == 0\n 36551: a4 = u64 [a1 + 0x220]\n 36555: a1 = u64 [s1 + 0x148]\n 36559: a0 = a0 + a1\n 36562: t1 = a0 <u a1\n 36565: a1 = u64 [s1 + 0x150]\n 36569: t1 = t1 + a1\n 36572: a3 = s1 + 0x20d8\n 36576: u64 [a3 + 1536] = 0\n 36580: u64 [a3 + 1528] = 0\n 36584: u64 [a3 + 1520] = 0\n 36588: a1 = u64 [s1 + 0x158]\n 36592: u64 [a3 + 0x5e8] = a1\n 36596: a1 = a3 + 0x600\n 36600: u64 [a1 + 0x20] = a4\n 36603: u64 [a3 + 0x618] = ra\n 36607: u64 [a3 + 0x610] = t2\n 36611: u64 [a3 + 0x608] = t0\n 36615: u64 [a1 + 0x30] = a5\n 36618: u64 [a1 + 0x28] = a2\n 36621: u64 [a1 + 0x38] = a0\n 36624: a4 = a3\n 36626: a0 = s1 + 0x2720\n 36630: a1 = s1 + 0x2700\n 36634: a2 = s1 + 0x26e0\n 36638: a3 = s1 + 0x26c0\n 36642: u64 [a4 + 0x640] = t1\n 36646: ra = 1502, jump @1540\n      : @1380 [@dyn 751] (gas: 56)\n 36652: a0 = s1 + 0x20d8\n 36656: a2 = a0 + 0x600\n 36660: a1 = u64 [a2 + 0x48]\n 36663: u64 [s1 + 0x158] = a1\n 36667: a1 = u64 [a2 + 0x50]\n 36670: u64 [s1 + 0x150] = a1\n 36674: a1 = u64 [a2 + 0x58]\n 36677: u64 [s1 + 0x148] = a1\n 36681: a1 = u64 [a2 + 0x60]\n 36684: u64 [s1 + 0x140] = a1\n 36688: a0 = s1 + 0x4000\n 36692: i32 a0 = a0 + 0xfffffffffffffb00\n 36696: a1 = 0x44\n 36699: ecalli 3 // 'call_data_load'\n 36701: a3 = s1 + 0x38d8\n 36705: a4 = a3 + 0x200\n 36709: a0 = u64 [a4 + 0x28]\n 36712: a1 = u64 [a4 + 0x30]\n 36715: a2 = u64 [a4 + 0x38]\n 36718: a3 = u64 [a4 + 0x40]\n 36721: a4 = s1 + 0x20d8\n 36725: a5 = u64 [s1 + 0x140]\n 36729: u64 [a4 + 0x580] = a5\n 36733: a5 = u64 [s1 + 0x148]\n 36737: u64 [a4 + 0x578] = a5\n 36741: a5 = u64 [s1 + 0x150]\n 36745: u64 [a4 + 0x570] = a5\n 36749: a5 = u64 [s1 + 0x158]\n 36753: u64 [a4 + 0x568] = a5\n 36757: a5 = a4 + 0x500\n 36761: u64 [a5 + 0xa0] = a3\n 36765: u64 [a5 + 0x98] = a2\n 36769: u64 [a5 + 0x90] = a1\n 36773: u64 [a5 + 0x88] = a0\n 36777: a0 = u64 [s1 + 0x100]\n 36781: u64 [a5 + 0xc0] = a0\n 36785: a0 = u64 [s1 + 0x108]\n 36789: u64 [a5 + 0xb8] = a0\n 36793: a0 = u64 [s1 + 0x110]\n 36797: u64 [a5 + 0xb0] = a0\n 36801: a0 = u64 [s1 + 0x118]\n 36805: u64 [a5 + 0xa8] = a0\n 36809: a0 = u64 [s1 + 0x120]\n 36813: u64 [a5 + 0xe0] = a0\n 36817: a0 = u64 [s1 + 0x128]\n 36821: u64 [a5 + 0xd8] = a0\n 36825: a0 = u64 [s1 + 0x130]\n 36829: u64 [a5 + 0xd0] = a0\n 36833: a5 = a4\n 36835: a0 = s1 + 0x26a0\n 36839: a1 = s1 + 0x2680\n 36843: a2 = s1 + 0x2660\n 36847: a3 = s1 + 0x2640\n 36851: a4 = u64 [s1 + 0x138]\n 36855: u64 [a5 + 0x5c8] = a4\n 36859: ra = 1504, jump @1723\n      : @1381 [@dyn 752] (gas: 6)\n 36865: a1 = 0x20220\n 36870: i32 a1 = a1 + 0\n 36872: a0 = 0\n 36874: a2 = 0\n 36876: ecalli 13 // 'seal_return'\n 36878: jump @1373\n      : @1382 (gas: 11)\n 36881: a0 = u64 [s1 + 0x158]\n 36885: a0 = u32 [a0]\n 36887: a2 = s1 + 0x7ff\n 36891: a2 = a2 + 0xd9\n 36895: u64 [a2 + 1984] = 0\n 36899: u64 [a2 + 1976] = 0\n 36903: u64 [a2 + 0x7a8] = a0\n 36907: a0 = s1 + 0x10a0\n 36911: a1 = s1 + 0x1080\n 36915: u64 [a2 + 1968] = 0\n 36919: ra = 1506, jump @1501\n      : @1383 [@dyn 753] (gas: 40)\n 36925: a1 = s1 + 0x7ff\n 36929: a1 = a1 + 0xd9\n 36933: a0 = u64 [a1 + 0x7c8]\n 36937: u64 [s1 + 0x158] = a0\n 36941: a0 = u64 [a1 + 0x7d0]\n 36945: u64 [s1 + 0x150] = a0\n 36949: a0 = u64 [a1 + 0x7d8]\n 36953: u64 [s1 + 0x148] = a0\n 36957: ra = u64 [a1 + 0x7e0]\n 36961: t2 = u64 [a1 + 0x7e8]\n 36965: a0 = s1 + 0x10d8\n 36969: t1 = u64 [a0]\n 36971: t0 = u64 [a0 + 0x8]\n 36974: a4 = u64 [a0 + 0x10]\n 36977: a3 = u64 [a0 + 0x18]\n 36980: a2 = u64 [a0 + 0x20]\n 36983: a5 = u64 [a1 + 0x7f0]\n 36987: a0 = u64 [a1 + 0x7f8]\n 36991: u64 [a1 + 0x760] = a2\n 36995: a2 = a1 + 0x700\n 36999: u64 [a2 + 0x58] = a3\n 37002: u64 [a2 + 0x50] = a4\n 37005: u64 [a1 + 0x748] = t0\n 37009: u64 [a1 + 0x780] = t1\n 37013: u64 [a2 + 0x78] = a0\n 37016: u64 [a2 + 0x70] = a5\n 37019: u64 [a1 + 0x768] = t2\n 37023: u64 [a1 + 0x7a0] = ra\n 37027: a5 = s1 + 0x100\n 37031: a0 = u64 [a5 + 0x48]\n 37034: u64 [a2 + 0x98] = a0\n 37038: a0 = u64 [a5 + 0x50]\n 37041: u64 [a2 + 0x90] = a0\n 37045: a3 = a1\n 37047: a0 = s1 + 0x1060\n 37051: a1 = s1 + 0x1040\n 37055: a2 = s1 + 0x1020\n 37059: a4 = u64 [a5 + 0x58]\n 37062: u64 [a3 + 0x788] = a4\n 37066: ra = 1508, jump @1617\n      : @1384 [@dyn 754] (gas: 6)\n 37072: a1 = 0x20220\n 37077: i32 a1 = a1 + 0\n 37079: a0 = 0\n 37081: a2 = 0\n 37083: ecalli 13 // 'seal_return'\n 37085: jump @1373\n      : @1385 (gas: 6)\n 37088: a0 = 0xffffffff\n 37098: u64 [s1 + 0x120] = a0\n 37102: a0 = s1 + 0x660\n 37106: ra = 0x5e6\n 37110: t0 = 0x62e\n 37114: jump @2009\n      : @1386 [@dyn 755] (gas: 27)\n 37117: a0 = u64 [s1 + 0x670]\n 37121: u64 [s1 + 0xe0] = a0\n 37125: a0 = u64 [s1 + 0x668]\n 37129: u64 [s1 + 0xe8] = a0\n 37133: a0 = u64 [s1 + 0x660]\n 37137: u64 [s1 + 0xf0] = a0\n 37141: a0 = s1 + 0x3000\n 37145: i32 a0 = a0 + 0x340\n 37149: a1 = 0x24\n 37152: ecalli 3 // 'call_data_load'\n 37154: a0 = s1 + 0x30d8\n 37158: a5 = a0 + 0x200\n 37162: a4 = u64 [a5 + 0x80]\n 37166: a3 = u64 [a5 + 0x78]\n 37169: a1 = u64 [a5 + 0x70]\n 37172: a2 = u64 [a5 + 0x68]\n 37175: u64 [s1 + 0x128] = a4\n 37179: u64 [s1 + 0x638] = a4\n 37183: u64 [s1 + 0x130] = a3\n 37187: u64 [s1 + 0x630] = a3\n 37191: u64 [s1 + 0x138] = a1\n 37195: u64 [s1 + 0x628] = a1\n 37199: a0 = s1 + 0x640\n 37203: a1 = s1 + 0x620\n 37207: u64 [s1 + 0x140] = a2\n 37211: u64 [s1 + 0x620] = a2\n 37215: ra = 1512, jump @1823\n      : @1387 [@dyn 756] (gas: 13)\n 37221: a1 = s1 + 0x600\n 37225: a0 = u64 [a1 + 0x50]\n 37228: u64 [s1 + 0xf8] = a0\n 37232: a0 = u64 [a1 + 0x48]\n 37235: u64 [s1 + 0x158] = a0\n 37239: a0 = u64 [a1 + 0x40]\n 37242: u64 [s1 + 0x100] = a0\n 37246: a0 = 0x30220\n 37251: u64 [s1 + 0x150] = a0\n 37255: i32 a0 = a0 + 0\n 37257: u64 [s1 + 0x148] = a0\n 37261: ecalli 5 // 'caller'\n 37263: fallthrough\n      : @1388 (gas: 18)\n 37264: a3 = s1 + 0x100\n 37268: a2 = u64 [a3 + 0x50]\n 37271: a0 = u32 [a2 + 0x10]\n 37274: a1 = u64 [a2]\n 37276: a2 = u64 [a2 + 0x8]\n 37279: a0 = a0 | a1\n 37282: a0 = a0 | a2\n 37285: a1 = u64 [a3 + 0x20]\n 37288: a2 = u64 [s1 + 0xf8]\n 37292: a1 = a1 & a2\n 37295: u64 [a3 + 0x18] = a1\n 37298: a1 = u64 [a3 + 0x58]\n 37301: a1 = a1 & 0xffffffffffffffff\n 37304: u64 [a3 + 0x10] = a1\n 37307: a1 = u64 [a3]\n 37309: a1 = a1 & 0xffffffffffffffff\n 37312: u64 [a3 + 0x8] = a1\n 37315: jump @1408 if a0 == 0\n      : @1389 (gas: 4)\n 37319: a0 = u64 [s1 + 0x148]\n 37323: ra = 0x5ea\n 37327: ecalli 5 // 'caller'\n 37329: fallthrough\n      : @1390 [@dyn 757] (gas: 3)\n 37330: a5 = s1 + 0x100\n 37334: a2 = u64 [a5 + 0x50]\n 37337: t0 = 1516, jump @1913\n      : @1391 [@dyn 758] (gas: 11)\n 37343: a2 = u64 [s1 + 0xf8]\n 37347: a2 = a2 << 0x20\n 37350: a2 = a2 >> 0x20\n 37353: a1 = a1 ^ a2\n 37356: a2 = u64 [a5]\n 37358: a0 = a0 ^ a2\n 37361: a0 = a0 | a1\n 37364: a1 = u64 [a5 + 0x58]\n 37367: a1 = a1 ^ a3\n 37370: a0 = a0 | a1\n 37373: jump @1408 if a0 == 0\n      : @1392 (gas: 11)\n 37377: u64 [s1 + 1560] = 0\n 37381: a0 = u64 [s1 + 0x108]\n 37385: a2 = s1 + 0x600\n 37389: u64 [a2] = a0\n 37391: a0 = u64 [s1 + 0x110]\n 37395: u64 [a2 + 0x8] = a0\n 37398: a1 = s1 + 0x600\n 37402: a0 = u64 [s1 + 0x118]\n 37406: u64 [a2 + 0x10] = a0\n 37409: a0 = 0\n 37411: ra = 1518, jump @19\n      : @1393 [@dyn 759] (gas: 7)\n 37418: u64 [s1 + 1528] = 0\n 37422: u64 [s1 + 1520] = 0\n 37426: u64 [s1 + 1504] = 0x5\n 37431: a0 = 0x20\n 37434: a1 = s1 + 0x5e0\n 37438: u64 [s1 + 1512] = 0\n 37442: ra = 1520, jump @19\n      : @1394 [@dyn 760] (gas: 4)\n 37449: a0 = 0x2020c\n 37454: u64 [s1 + 0x158] = a0\n 37458: a0 = i32 [0x2020c]\n 37463: jump @1396 if a0 >u 63\n      : @1395 (gas: 3)\n 37467: a1 = u64 [s1 + 0x158]\n 37471: u32 [a1 + 0] = 0x40\n 37474: fallthrough\n      : @1396 (gas: 14)\n 37475: a0 = sp + 0xffffffffffffffe0\n 37478: a2 = a0 & 0xffffffffffffffe0\n 37481: u64 [s1 + 0xf8] = a2\n 37485: sp = a2\n 37487: a0 = 0x20220\n 37492: i32 a0 = a0 + 0\n 37494: i32 a2 = a2 + 0\n 37496: a1 = 0x40\n 37499: u64 [s1 + 0x100] = a0\n 37503: ra = 0x5f2\n 37507: ecalli 9 // 'hash_keccak_256'\n 37509: a3 = u64 [s1 + 0xf8]\n 37513: t0 = 0x5f4\n 37517: jump @2019\n      : @1397 [@dyn 761] (gas: 2)\n 37520: a3 = u64 [s1 + 0xf8]\n 37524: t0 = 1524, jump @2019\n      : @1398 [@dyn 762] (gas: 17)\n 37530: u64 [s1 + 0xd8] = a0\n 37534: a0 = reverse a1\n 37536: u64 [s1 + 0xd0] = a0\n 37540: a0 = reverse a2\n 37542: u64 [s1 + 0xc8] = a0\n 37546: a0 = reverse a3\n 37548: u64 [s1 + 0xc0] = a0\n 37552: a0 = sp + 0xffffffffffffffe0\n 37555: a0 = a0 & 0xffffffffffffffe0\n 37558: u64 [s1 + 0xf8] = a0\n 37562: sp = a0\n 37564: a0 = u64 [s1 + 0x148]\n 37568: ra = 0x5f6\n 37572: ecalli 5 // 'caller'\n 37574: a2 = u64 [s1 + 0x150]\n 37578: t0 = 0x5f8\n 37582: jump @1914\n      : @1399 [@dyn 763] (gas: 2)\n 37585: a2 = u64 [s1 + 0x150]\n 37589: t0 = 1528, jump @1914\n      : @1400 [@dyn 764] (gas: 7)\n 37595: u64 [s1 + 1496] = 0\n 37599: u64 [s1 + 0x5d0] = a1\n 37603: u64 [s1 + 0x5c8] = a0\n 37607: a1 = s1 + 0x5c0\n 37611: u64 [s1 + 0x5c0] = a3\n 37615: a0 = 0\n 37617: ra = 1530, jump @19\n      : @1401 [@dyn 765] (gas: 12)\n 37624: a0 = u64 [s1 + 0xc0]\n 37628: a3 = s1 + 0x500\n 37632: u64 [a3 + 0xb8] = a0\n 37636: a0 = u64 [s1 + 0xc8]\n 37640: u64 [a3 + 0xb0] = a0\n 37644: a0 = u64 [s1 + 0xd0]\n 37648: u64 [a3 + 0xa8] = a0\n 37652: a0 = 0x20\n 37655: a1 = s1 + 0x5a0\n 37659: a2 = u64 [s1 + 0xd8]\n 37663: u64 [a3 + 0xa0] = a2\n 37667: ra = 1532, jump @19\n      : @1402 [@dyn 766] (gas: 3)\n 37674: a0 = u64 [s1 + 0x158]\n 37678: a0 = i32 [a0]\n 37680: jump @1404 if a0 >u 63\n      : @1403 (gas: 3)\n 37684: a0 = u64 [s1 + 0x158]\n 37688: u32 [a0 + 0] = 0x40\n 37691: fallthrough\n      : @1404 (gas: 12)\n 37692: a0 = sp + 0xffffffffffffffe0\n 37695: a0 = a0 & 0xffffffffffffffe0\n 37698: u64 [s1 + 0xd8] = a0\n 37702: sp = a0\n 37704: i32 a2 = a0 + 0\n 37706: a1 = 0x40\n 37709: a0 = u64 [s1 + 0x100]\n 37713: ra = 0x5fe\n 37717: ecalli 9 // 'hash_keccak_256'\n 37719: a3 = u64 [s1 + 0xd8]\n 37723: t0 = 0x600\n 37727: jump @1921\n      : @1405 [@dyn 767] (gas: 2)\n 37730: a3 = u64 [s1 + 0xd8]\n 37734: t0 = 1536, jump @1921\n      : @1406 [@dyn 768] (gas: 7)\n 37740: a1 = u64 [s1 + 0xf8]\n 37744: u64 [a1 + 0x18] = a3\n 37747: u64 [a1 + 0x10] = a2\n 37750: u64 [a1 + 0x8] = a4\n 37753: u64 [a1] = a0\n 37755: a0 = s1 + 0x580\n 37759: ra = 1538, jump @21\n      : @1407 [@dyn 769] (gas: 2)\n 37766: a0 = u8 [s1 + 0x580]\n 37770: jump @1428 if a0 == 0\n      : @1408 (gas: 45)\n 37774: a0 = u64 [s1 + 0x120]\n 37778: a1 = u64 [s1 + 0xe0]\n 37782: a5 = a1 & a0\n 37785: a1 = u64 [s1 + 0xe8]\n 37789: a4 = a1 & 0xffffffffffffffff\n 37792: a1 = u64 [s1 + 0xf0]\n 37796: a0 = a1 & 0xffffffffffffffff\n 37799: a1 = u64 [s1 + 0x140]\n 37803: u64 [s1 + 0x4c0] = a1\n 37807: u64 [s1 + 1272] = 0\n 37811: u64 [s1 + 1304] = 0\n 37815: a1 = u64 [s1 + 0x138]\n 37819: u64 [s1 + 0x4c8] = a1\n 37823: u64 [s1 + 0x150] = a0\n 37827: u64 [s1 + 0x4e0] = a0\n 37831: a0 = u64 [s1 + 0x108]\n 37835: u64 [s1 + 0x500] = a0\n 37839: a0 = u64 [0x20188]\n 37844: a1 = u64 [0x20190]\n 37849: a2 = u64 [0x20198]\n 37854: a3 = u64 [0x201a0]\n 37859: u64 [s1 + 0x538] = a0\n 37863: u64 [s1 + 0x530] = a1\n 37867: a1 = s1 + 0x500\n 37871: u64 [a1 + 0x28] = a2\n 37874: u64 [a1 + 0x20] = a3\n 37877: a0 = u64 [s1 + 0x130]\n 37881: u64 [s1 + 0x4d0] = a0\n 37885: u64 [s1 + 0x148] = a4\n 37889: u64 [s1 + 0x4e8] = a4\n 37893: a0 = u64 [s1 + 0x110]\n 37897: u64 [a1 + 0x8] = a0\n 37900: a0 = u64 [s1 + 0x128]\n 37904: u64 [s1 + 0x4d8] = a0\n 37908: u64 [s1 + 0x120] = a5\n 37912: u64 [s1 + 0x4f0] = a5\n 37916: a2 = s1 + 0x520\n 37920: a3 = s1 + 0x500\n 37924: a4 = s1 + 0x4e0\n 37928: a5 = s1 + 0x4c0\n 37932: a0 = u64 [s1 + 0x118]\n 37936: u64 [a1 + 0x10] = a0\n 37939: a0 = 0\n 37941: a1 = 0\n 37943: ra = 1540, jump @31\n      : @1409 [@dyn 770] (gas: 11)\n 37950: a0 = u64 [s1 + 0x128]\n 37954: u64 [s1 + 0x4b8] = a0\n 37958: a0 = u64 [s1 + 0x130]\n 37962: u64 [s1 + 0x4b0] = a0\n 37966: a0 = u64 [s1 + 0x138]\n 37970: u64 [s1 + 0x4a8] = a0\n 37974: a1 = s1 + 0x4a0\n 37978: a0 = u64 [s1 + 0x140]\n 37982: u64 [s1 + 0x4a0] = a0\n 37986: a0 = 0\n 37988: ra = 1542, jump @19\n      : @1410 [@dyn 771] (gas: 7)\n 37995: u64 [s1 + 1176] = 0\n 37999: u64 [s1 + 1168] = 0\n 38003: u64 [s1 + 1152] = 0x4\n 38008: a0 = 0x20\n 38011: a1 = s1 + 0x480\n 38015: u64 [s1 + 1160] = 0\n 38019: ra = 1544, jump @19\n      : @1411 [@dyn 772] (gas: 6)\n 38026: a0 = sp + 0xffffffffffffffe0\n 38029: a0 = a0 & 0xffffffffffffffe0\n 38032: u64 [s1 + 0x158] = a0\n 38036: sp = a0\n 38038: a1 = i32 [0x2020c]\n 38043: jump @1413 if a1 >u 63\n      : @1412 (gas: 2)\n 38047: u32 [0x2020c] = 0x40\n 38053: fallthrough\n      : @1413 (gas: 14)\n 38054: a0 = sp + 0xffffffffffffffe0\n 38057: a2 = a0 & 0xffffffffffffffe0\n 38060: u64 [s1 + 0x138] = a2\n 38064: sp = a2\n 38066: a0 = 0x20220\n 38071: i32 a0 = a0 + 0\n 38073: u64 [s1 + 0x140] = a0\n 38077: i32 a2 = a2 + 0\n 38079: a1 = 0x40\n 38082: ra = 0x60a\n 38086: ecalli 9 // 'hash_keccak_256'\n 38088: a3 = u64 [s1 + 0x138]\n 38092: t0 = 0x60c\n 38096: jump @1921\n      : @1414 [@dyn 773] (gas: 2)\n 38099: a3 = u64 [s1 + 0x138]\n 38103: t0 = 1548, jump @1921\n      : @1415 [@dyn 774] (gas: 7)\n 38109: a1 = u64 [s1 + 0x158]\n 38113: u64 [a1 + 0x18] = a3\n 38116: u64 [a1 + 0x10] = a2\n 38119: u64 [a1 + 0x8] = a4\n 38122: u64 [a1] = a0\n 38124: a0 = s1 + 0x460\n 38128: ra = 1550, jump @21\n      : @1416 [@dyn 775] (gas: 16)\n 38135: a0 = u32 [s1 + 0x474]\n 38139: a0 = a0 << 0x20\n 38142: a1 = u64 [s1 + 0x478]\n 38146: a2 = u64 [s1 + 0x120]\n 38150: a0 = a0 | a2\n 38153: a2 = s1 + 0x30d8\n 38157: a3 = u64 [s1 + 0x148]\n 38161: a4 = a2 + 0x200\n 38165: u64 [a4 + 0x90] = a3\n 38169: a3 = u64 [s1 + 0x150]\n 38173: u64 [a4 + 0x88] = a3\n 38177: u64 [a4 + 0xa0] = a1\n 38181: u64 [a4 + 0x98] = a0\n 38185: a1 = s1 + 0x3360\n 38189: a0 = u64 [s1 + 0x158]\n 38193: ra = 1552, jump @23\n      : @1417 [@dyn 776] (gas: 5)\n 38200: a0 = 0\n 38202: a1 = u64 [s1 + 0x140]\n 38206: a2 = 0\n 38208: ecalli 13 // 'seal_return'\n 38210: jump @1373\n      : @1418 (gas: 6)\n 38213: a0 = 0x80ac58cd00000000\n 38223: a0 = a0 ^ a1\n 38226: a0 = a0 | a2\n 38229: a4 = a3 | a0\n 38232: a0 = 0x1\n 38235: jump @1423 if a4 == 0\n      : @1419 (gas: 5)\n 38238: a4 = 0x1ffc9a700000000\n 38248: a4 = a4 ^ a1\n 38251: a4 = a4 | a2\n 38254: a4 = a4 | a3\n 38257: jump @1423 if a4 == 0\n      : @1420 (gas: 5)\n 38260: a4 = 0x5b5e139f00000000\n 38270: a4 = a4 ^ a1\n 38273: a4 = a4 | a2\n 38276: a4 = a4 | a3\n 38279: jump @1423 if a4 == 0\n      : @1421 (gas: 5)\n 38282: a4 = 0x4906490600000000\n 38292: a1 = a1 ^ a4\n 38295: a1 = a1 | a2\n 38298: a1 = a1 | a3\n 38301: jump @1423 if a1 == 0\n      : @1422 (gas: 2)\n 38304: a0 = 0\n 38306: fallthrough\n      : @1423 (gas: 7)\n 38307: u64 [s1 + 376] = 0\n 38311: u64 [s1 + 368] = 0\n 38315: u64 [s1 + 0x160] = a0\n 38319: a0 = 0x80\n 38323: a1 = s1 + 0x160\n 38327: u64 [s1 + 360] = 0\n 38331: ra = 1554, jump @19\n      : @1424 [@dyn 777] (gas: 2)\n 38338: a1 = i32 [0x2020c]\n 38343: jump @1426 if a1 >u 159\n      : @1425 (gas: 7)\n 38348: u32 [0x2020c] = 0xa0\n 38355: a0 = 0x20220\n 38360: i32 a1 = a0 + 0x80\n 38364: a2 = 0x20\n 38367: a0 = 0\n 38369: ecalli 13 // 'seal_return'\n 38371: jump @1213\n      : @1426 (gas: 6)\n 38374: a0 = 0x20220\n 38379: i32 a1 = a0 + 0x80\n 38383: a2 = 0x20\n 38386: a0 = 0\n 38388: ecalli 13 // 'seal_return'\n 38390: jump @1213\n      : @1427 (gas: 2)\n 38393: a1 = 0x20220\n 38398: jump @1372\n      : @1428 (gas: 8)\n 38401: u64 [s1 + 1392] = 0\n 38405: u64 [s1 + 1384] = 0\n 38409: u64 [s1 + 1376] = 0\n 38413: a0 = 0xa9fbf51f00000000\n 38423: a1 = s1 + 0x560\n 38427: u64 [s1 + 0x578] = a0\n 38431: a0 = 0\n 38433: ra = 1556, jump @19\n      : @1429 [@dyn 778] (gas: 6)\n 38440: a0 = u64 [s1 + 0x148]\n 38444: ra = 0x616\n 38448: ecalli 5 // 'caller'\n 38450: a2 = u64 [s1 + 0x150]\n 38454: t0 = 0x618\n 38458: jump @1914\n      : @1430 [@dyn 779] (gas: 2)\n 38461: a2 = u64 [s1 + 0x150]\n 38465: t0 = 1560, jump @1914\n      : @1431 [@dyn 780] (gas: 8)\n 38471: u64 [s1 + 1368] = 0\n 38475: a2 = s1 + 0x500\n 38479: u64 [a2 + 0x50] = a1\n 38482: u64 [a2 + 0x48] = a0\n 38485: a0 = 0x4\n 38488: a1 = s1 + 0x540\n 38492: u64 [a2 + 0x40] = a3\n 38495: ra = 1562, jump @19\n      : @1432 [@dyn 781] (gas: 3)\n 38502: a0 = u64 [s1 + 0x158]\n 38506: a0 = i32 [a0]\n 38508: jump @1434 if a0 >u 63\n      : @1433 (gas: 3)\n 38512: a1 = u64 [s1 + 0x158]\n 38516: u32 [a1 + 0] = 0x40\n 38519: fallthrough\n      : @1434 (gas: 6)\n 38520: a0 = 0x1\n 38523: a2 = 0x24\n 38526: a1 = u64 [s1 + 0x100]\n 38530: ra = 0x61c\n 38534: ecalli 13 // 'seal_return'\n 38536: fallthrough\n      : @1435 [@dyn 782] (gas: 21)\n 38537: sp = sp + 0xffffffffffffff10\n 38541: u64 [sp + 0xe8] = ra\n 38545: u64 [sp + 0xe0] = s0\n 38549: u64 [sp + 0xd8] = s1\n 38553: s0 = sp + 0xf0\n 38557: sp = sp & 0xfffffffffffffff0\n 38560: a5 = u64 [a1 + 0x10]\n 38563: a4 = u64 [a1 + 0x18]\n 38566: a3 = u64 [a1 + 0x8]\n 38569: a1 = u64 [a1]\n 38571: u64 [sp + 0x28] = a3\n 38574: u64 [sp + 0x18] = a4\n 38577: a4 = a4 | a3\n 38580: a3 = a1 | a5\n 38583: a3 = a3 | a4\n 38586: a3 = a3 >> 0x20\n 38589: u64 [sp + 0x20] = a5\n 38592: a4 = a4 | a5\n 38595: a4 = a4 << 0x20\n 38598: a3 = a3 | a4\n 38601: jump @1450 if a3 != 0\n      : @1436 (gas: 11)\n 38605: u64 [sp + 0x8] = a0\n 38608: a0 = u64 [a2 + 0x18]\n 38611: u64 [sp + 0x68] = a0\n 38614: s1 = u64 [a2 + 0x10]\n 38617: a0 = u64 [a2 + 0x8]\n 38620: u64 [sp + 0x60] = a0\n 38623: a0 = u64 [a2]\n 38625: u64 [sp + 0x58] = a0\n 38628: a0 = sp + 0xb0\n 38632: u64 [sp + 0x10] = a1\n 38635: ra = 1566, jump @17\n      : @1437 [@dyn 783] (gas: 12)\n 38642: a0 = u64 [sp + 0x58]\n 38645: a2 = a0 | s1\n 38648: a1 = u64 [sp + 0x68]\n 38651: a3 = u64 [sp + 0x60]\n 38654: a1 = a1 | a3\n 38657: a2 = a2 | a1\n 38660: a2 = a2 >> 0x20\n 38663: u64 [sp + 0x50] = s1\n 38666: a1 = a1 | s1\n 38669: a1 = a1 << 0x20\n 38672: a1 = a1 | a2\n 38675: jump @1450 if a1 != 0\n      : @1438 (gas: 15)\n 38679: a2 = u64 [sp + 0xc8]\n 38683: a3 = u64 [sp + 0xc0]\n 38687: a4 = u64 [sp + 0xb8]\n 38691: a1 = u64 [sp + 0xb0]\n 38695: u64 [sp + 0x30] = a1\n 38698: u64 [sp + 0x90] = a1\n 38702: u64 [sp + 0x38] = a4\n 38705: u64 [sp + 0x98] = a4\n 38709: u64 [sp + 0x40] = a3\n 38712: u64 [sp + 0xa0] = a3\n 38716: a1 = sp + 0x90\n 38720: u64 [sp + 0x48] = a2\n 38723: u64 [sp + 0xa8] = a2\n 38727: s1 = a0\n 38729: ra = 1568, jump @19\n      : @1439 [@dyn 784] (gas: 9)\n 38736: a0 = u64 [sp + 0x68]\n 38739: a1 = u64 [sp + 0x50]\n 38742: a1 = a1 | a0\n 38745: a0 = 0xffffffe0\n 38755: a2 = s1 <u a0\n 38758: a3 = u64 [sp + 0x60]\n 38761: a2 = 0 if a3 != 0\n 38763: a2 = 0 if a1 != 0\n 38765: jump @1450 if a2 == 0\n      : @1440 (gas: 9)\n 38769: a1 = u64 [sp + 0x20]\n 38772: a2 = u64 [sp + 0x18]\n 38775: a1 = a1 | a2\n 38778: a2 = u64 [sp + 0x10]\n 38781: a0 = a2 <u a0\n 38784: a3 = u64 [sp + 0x28]\n 38787: a0 = 0 if a3 != 0\n 38789: a0 = 0 if a1 != 0\n 38791: jump @1450 if a0 == 0\n      : @1441 (gas: 13)\n 38795: a5 = s1\n 38797: s1 = u64 [sp + 0x30]\n 38800: a3 = u64 [sp + 0x40]\n 38803: a0 = s1 | a3\n 38806: a1 = u64 [sp + 0x48]\n 38809: a4 = u64 [sp + 0x38]\n 38812: a1 = a1 | a4\n 38815: a0 = a0 | a1\n 38818: a0 = a0 >> 0x20\n 38821: a1 = a1 | a3\n 38824: a1 = a1 << 0x20\n 38827: a0 = a0 | a1\n 38830: jump @1450 if a0 != 0\n      : @1442 (gas: 5)\n 38834: i32 a0 = a5 + 0x20\n 38837: i32 a1 = a2 + 0x20\n 38840: u64 [sp + 0x28] = a1\n 38843: a1 = s1\n 38845: ra = 1570, jump @34\n      : @1443 [@dyn 785] (gas: 4)\n 38852: u64 [sp + 0x20] = a0\n 38855: a0 = u64 [sp + 0x28]\n 38858: a1 = s1\n 38860: ra = 1572, jump @34\n      : @1444 [@dyn 786] (gas: 4)\n 38867: a1 = a0\n 38869: a0 = u64 [sp + 0x20]\n 38872: a2 = s1\n 38874: ra = 1574, jump @0\n      : @1445 [@dyn 787] (gas: 6)\n 38881: a0 = u64 [sp + 0x58]\n 38884: a0 = a0 + s1\n 38887: a1 = a0 <u s1\n 38890: a2 = u64 [sp + 0x60]\n 38893: a4 = u64 [sp + 0x38]\n 38896: t0 = 1576, jump @1984\n      : @1446 [@dyn 788] (gas: 17)\n 38902: a1 = u64 [sp + 0x50]\n 38905: a3 = u64 [sp + 0x40]\n 38908: a1 = a1 + a3\n 38911: a3 = a1 <u a3\n 38914: a5 = u64 [sp + 0x68]\n 38917: s1 = u64 [sp + 0x48]\n 38920: a5 = a5 + s1\n 38923: a3 = a3 + a5\n 38926: a4 = a4 + a1\n 38929: a1 = a4 <u a1\n 38932: a1 = a1 + a3\n 38935: a1 = a1 | a4\n 38938: a3 = 0xffffffe0\n 38948: a3 = a0 <u a3\n 38951: a3 = 0 if a2 != 0\n 38953: a3 = 0 if a1 != 0\n 38955: jump @1450 if a3 == 0\n      : @1447 (gas: 7)\n 38959: i32 a0 = a0 + 0x20\n 38962: u64 [sp + 136] = 0\n 38966: u64 [sp + 128] = 0\n 38970: u64 [sp + 120] = 0\n 38973: a1 = sp + 0x70\n 38976: u64 [sp + 112] = 0\n 38979: ra = 1578, jump @19\n      : @1448 [@dyn 789] (gas: 9)\n 38986: s1 = u64 [sp + 0x30]\n 38989: s1 = s1 + 0x1f\n 38992: a0 = 0x1ffffffe0\n 39002: a0 = a0 & s1\n 39005: a1 = u64 [sp + 0x58]\n 39008: a0 = a0 + a1\n 39011: a1 = a0 <u a1\n 39014: a3 = u64 [sp + 0x60]\n 39017: t0 = 1580, jump @1991\n      : @1449 [@dyn 790] (gas: 24)\n 39023: a1 = u64 [sp + 0x50]\n 39026: a3 = a3 + a1\n 39029: a1 = a3 <u a1\n 39032: a4 = u64 [sp + 0x68]\n 39035: a1 = a1 + a4\n 39038: a4 = a0 + 0x20\n 39041: a0 = a4 <u a0\n 39044: a5 = a2 + a0\n 39047: a2 = a5 <u a2\n 39050: a2 = a0 if a0 == 0\n 39053: a2 = a2 + a3\n 39056: a0 = a2 <u a3\n 39059: a0 = a0 + a1\n 39062: a1 = u64 [sp + 0x8]\n 39065: u64 [a1] = a4\n 39067: u64 [a1 + 0x8] = a5\n 39070: u64 [a1 + 0x10] = a2\n 39073: u64 [a1 + 0x18] = a0\n 39076: sp = s0 + 0xffffffffffffff10\n 39080: ra = u64 [sp + 0xe8]\n 39084: s0 = u64 [sp + 0xe0]\n 39088: s1 = u64 [sp + 0xd8]\n 39092: sp = sp + 0xf0\n 39096: ret\n      : @1450 (gas: 1)\n 39098: trap\n      : @1451 [@dyn 791] (gas: 5)\n 39099: a1 = 0x4\n 39102: ra = 0x630\n 39106: ecalli 3 // 'call_data_load'\n 39108: t0 = 0x632\n 39112: jump @1973\n      : @1452 [@dyn 792] (gas: 1)\n 39115: t0 = 1586, jump @1973\n      : @1453 [@dyn 793] (gas: 1)\n 39121: jump @1456 if a3 == 0\n      : @1454 (gas: 1)\n 39124: t0 = 1588, jump @1989\n      : @1455 [@dyn 794] (gas: 1)\n 39130: ret\n      : @1456 (gas: 8)\n 39132: a1 = 0x20220\n 39137: i32 a1 = a1 + 0\n 39139: a0 = 0x1\n 39142: a2 = 0\n 39144: ra = 0x636\n 39148: ecalli 13 // 'seal_return'\n 39150: t0 = 0x638\n 39154: jump @2009\n      : @1457 [@dyn 795] (gas: 1)\n 39157: t0 = 1592, jump @2009\n      : @1458 [@dyn 796] (gas: 5)\n 39163: a1 = 0x24\n 39166: ra = 0x63a\n 39170: ecalli 3 // 'call_data_load'\n 39172: t0 = 0x63c\n 39176: jump @1973\n      : @1459 [@dyn 797] (gas: 1)\n 39179: t0 = 1596, jump @1973\n      : @1460 [@dyn 798] (gas: 1)\n 39185: jump @1463 if a3 == 0\n      : @1461 (gas: 1)\n 39188: t0 = 1598, jump @1989\n      : @1462 [@dyn 799] (gas: 1)\n 39194: ret\n      : @1463 (gas: 7)\n 39196: a1 = 0x20220\n 39201: i32 a1 = a1 + 0\n 39203: a0 = 0x1\n 39206: a2 = 0\n 39208: ra = 0x640\n 39212: ecalli 13 // 'seal_return'\n 39214: fallthrough\n      : @1464 [@dyn 800] (gas: 23)\n 39215: sp = sp + 0xfffffffffffffd50\n 39219: a3 = sp + 0x200\n 39223: u64 [a3 + 0xa8] = ra\n 39227: u64 [a3 + 0xa0] = s0\n 39231: u64 [a3 + 0x98] = s1\n 39235: s0 = sp + 0x2b0\n 39239: sp = sp & 0xfffffffffffffff0\n 39242: a3 = u64 [a1 + 0x18]\n 39245: a4 = u64 [a1 + 0x10]\n 39248: a5 = u64 [a1 + 0x8]\n 39251: t0 = u64 [a1]\n 39253: u64 [sp + 0xb8] = a3\n 39257: u64 [sp + 0xa8] = a5\n 39261: a1 = a5 | a3\n 39264: a3 = t0 | a4\n 39267: a3 = a3 | a1\n 39270: a3 = a3 >> 0x20\n 39273: u64 [sp + 0xb0] = a4\n 39277: a1 = a1 | a4\n 39280: a1 = a1 << 0x20\n 39283: a1 = a1 | a3\n 39286: u64 [sp + 0x8] = a0\n 39289: jump @1500 if a1 != 0\n      : @1465 (gas: 16)\n 39293: a0 = u64 [a2 + 0x18]\n 39296: u64 [sp + 0x88] = a0\n 39300: s1 = u64 [a2 + 0x10]\n 39303: a0 = u64 [a2 + 0x8]\n 39306: u64 [sp + 0x80] = a0\n 39310: a0 = u64 [a2]\n 39312: u64 [sp + 0x68] = a0\n 39315: a2 = sp + 0x200\n 39319: u64 [a2 + 136] = 0\n 39323: u64 [a2 + 128] = 0\n 39327: u64 [a2 + 120] = 0\n 39330: a1 = sp + 0x270\n 39334: u64 [a2 + 112] = 0x20\n 39338: u64 [sp + 0xc0] = t0\n 39342: a0 = t0\n 39344: ra = 1602, jump @19\n      : @1466 [@dyn 801] (gas: 12)\n 39351: a1 = u64 [sp + 0x68]\n 39354: a0 = a1 | s1\n 39357: a2 = u64 [sp + 0x88]\n 39361: a3 = u64 [sp + 0x80]\n 39365: a2 = a2 | a3\n 39368: a0 = a0 | a2\n 39371: a0 = a0 >> 0x20\n 39374: u64 [sp + 0x60] = s1\n 39377: a2 = a2 | s1\n 39380: a2 = a2 << 0x20\n 39383: a0 = a0 | a2\n 39386: jump @1500 if a0 != 0\n      : @1467 (gas: 17)\n 39390: a0 = u64 [sp + 0xc0]\n 39394: a2 = a0 + 0x20\n 39397: u64 [sp + 0xa0] = a2\n 39401: a0 = a2 <u a0\n 39404: a2 = u64 [sp + 0xa8]\n 39408: a3 = a2 + a0\n 39411: u64 [sp + 0xc8] = a3\n 39415: s1 = a3 <u a2\n 39418: s1 = a0 if a0 == 0\n 39421: a0 = u64 [sp + 0xb0]\n 39425: s1 = s1 + a0\n 39428: a0 = s1 <u a0\n 39431: a2 = u64 [sp + 0xb8]\n 39435: a0 = a0 + a2\n 39438: u64 [sp + 0x98] = a0\n 39442: a0 = sp + 0x250\n 39446: ra = 1604, jump @17\n      : @1468 [@dyn 802] (gas: 11)\n 39453: a0 = u64 [sp + 0xa0]\n 39457: a2 = a0 | s1\n 39460: a1 = u64 [sp + 0xc8]\n 39464: a3 = u64 [sp + 0x98]\n 39468: a1 = a1 | a3\n 39471: a2 = a2 | a1\n 39474: a2 = a2 >> 0x20\n 39477: a1 = a1 | s1\n 39480: a1 = a1 << 0x20\n 39483: a1 = a1 | a2\n 39486: jump @1500 if a1 != 0\n      : @1469 (gas: 17)\n 39490: s1 = sp + 0x200\n 39494: a5 = u64 [s1 + 0x68]\n 39497: a1 = u64 [s1 + 0x60]\n 39500: a2 = u64 [s1 + 0x58]\n 39503: a3 = u64 [s1 + 0x50]\n 39506: a4 = 0xffffffff\n 39516: u64 [sp + 0x50] = a4\n 39519: u64 [sp + 0x10] = a3\n 39522: u64 [s1 + 0x30] = a3\n 39525: u64 [sp + 0x18] = a2\n 39528: u64 [s1 + 0x38] = a2\n 39531: u64 [sp + 0x20] = a1\n 39534: u64 [s1 + 0x40] = a1\n 39537: a1 = sp + 0x230\n 39541: u64 [sp + 0x28] = a5\n 39544: u64 [s1 + 0x48] = a5\n 39547: ra = 1606, jump @19\n      : @1470 [@dyn 803] (gas: 27)\n 39554: t2 = 0\n 39556: s1 = 0\n 39558: a3 = 0\n 39560: ra = 0\n 39562: a1 = u64 [sp + 0xc0]\n 39566: a0 = a1 + 0x40\n 39569: u64 [sp + 0xc8] = a0\n 39573: a0 = a0 <u a1\n 39576: a2 = u64 [sp + 0xa8]\n 39580: a1 = a2 + a0\n 39583: u64 [sp + 0xc0] = a1\n 39587: a1 = a1 <u a2\n 39590: a1 = a0 if a0 == 0\n 39593: a0 = u64 [sp + 0xb0]\n 39597: a1 = a1 + a0\n 39600: u64 [sp + 0xa0] = a1\n 39604: a0 = a1 <u a0\n 39607: a1 = u64 [sp + 0xb8]\n 39611: a0 = a0 + a1\n 39614: u64 [sp + 0xa8] = a0\n 39618: a0 = 0x100000000\n 39628: u64 [sp + 0x78] = a0\n 39631: a0 = 0xffffffe0\n 39641: u64 [sp + 0x58] = a0\n 39644: t1 = u64 [sp + 0x60]\n 39647: a4 = u64 [sp + 0x68]\n 39650: fallthrough\n      : @1471 (gas: 18)\n 39651: a0 = u64 [sp + 0x10]\n 39654: a0 = t2 <u a0\n 39657: a2 = u64 [sp + 0x18]\n 39660: a1 = s1 ^ a2\n 39663: a2 = s1 <u a2\n 39666: a2 = a0 if a1 == 0\n 39669: a5 = u64 [sp + 0x20]\n 39672: t0 = a3 <u a5\n 39675: a0 = a3\n 39677: a3 = u64 [sp + 0x28]\n 39680: a1 = ra ^ a3\n 39683: a3 = ra <u a3\n 39686: a3 = t0 if a1 == 0\n 39689: u64 [sp + 0x48] = a0\n 39692: a0 = a0 ^ a5\n 39695: a0 = a0 | a1\n 39698: a3 = a2 if a0 == 0\n 39701: jump @1499 if a3 == 0\n      : @1472 (gas: 12)\n 39705: u64 [sp + 0x30] = ra\n 39708: u64 [sp + 0x38] = s1\n 39711: u64 [sp + 0x40] = t2\n 39714: a0 = u64 [sp + 0x88]\n 39718: u64 [sp + 0x60] = t1\n 39721: a0 = t1 | a0\n 39724: a1 = u64 [sp + 0x58]\n 39727: a1 = a4 <u a1\n 39730: a2 = u64 [sp + 0x80]\n 39734: a1 = 0 if a2 != 0\n 39736: a1 = 0 if a0 != 0\n 39738: jump @1500 if a1 == 0\n      : @1473 (gas: 5)\n 39742: u64 [sp + 0x68] = a4\n 39745: a1 = a4 + 0x20\n 39748: a0 = sp + 0x210\n 39752: u64 [sp + 0x70] = a1\n 39755: ra = 1608, jump @17\n      : @1474 [@dyn 804] (gas: 15)\n 39762: a3 = sp + 0x200\n 39766: a2 = u64 [a3 + 0x28]\n 39769: s1 = u64 [a3 + 0x20]\n 39772: a0 = u64 [a3 + 0x18]\n 39775: a1 = u64 [a3 + 0x10]\n 39778: u64 [sp + 0xb8] = a0\n 39782: u64 [sp + 0x98] = a2\n 39786: a0 = a0 | a2\n 39789: a2 = a1 | s1\n 39792: a2 = a2 | a0\n 39795: a2 = a2 >> 0x20\n 39798: a0 = a0 | s1\n 39801: a0 = a0 << 0x20\n 39804: a0 = a0 | a2\n 39807: jump @1500 if a0 != 0\n      : @1475 (gas: 3)\n 39811: a0 = sp + 0x1f0\n 39815: u64 [sp + 0xb0] = a1\n 39819: ra = 1610, jump @17\n      : @1476 [@dyn 805] (gas: 12)\n 39826: a2 = u64 [sp + 0xa0]\n 39830: a0 = u64 [sp + 0xc8]\n 39834: a3 = a0 | a2\n 39837: a1 = u64 [sp + 0xa8]\n 39841: a4 = u64 [sp + 0xc0]\n 39845: a1 = a1 | a4\n 39848: a3 = a3 | a1\n 39851: a3 = a3 >> 0x20\n 39854: a1 = a1 | a2\n 39857: a1 = a1 << 0x20\n 39860: a1 = a1 | a3\n 39863: jump @1500 if a1 != 0\n      : @1477 (gas: 11)\n 39867: a4 = u64 [sp + 0x208]\n 39871: a1 = u64 [sp + 0x200]\n 39875: a2 = u64 [sp + 0x1f8]\n 39879: a3 = u64 [sp + 0x1f0]\n 39883: u64 [sp + 0x1d0] = a3\n 39887: u64 [sp + 0x1d8] = a2\n 39891: u64 [sp + 0x1e0] = a1\n 39895: a1 = sp + 0x1d0\n 39899: u64 [sp + 0x1e8] = a4\n 39903: u64 [sp + 0xc8] = a0\n 39907: ra = 1612, jump @19\n      : @1478 [@dyn 806] (gas: 10)\n 39914: a3 = u64 [sp + 0x98]\n 39918: a3 = a3 | s1\n 39921: s1 = u64 [sp + 0x58]\n 39924: a1 = u64 [sp + 0xb0]\n 39928: a0 = a1 <u s1\n 39931: a2 = u64 [sp + 0xb8]\n 39935: a0 = 0 if a2 != 0\n 39937: u64 [sp + 0x98] = a3\n 39941: a0 = 0 if a3 != 0\n 39943: jump @1500 if a0 == 0\n      : @1479 (gas: 3)\n 39947: i32 a1 = a1 + 0x20\n 39950: a0 = sp + 0x1b0\n 39954: ra = 1614, jump @17\n      : @1480 [@dyn 807] (gas: 10)\n 39961: a0 = u64 [sp + 0xa8]\n 39965: a1 = u64 [sp + 0xa0]\n 39969: a2 = a1 | a0\n 39972: a4 = u64 [sp + 0xc8]\n 39976: a0 = a4 <u s1\n 39979: a1 = u64 [sp + 0xc0]\n 39983: a0 = 0 if a1 != 0\n 39985: u64 [sp + 0x90] = a2\n 39989: a0 = 0 if a2 != 0\n 39991: jump @1500 if a0 == 0\n      : @1481 (gas: 14)\n 39995: a0 = u64 [sp + 0x1c0]\n 39999: a1 = u64 [sp + 0x1b8]\n 40003: a2 = u64 [sp + 0x1b0]\n 40007: a3 = u64 [sp + 0x50]\n 40010: a3 = a3 & a0\n 40013: a1 = a1 & 0xffffffffffffffff\n 40016: a2 = a2 & 0xffffffffffffffff\n 40019: i32 a0 = a4 + 0x20\n 40022: u64 [sp + 424] = 0\n 40026: u64 [sp + 0x190] = a2\n 40030: u64 [sp + 0x198] = a1\n 40034: a1 = sp + 0x190\n 40038: u64 [sp + 0x1a0] = a3\n 40042: ra = 1616, jump @19\n      : @1482 [@dyn 808] (gas: 3)\n 40049: a0 = u64 [sp + 0x78]\n 40052: s1 = a0 + 0xffffffffffffffc0\n 40055: t0 = 1618, jump @1976\n      : @1483 [@dyn 809] (gas: 1)\n 40061: jump @1500 if a0 == 0\n      : @1484 (gas: 3)\n 40065: i32 a1 = a1 + 0x40\n 40068: a0 = sp + 0x170\n 40072: ra = 1620, jump @17\n      : @1485 [@dyn 810] (gas: 7)\n 40079: a4 = u64 [sp + 0xc8]\n 40083: a0 = a4 <u s1\n 40086: a1 = u64 [sp + 0xc0]\n 40090: a0 = 0 if a1 != 0\n 40092: a1 = u64 [sp + 0x90]\n 40096: a0 = 0 if a1 != 0\n 40098: jump @1500 if a0 == 0\n      : @1486 (gas: 14)\n 40102: a0 = u64 [sp + 0x180]\n 40106: a1 = u64 [sp + 0x178]\n 40110: a2 = u64 [sp + 0x170]\n 40114: a3 = u64 [sp + 0x50]\n 40117: a3 = a3 & a0\n 40120: a1 = a1 & 0xffffffffffffffff\n 40123: a2 = a2 & 0xffffffffffffffff\n 40126: i32 a0 = a4 + 0x40\n 40129: u64 [sp + 360] = 0\n 40133: u64 [sp + 0x150] = a2\n 40137: u64 [sp + 0x158] = a1\n 40141: a1 = sp + 0x150\n 40145: u64 [sp + 0x160] = a3\n 40149: ra = 1622, jump @19\n      : @1487 [@dyn 811] (gas: 3)\n 40156: a0 = u64 [sp + 0x78]\n 40159: s1 = a0 + 0xffffffffffffffa0\n 40162: t0 = 1624, jump @1976\n      : @1488 [@dyn 812] (gas: 1)\n 40168: jump @1500 if a0 == 0\n      : @1489 (gas: 3)\n 40172: i32 a1 = a1 + 0x60\n 40175: a0 = sp + 0x130\n 40179: ra = 1626, jump @17\n      : @1490 [@dyn 813] (gas: 7)\n 40186: a5 = u64 [sp + 0xc8]\n 40190: a0 = a5 <u s1\n 40193: a1 = u64 [sp + 0xc0]\n 40197: a0 = 0 if a1 != 0\n 40199: a1 = u64 [sp + 0x90]\n 40203: a0 = 0 if a1 != 0\n 40205: jump @1500 if a0 == 0\n      : @1491 (gas: 11)\n 40209: a2 = u64 [sp + 0x148]\n 40213: a1 = u64 [sp + 0x140]\n 40217: a3 = u64 [sp + 0x138]\n 40221: a4 = u64 [sp + 0x130]\n 40225: i32 a0 = a5 + 0x60\n 40228: u64 [sp + 0x110] = a4\n 40232: u64 [sp + 0x118] = a3\n 40236: u64 [sp + 0x120] = a1\n 40240: a1 = sp + 0x110\n 40244: u64 [sp + 0x128] = a2\n 40248: ra = 1628, jump @19\n      : @1492 [@dyn 814] (gas: 3)\n 40255: a0 = u64 [sp + 0x78]\n 40258: s1 = a0 + 0xffffffffffffff80\n 40261: t0 = 1630, jump @1976\n      : @1493 [@dyn 815] (gas: 1)\n 40267: jump @1500 if a0 == 0\n      : @1494 (gas: 3)\n 40271: i32 a1 = a1 + 0x80\n 40275: a0 = sp + 0xf0\n 40279: ra = 1632, jump @17\n      : @1495 [@dyn 816] (gas: 7)\n 40286: a2 = u64 [sp + 0xc8]\n 40290: a0 = a2 <u s1\n 40293: a1 = u64 [sp + 0xc0]\n 40297: a0 = 0 if a1 != 0\n 40299: a1 = u64 [sp + 0x90]\n 40303: a0 = 0 if a1 != 0\n 40305: jump @1500 if a0 == 0\n      : @1496 (gas: 31)\n 40309: a0 = u64 [sp + 0x68]\n 40312: a1 = u64 [sp + 0x70]\n 40315: a0 = a1 <u a0\n 40318: a1 = u64 [sp + 0x80]\n 40322: a3 = a1 + a0\n 40325: u64 [sp + 0xb8] = a3\n 40329: s1 = a3 <u a1\n 40332: s1 = a0 if a0 == 0\n 40335: a4 = u64 [sp + 0x60]\n 40338: a5 = a4 + s1\n 40341: u64 [sp + 0xb0] = a5\n 40345: a0 = u64 [sp + 0x108]\n 40349: s1 = u64 [sp + 0x100]\n 40353: a1 = u64 [sp + 0xf0]\n 40357: a3 = u64 [sp + 0xf8]\n 40361: a4 = a5 <u a4\n 40364: a5 = u64 [sp + 0x88]\n 40368: a5 = a5 + a4\n 40371: u64 [sp + 0x88] = a5\n 40375: a1 = a1 | s1\n 40378: a0 = a0 | a3\n 40381: a0 = a0 | a1\n 40384: a1 = a0 >u 0\n 40386: i32 a0 = a2 + 0x80\n 40390: u64 [sp + 232] = 0\n 40394: u64 [sp + 224] = 0\n 40398: u64 [sp + 0xd0] = a1\n 40402: a1 = sp + 0xd0\n 40406: u64 [sp + 216] = 0\n 40410: s1 = a2\n 40412: ra = 1634, jump @19\n      : @1497 [@dyn 817] (gas: 4)\n 40419: a0 = s1 + 0xa0\n 40423: a1 = a0 <u s1\n 40426: a3 = u64 [sp + 0xc0]\n 40430: t0 = 1636, jump @1991\n      : @1498 [@dyn 818] (gas: 27)\n 40436: a1 = u64 [sp + 0xa0]\n 40440: a3 = a3 + a1\n 40443: a1 = a3 <u a1\n 40446: a4 = u64 [sp + 0xa8]\n 40450: a4 = a4 + a1\n 40453: u64 [sp + 0xa8] = a4\n 40457: t2 = u64 [sp + 0x40]\n 40460: t2 = t2 + 0x1\n 40463: a1 = t2 <u 0x1\n 40466: s1 = u64 [sp + 0x38]\n 40469: s1 = s1 + a1\n 40472: a1 = t2 | s1\n 40475: a1 = a1 <u 0x1\n 40478: a4 = u64 [sp + 0x48]\n 40481: a1 = a1 + a4\n 40484: a4 = a1 <u a4\n 40487: ra = u64 [sp + 0x30]\n 40490: ra = ra + a4\n 40493: u64 [sp + 0xc8] = a0\n 40497: u64 [sp + 0xc0] = a2\n 40501: u64 [sp + 0xa0] = a3\n 40505: a4 = u64 [sp + 0x70]\n 40508: a0 = u64 [sp + 0xb8]\n 40512: u64 [sp + 0x80] = a0\n 40516: t1 = u64 [sp + 0xb0]\n 40520: a3 = a1\n 40522: jump @1471\n      : @1499 (gas: 16)\n 40525: a0 = u64 [sp + 0x8]\n 40528: a1 = u64 [sp + 0xc8]\n 40532: u64 [a0] = a1\n 40534: a1 = u64 [sp + 0xc0]\n 40538: u64 [a0 + 0x8] = a1\n 40541: a1 = u64 [sp + 0xa0]\n 40545: u64 [a0 + 0x10] = a1\n 40548: a1 = u64 [sp + 0xa8]\n 40552: u64 [a0 + 0x18] = a1\n 40555: sp = s0 + 0xfffffffffffffd50\n 40559: a0 = sp + 0x200\n 40563: ra = u64 [a0 + 0xa8]\n 40567: s0 = u64 [a0 + 0xa0]\n 40571: s1 = u64 [a0 + 0x98]\n 40575: sp = sp + 0x2b0\n 40579: ret\n      : @1500 (gas: 1)\n 40581: trap\n      : @1501 (gas: 33)\n 40582: sp = sp + 0xffffffffffffff40\n 40586: u64 [sp + 0xb8] = ra\n 40590: u64 [sp + 0xb0] = s0\n 40594: u64 [sp + 0xa8] = s1\n 40598: s0 = sp + 0xc0\n 40602: sp = sp & 0xffffffffffffffe0\n 40605: a2 = u64 [a1]\n 40607: t0 = u64 [a1 + 0x18]\n 40610: a4 = u64 [a1 + 0x8]\n 40613: a1 = u64 [a1 + 0x10]\n 40616: a5 = a2 + 0xfffffffffffffffc\n 40619: s1 = a5 <u a2\n 40622: a2 = a4 + s1\n 40625: a2 = a2 + 0xffffffffffffffff\n 40628: a3 = a2 ^ a4\n 40631: a4 = a2 <u a4\n 40634: a4 = s1 if a3 == 0\n 40637: a3 = a1 + 0xffffffffffffffff\n 40640: a4 = a4 + a3\n 40643: a3 = a4 <u a3\n 40646: a1 = a1 <u 0x1\n 40649: a1 = t0 - a1\n 40652: a1 = a1 + a3\n 40655: a3 = a1 >s 0\n 40657: s1 = a4 >u 0\n 40659: s1 = a3 if a1 != 0\n 40662: a1 = a1 | a4\n 40665: a3 = a2 >u 0\n 40667: a4 = a5 <u 0x60\n 40670: a4 = a4 ^ 0x1\n 40673: a4 = a3 if a2 != 0\n 40676: a4 = s1 if a1 != 0\n 40679: jump @1507 if a4 == 0\n      : @1502 (gas: 5)\n 40683: s1 = a0\n 40685: i32 a0 = sp + 0x40\n 40688: a1 = 0x4\n 40691: ecalli 3 // 'call_data_load'\n 40693: fallthrough\n      : @1503 (gas: 13)\n 40694: a1 = u64 [sp + 0x50]\n 40697: a2 = u64 [sp + 0x58]\n 40700: a0 = 0x100000000\n 40710: u64 [sp + 0x18] = a0\n 40713: a0 = a0 ^ a1\n 40716: a0 = a0 | a2\n 40719: u64 [sp + 0x30] = a1\n 40722: a1 = a1 >> 0x20\n 40725: a1 = a1 <u 0x1\n 40728: u64 [sp + 0x38] = a2\n 40731: a1 = 0 if a2 != 0\n 40733: a1 = 0 if a0 == 0\n 40735: jump @1508 if a1 == 0\n      : @1504 (gas: 8)\n 40739: a0 = u64 [sp + 0x48]\n 40742: u64 [sp + 0x20] = a0\n 40745: a0 = u64 [sp + 0x40]\n 40748: u64 [sp + 0x28] = a0\n 40751: i32 a0 = sp + 0x60\n 40754: a1 = 0x24\n 40757: ecalli 3 // 'call_data_load'\n 40759: fallthrough\n      : @1505 (gas: 12)\n 40760: a1 = u64 [sp + 0x70]\n 40763: a2 = u64 [sp + 0x78]\n 40766: a0 = u64 [sp + 0x18]\n 40769: a0 = a0 ^ a1\n 40772: a0 = a0 | a2\n 40775: u64 [sp + 0x10] = a1\n 40778: a1 = a1 >> 0x20\n 40781: a1 = a1 <u 0x1\n 40784: u64 [sp + 0x18] = a2\n 40787: a1 = 0 if a2 != 0\n 40789: a1 = 0 if a0 == 0\n 40791: jump @1509 if a1 == 0\n      : @1506 (gas: 37)\n 40795: a0 = u64 [sp + 0x68]\n 40798: u64 [sp] = a0\n 40800: a0 = u64 [sp + 0x60]\n 40803: u64 [sp + 0x8] = a0\n 40806: i32 a0 = sp + 0x80\n 40810: a1 = 0x44\n 40813: ecalli 3 // 'call_data_load'\n 40815: a0 = u64 [sp + 0x80]\n 40819: a1 = u64 [sp + 0x88]\n 40823: a2 = u64 [sp + 0x90]\n 40827: a3 = u64 [sp + 0x98]\n 40831: a4 = u64 [sp + 0x30]\n 40834: u64 [s1 + 0x10] = a4\n 40837: a4 = u64 [sp + 0x20]\n 40840: u64 [s1 + 0x8] = a4\n 40843: a4 = u64 [sp + 0x28]\n 40846: u64 [s1] = a4\n 40848: a4 = u64 [sp + 0x10]\n 40851: u64 [s1 + 0x30] = a4\n 40854: a4 = u64 [sp]\n 40856: u64 [s1 + 0x28] = a4\n 40859: a4 = u64 [sp + 0x8]\n 40862: u64 [s1 + 0x20] = a4\n 40865: u64 [s1 + 0x58] = a3\n 40868: u64 [s1 + 0x50] = a2\n 40871: u64 [s1 + 0x48] = a1\n 40874: u64 [s1 + 0x40] = a0\n 40877: a0 = u64 [sp + 0x38]\n 40880: u64 [s1 + 0x18] = a0\n 40883: a0 = u64 [sp + 0x18]\n 40886: u64 [s1 + 0x38] = a0\n 40889: sp = s0 + 0xffffffffffffff40\n 40893: ra = u64 [sp + 0xb8]\n 40897: s0 = u64 [sp + 0xb0]\n 40901: s1 = u64 [sp + 0xa8]\n 40905: sp = sp + 0xc0\n 40909: ret\n      : @1507 (gas: 2)\n 40911: a1 = 0x20220\n 40916: jump @1510\n      : @1508 (gas: 2)\n 40918: a1 = 0x20220\n 40923: jump @1510\n      : @1509 (gas: 2)\n 40925: a1 = 0x20220\n 40930: fallthrough\n      : @1510 (gas: 6)\n 40931: i32 a1 = a1 + 0\n 40933: a0 = 0x1\n 40936: a2 = 0\n 40938: ra = 0x666\n 40942: ecalli 13 // 'seal_return'\n 40944: fallthrough\n      : @1511 [@dyn 819] (gas: 19)\n 40945: sp = sp + 0xffffffffffffff90\n 40948: u64 [sp + 0x68] = ra\n 40951: u64 [sp + 0x60] = s0\n 40954: s0 = sp + 0x70\n 40957: sp = sp & 0xfffffffffffffff0\n 40960: a3 = u64 [a0 + 0x18]\n 40963: a2 = u64 [a0 + 0x10]\n 40966: t1 = u64 [a0]\n 40968: a0 = u64 [a0 + 0x8]\n 40971: a4 = a3 >u 0\n 40973: a5 = a2 >u 0\n 40975: a5 = a4 if a3 != 0\n 40978: t0 = a0 >u 0\n 40980: a4 = t1 <u 0xffffffffffffff60\n 40984: a4 = a4 ^ 0x1\n 40987: a4 = t0 if a0 != 0\n 40990: a1 = a2 | a3\n 40993: a4 = a5 if a1 != 0\n 40996: jump @1514 if a4 != 0\n      : @1512 (gas: 15)\n 40999: a1 = t1 + 0xa0\n 41003: a4 = a1 <u t1\n 41006: a5 = a0 + a4\n 41009: a0 = a5 <u a0\n 41012: a0 = a4 if a4 == 0\n 41015: a0 = a0 + a2\n 41018: a2 = a0 <u a2\n 41021: a2 = a2 + a3\n 41024: u64 [sp + 0x40] = a1\n 41027: u64 [sp + 0x48] = a5\n 41030: u64 [sp + 0x50] = a0\n 41033: a0 = 0x40\n 41036: a1 = sp + a0\n 41039: u64 [sp + 0x58] = a2\n 41042: ra = 1640, jump @19\n      : @1513 [@dyn 820] (gas: 5)\n 41049: sp = s0 + 0xffffffffffffff90\n 41052: ra = u64 [sp + 0x68]\n 41055: s0 = u64 [sp + 0x60]\n 41058: sp = sp + 0x70\n 41061: ret\n      : @1514 (gas: 1)\n 41063: t0 = 1642, jump @1922\n      : @1515 [@dyn 821] (gas: 1)\n 41069: ra = 1644, jump @19\n      : @1516 [@dyn 822] (gas: 1)\n 41076: t0 = 1646, jump @1983\n      : @1517 [@dyn 823] (gas: 1)\n 41082: ra = 1648, jump @19\n      : @1518 [@dyn 824] (gas: 2)\n 41089: a1 = i32 [0x2020c]\n 41094: jump @1520 if a1 >u 63\n      : @1519 (gas: 2)\n 41098: u32 [0x2020c] = 0x40\n 41104: fallthrough\n      : @1520 (gas: 7)\n 41105: a1 = 0x20220\n 41110: i32 a1 = a1 + 0\n 41112: a0 = 0x1\n 41115: a2 = 0x24\n 41118: ra = 0x672\n 41122: ecalli 13 // 'seal_return'\n 41124: fallthrough\n      : @1521 [@dyn 825] (gas: 46)\n 41125: sp = sp + 0xffffffffffffff70\n 41129: u64 [sp + 0x88] = ra\n 41133: u64 [sp + 0x80] = s0\n 41137: u64 [sp + 0x78] = s1\n 41140: s0 = sp + 0x90\n 41144: sp = sp & 0xfffffffffffffff0\n 41147: t0 = a0\n 41149: a2 = u64 [a1]\n 41151: t2 = u64 [a0 + 0x8]\n 41154: a5 = u64 [a1 + 0x8]\n 41157: t1 = u64 [a0]\n 41159: a3 = a2 + 0x1f\n 41162: ra = a3 <u a2\n 41165: a2 = a5 + ra\n 41168: a3 = a3 & 0xffffffffffffffe0\n 41171: u64 [sp + 0x8] = t1\n 41174: t1 = t1 + a3\n 41177: a4 = t1 <u a3\n 41180: a3 = a2 + t2\n 41183: a3 = a3 + a4\n 41186: s1 = a3 ^ a2\n 41189: a0 = a3 <u a2\n 41192: a0 = a4 if s1 == 0\n 41195: a4 = u64 [t0 + 0x18]\n 41198: a5 = a2 <u a5\n 41201: s1 = u64 [a1 + 0x10]\n 41204: t0 = u64 [t0 + 0x10]\n 41207: a1 = u64 [a1 + 0x18]\n 41210: a5 = ra if ra == 0\n 41213: a5 = a5 + s1\n 41216: s1 = a5 <u s1\n 41219: a2 = a5 + t0\n 41222: a0 = a0 + a2\n 41225: a5 = a2 <u a5\n 41228: a2 = a0 <u a2\n 41231: a1 = a1 + a4\n 41234: a1 = a1 + s1\n 41237: a1 = a1 + a5\n 41240: a5 = a1 + a2\n 41243: a1 = a5 >u 0\n 41245: a2 = a0 >u 0\n 41247: a2 = a1 if a5 != 0\n 41250: a1 = a0 | a5\n 41253: s1 = a3 >u 0\n 41255: s1 = a2 if a1 != 0\n 41258: jump @1525 if s1 != 0\n      : @1522 (gas: 13)\n 41261: a1 = u64 [sp + 0x8]\n 41264: a1 = t1 <u a1\n 41267: a2 = a3 ^ t2\n 41270: s1 = a3 <u t2\n 41273: s1 = a1 if a2 == 0\n 41276: a1 = a0 <u t0\n 41279: a2 = a5 ^ a4\n 41282: a4 = a5 <u a4\n 41285: a4 = a1 if a2 == 0\n 41288: a1 = a0 ^ t0\n 41291: a1 = a1 | a2\n 41294: a4 = s1 if a1 == 0\n 41297: jump @1525 if a4 != 0\n      : @1523 (gas: 7)\n 41300: u64 [sp + 0x50] = t1\n 41303: u64 [sp + 0x58] = a3\n 41306: u64 [sp + 0x60] = a0\n 41309: a0 = 0x40\n 41312: a1 = sp + 0x50\n 41315: u64 [sp + 0x68] = a5\n 41318: ra = 1652, jump @19\n      : @1524 [@dyn 826] (gas: 6)\n 41325: sp = s0 + 0xffffffffffffff70\n 41329: ra = u64 [sp + 0x88]\n 41333: s0 = u64 [sp + 0x80]\n 41337: s1 = u64 [sp + 0x78]\n 41340: sp = sp + 0x90\n 41344: ret\n      : @1525 (gas: 6)\n 41346: u64 [sp + 64] = 0\n 41349: u64 [sp + 56] = 0\n 41352: u64 [sp + 48] = 0\n 41355: t0 = 0x676\n 41359: a0 = 0x4e487b7100000000\n 41369: fallthrough\n      : @1526 [@dyn 827] (gas: 4)\n 41370: a1 = sp + 0x30\n 41373: u64 [sp + 0x48] = a0\n 41376: a0 = 0\n 41378: ra = 1656, jump @19\n      : @1527 [@dyn 828] (gas: 7)\n 41385: u64 [sp + 40] = 0\n 41388: u64 [sp + 32] = 0\n 41391: u64 [sp + 16] = 0x41\n 41395: a0 = 0x4\n 41398: a1 = sp + 0x10\n 41401: u64 [sp + 24] = 0\n 41404: ra = 1658, jump @19\n      : @1528 [@dyn 829] (gas: 2)\n 41411: a1 = i32 [0x2020c]\n 41416: jump @1530 if a1 >u 63\n      : @1529 (gas: 2)\n 41420: u32 [0x2020c] = 0x40\n 41426: fallthrough\n      : @1530 (gas: 7)\n 41427: a1 = 0x20220\n 41432: i32 a1 = a1 + 0\n 41434: a0 = 0x1\n 41437: a2 = 0x24\n 41440: ra = 0x67c\n 41444: ecalli 13 // 'seal_return'\n 41446: fallthrough\n      : @1531 [@dyn 830] (gas: 10)\n 41447: a3 = u64 [a1 + 0x18]\n 41450: a4 = u64 [a1 + 0x10]\n 41453: t0 = u64 [a1 + 0x8]\n 41456: a5 = a3 >u 0\n 41458: a2 = a4 >u 0\n 41460: a2 = a5 if a3 != 0\n 41463: a3 = a3 | a4\n 41466: a4 = t0 >u 0\n 41468: a4 = a2 if a3 != 0\n 41471: jump @1533 if a4 != 0\n      : @1532 (gas: 16)\n 41474: a1 = u64 [a1]\n 41476: a2 = a1 + 0x1f\n 41479: a1 = a2 <u a1\n 41482: a1 = a1 + t0\n 41485: a1 = a1 & 0x1\n 41488: a2 = a2 & 0xffffffffffffffe0\n 41491: a3 = a2 + 0x20\n 41494: a2 = a3 <u a2\n 41497: a4 = a1 + a2\n 41500: a1 = a4 <u a1\n 41503: a1 = a2 if a2 == 0\n 41506: u64 [a0 + 24] = 0\n 41509: u64 [a0] = a3\n 41511: u64 [a0 + 0x8] = a4\n 41514: u64 [a0 + 0x10] = a1\n 41517: ret\n      : @1533 (gas: 6)\n 41519: sp = sp + 0xffffffffffffffb0\n 41522: u64 [sp + 0x48] = ra\n 41525: u64 [sp + 0x40] = s0\n 41528: s0 = sp + 0x50\n 41531: sp = sp & 0xfffffffffffffff0\n 41534: t0 = 1662, jump @1922\n      : @1534 [@dyn 831] (gas: 1)\n 41540: ra = 1664, jump @19\n      : @1535 [@dyn 832] (gas: 1)\n 41547: t0 = 1666, jump @1983\n      : @1536 [@dyn 833] (gas: 1)\n 41553: ra = 1668, jump @19\n      : @1537 [@dyn 834] (gas: 2)\n 41560: a1 = i32 [0x2020c]\n 41565: jump @1539 if a1 >u 63\n      : @1538 (gas: 2)\n 41569: u32 [0x2020c] = 0x40\n 41575: fallthrough\n      : @1539 (gas: 7)\n 41576: a1 = 0x20220\n 41581: i32 a1 = a1 + 0\n 41583: a0 = 0x1\n 41586: a2 = 0x24\n 41589: ra = 0x686\n 41593: ecalli 13 // 'seal_return'\n 41595: fallthrough\n      : @1540 [@dyn 835] (gas: 38)\n 41596: sp = sp + 0xfffffffffffffe50\n 41600: u64 [sp + 0x1a8] = ra\n 41604: u64 [sp + 0x1a0] = s0\n 41608: u64 [sp + 0x198] = s1\n 41612: s0 = sp + 0x1b0\n 41616: sp = sp & 0xfffffffffffffff0\n 41619: a4 = u64 [a3 + 0x18]\n 41622: u64 [sp + 0x20] = a4\n 41625: a4 = u64 [a3 + 0x10]\n 41628: u64 [sp + 0x28] = a4\n 41631: a4 = u64 [a3 + 0x8]\n 41634: u64 [sp + 0x10] = a4\n 41637: a3 = u64 [a3]\n 41639: u64 [sp + 0x18] = a3\n 41642: a3 = u64 [a1 + 0x18]\n 41645: u64 [sp + 0x30] = a3\n 41648: a3 = u64 [a1 + 0x10]\n 41651: u64 [sp + 0x38] = a3\n 41654: a3 = u64 [a1 + 0x8]\n 41657: u64 [sp + 0x70] = a3\n 41660: a1 = u64 [a1]\n 41662: u64 [sp + 0x68] = a1\n 41665: a3 = u64 [a2]\n 41667: a1 = u64 [a2 + 0x8]\n 41670: a4 = u64 [a2 + 0x10]\n 41673: a2 = u64 [a2 + 0x18]\n 41676: u64 [sp + 0x8] = a0\n 41679: u64 [sp + 0x98] = a2\n 41683: u64 [sp + 0x168] = a2\n 41687: u64 [sp + 0x90] = a4\n 41691: u64 [sp + 0x160] = a4\n 41695: u64 [sp + 0x88] = a1\n 41699: u64 [sp + 0x158] = a1\n 41703: a0 = sp + 0x170\n 41707: a1 = sp + 0x150\n 41711: u64 [sp + 0x60] = a3\n 41714: u64 [sp + 0x150] = a3\n 41718: ra = 1672, jump @1531\n      : @1541 [@dyn 836] (gas: 11)\n 41724: a0 = u64 [sp + 0x170]\n 41728: u64 [sp + 0x58] = a0\n 41731: a0 = u64 [sp + 0x178]\n 41735: u64 [sp + 0x50] = a0\n 41738: a0 = u64 [sp + 0x180]\n 41742: u64 [sp + 0x48] = a0\n 41745: a0 = u64 [sp + 0x188]\n 41749: u64 [sp + 0x40] = a0\n 41752: a0 = sp + 0x130\n 41756: a1 = 0x40\n 41759: ra = 1674, jump @17\n      : @1542 [@dyn 837] (gas: 23)\n 41766: a1 = u64 [sp + 0x148]\n 41770: u64 [sp + 0xa8] = a1\n 41774: a2 = u64 [sp + 0x140]\n 41778: u64 [sp + 0xa0] = a2\n 41782: s1 = u64 [sp + 0x138]\n 41786: a0 = u64 [sp + 0x130]\n 41790: a3 = u64 [sp + 0x40]\n 41793: u64 [sp + 0x108] = a3\n 41797: a3 = a0\n 41799: u64 [sp + 0x80] = a0\n 41803: a0 = u64 [sp + 0x48]\n 41806: u64 [sp + 0x100] = a0\n 41810: a0 = u64 [sp + 0x50]\n 41813: u64 [sp + 0xf8] = a0\n 41817: a0 = u64 [sp + 0x58]\n 41820: u64 [sp + 0xf0] = a0\n 41824: u64 [sp + 0x128] = a1\n 41828: u64 [sp + 0x120] = a2\n 41832: u64 [sp + 0x118] = s1\n 41836: a0 = sp + 0x110\n 41840: a1 = sp + 0xf0\n 41844: u64 [sp + 0x110] = a3\n 41848: ra = 1676, jump @1521\n      : @1543 [@dyn 838] (gas: 6)\n 41854: a0 = u64 [sp + 0x80]\n 41858: u64 [sp + 0x78] = s1\n 41861: a2 = u64 [sp + 0xa8]\n 41865: a2 = a2 | s1\n 41868: a3 = u64 [sp + 0xa0]\n 41872: t0 = 1678, jump @2018\n      : @1544 [@dyn 839] (gas: 1)\n 41878: jump @1555 if a1 != 0\n      : @1545 (gas: 10)\n 41882: s1 = u64 [sp + 0x60]\n 41885: u64 [sp + 0xd0] = s1\n 41889: a1 = u64 [sp + 0x88]\n 41893: u64 [sp + 0xd8] = a1\n 41897: a1 = u64 [sp + 0x90]\n 41901: u64 [sp + 0xe0] = a1\n 41905: a1 = sp + 0xd0\n 41909: a2 = u64 [sp + 0x98]\n 41913: u64 [sp + 0xe8] = a2\n 41917: ra = 1680, jump @19\n      : @1546 [@dyn 840] (gas: 41)\n 41924: a1 = u64 [sp + 0x68]\n 41927: a1 = a1 + s1\n 41930: a2 = a1 <u s1\n 41933: a0 = u64 [sp + 0x70]\n 41936: t2 = u64 [sp + 0x88]\n 41940: a0 = a0 + t2\n 41943: a3 = a0 + a2\n 41946: a4 = a3 ^ t2\n 41949: a0 = a3 <u t2\n 41952: a0 = a2 if a4 == 0\n 41955: a4 = u64 [sp + 0x10]\n 41958: a2 = a3 ^ a4\n 41961: a3 = a4 <u a3\n 41964: a4 = u64 [sp + 0x18]\n 41967: a1 = a4 <u a1\n 41970: s1 = u64 [sp + 0x38]\n 41973: t1 = u64 [sp + 0x90]\n 41977: a4 = t1 + s1\n 41980: a1 = a3 if a2 != 0\n 41983: a2 = a4 <u t1\n 41986: ra = u64 [sp + 0x30]\n 41989: t0 = u64 [sp + 0x98]\n 41993: a3 = t0 + ra\n 41996: a2 = a2 + a3\n 41999: a0 = a0 + a4\n 42002: a3 = a0 <u a4\n 42005: a2 = a2 + a3\n 42008: a4 = u64 [sp + 0x20]\n 42011: a3 = a2 ^ a4\n 42014: a2 = a4 <u a2\n 42017: a5 = u64 [sp + 0x28]\n 42020: a4 = a5 <u a0\n 42023: a2 = a4 if a3 == 0\n 42026: a0 = a0 ^ a5\n 42029: a0 = a0 | a3\n 42032: a1 = a2 if a0 != 0\n 42035: a4 = t0\n 42037: a3 = t1\n 42039: t0 = u64 [sp + 0x60]\n 42042: t1 = u64 [sp + 0x68]\n 42045: jump @1556 if a1 != 0\n      : @1547 (gas: 9)\n 42049: a0 = t1 | s1\n 42052: a1 = u64 [sp + 0x70]\n 42055: a1 = a1 | ra\n 42058: a0 = a0 | a1\n 42061: a0 = a0 >> 0x20\n 42064: a1 = a1 | s1\n 42067: a1 = a1 << 0x20\n 42070: a0 = a0 | a1\n 42073: jump @1555 if a0 != 0\n      : @1548 (gas: 10)\n 42077: a0 = t0 | a3\n 42080: a1 = t2 | a4\n 42083: a0 = a0 | a1\n 42086: a0 = a0 >> 0x20\n 42089: a1 = a1 | a3\n 42092: a1 = a1 << 0x20\n 42095: a0 = a0 | a1\n 42098: a2 = u64 [sp + 0x78]\n 42101: a3 = u64 [sp + 0xa8]\n 42105: jump @1555 if a0 != 0\n      : @1549 (gas: 9)\n 42109: a0 = u64 [sp + 0xa0]\n 42113: a0 = a0 | a3\n 42116: a1 = 0xffffffe0\n 42126: a4 = u64 [sp + 0x80]\n 42130: u64 [sp + 0x70] = a1\n 42133: a1 = a4 <u a1\n 42136: a1 = 0 if a2 != 0\n 42138: a1 = 0 if a0 != 0\n 42140: jump @1555 if a1 == 0\n      : @1550 (gas: 6)\n 42144: i32 t1 = t1 + 0\n 42146: u64 [sp + 0x68] = t1\n 42149: i32 a0 = a4 + 0x20\n 42152: a1 = t0\n 42154: s1 = t0\n 42156: ra = 1682, jump @34\n      : @1551 [@dyn 841] (gas: 5)\n 42163: i32 a0 = a0 + 0\n 42165: i32 a1 = s1 + 0\n 42167: a2 = u64 [sp + 0x68]\n 42170: ecalli 2 // 'call_data_copy'\n 42172: fallthrough\n      : @1552 (gas: 27)\n 42173: t0 = u64 [sp + 0x80]\n 42177: a0 = t0 + s1\n 42180: a1 = a0 <u t0\n 42183: a2 = u64 [sp + 0x88]\n 42187: a4 = u64 [sp + 0x78]\n 42190: a2 = a2 + a4\n 42193: a2 = a2 + a1\n 42196: a3 = a2 ^ a4\n 42199: a4 = a2 <u a4\n 42202: a4 = a1 if a3 == 0\n 42205: a1 = u64 [sp + 0x90]\n 42209: a3 = u64 [sp + 0xa0]\n 42213: a1 = a1 + a3\n 42216: a3 = a1 <u a3\n 42219: a5 = u64 [sp + 0x98]\n 42223: s1 = u64 [sp + 0xa8]\n 42227: a5 = a5 + s1\n 42230: a3 = a3 + a5\n 42233: a4 = a4 + a1\n 42236: a1 = a4 <u a1\n 42239: a1 = a1 + a3\n 42242: a1 = a1 | a4\n 42245: a3 = u64 [sp + 0x70]\n 42248: a3 = a0 <u a3\n 42251: a3 = 0 if a2 != 0\n 42253: a3 = 0 if a1 != 0\n 42255: jump @1555 if a3 == 0\n      : @1553 (gas: 8)\n 42258: s1 = t0\n 42260: i32 a0 = a0 + 0x20\n 42263: u64 [sp + 200] = 0\n 42267: u64 [sp + 192] = 0\n 42271: u64 [sp + 184] = 0\n 42275: a1 = sp + 0xb0\n 42279: u64 [sp + 176] = 0\n 42283: ra = 1684, jump @19\n      : @1554 [@dyn 842] (gas: 14)\n 42290: a0 = u64 [sp + 0x8]\n 42293: a1 = u64 [sp + 0xa8]\n 42297: u64 [a0 + 0x18] = a1\n 42300: a1 = u64 [sp + 0xa0]\n 42304: u64 [a0 + 0x10] = a1\n 42307: a1 = u64 [sp + 0x78]\n 42310: u64 [a0 + 0x8] = a1\n 42313: u64 [a0] = s1\n 42315: sp = s0 + 0xfffffffffffffe50\n 42319: ra = u64 [sp + 0x1a8]\n 42323: s0 = u64 [sp + 0x1a0]\n 42327: s1 = u64 [sp + 0x198]\n 42331: sp = sp + 0x1b0\n 42335: ret\n      : @1555 (gas: 1)\n 42337: trap\n      : @1556 (gas: 7)\n 42338: a1 = 0x20220\n 42343: i32 a1 = a1 + 0\n 42345: a0 = 0x1\n 42348: a2 = 0\n 42350: ra = 0x696\n 42354: ecalli 13 // 'seal_return'\n 42356: fallthrough\n      : @1557 [@dyn 843] (gas: 33)\n 42357: sp = sp + 0xffffffffffffffa0\n 42360: u64 [sp + 0x58] = ra\n 42363: u64 [sp + 0x50] = s0\n 42366: u64 [sp + 0x48] = s1\n 42369: s0 = sp + 0x60\n 42372: sp = sp & 0xfffffffffffffff0\n 42375: a2 = u64 [a1 + 0x10]\n 42378: a5 = u64 [a1 + 0x8]\n 42381: a4 = u64 [a1]\n 42383: a1 = u64 [a1 + 0x18]\n 42386: t0 = a2 << 0x3f\n 42389: a3 = a5 >> 0x1\n 42392: t0 = a3 | t0\n 42395: a3 = a1 << 0x3f\n 42398: a2 = a2 >> 0x1\n 42401: a3 = a3 | a2\n 42404: a5 = a5 << 0x3f\n 42407: a2 = a4 >> 0x1\n 42410: a5 = a5 | a2\n 42413: t1 = a1 >> 0x1\n 42416: a4 = a4 & 0x1\n 42419: a1 = -a4\n 42421: s1 = a4 <u 0x1\n 42424: a2 = a5 & 0x7f\n 42427: t2 = a1 & a3\n 42430: a3 = a1 & t0\n 42433: a2 = a5 if a4 != 0\n 42436: a4 = a1 & t1\n 42439: a1 = a2 <u 0x20\n 42442: a1 = 0 if a3 != 0\n 42444: a5 = t2 | a4\n 42447: a1 = 0 if a5 != 0\n 42449: jump @1560 if s1 != a1\n      : @1558 (gas: 5)\n 42452: u64 [a0] = a2\n 42454: u64 [a0 + 0x8] = a3\n 42457: u64 [a0 + 0x10] = t2\n 42460: u64 [a0 + 0x18] = a4\n 42463: t0 = 1688, jump @2004\n      : @1559 [@dyn 844] (gas: 1)\n 42469: ret\n      : @1560 (gas: 1)\n 42471: t0 = 1690, jump @1922\n      : @1561 [@dyn 845] (gas: 1)\n 42477: ra = 1692, jump @19\n      : @1562 [@dyn 846] (gas: 7)\n 42484: u64 [sp + 24] = 0\n 42487: u64 [sp + 16] = 0\n 42490: u64 [sp + 0] = 0x22\n 42493: a0 = 0x4\n 42496: a1 = sp\n 42498: u64 [sp + 8] = 0\n 42501: ra = 1694, jump @19\n      : @1563 [@dyn 847] (gas: 2)\n 42508: a1 = i32 [0x2020c]\n 42513: jump @1565 if a1 >u 63\n      : @1564 (gas: 2)\n 42517: u32 [0x2020c] = 0x40\n 42523: fallthrough\n      : @1565 (gas: 7)\n 42524: a1 = 0x20220\n 42529: i32 a1 = a1 + 0\n 42531: a0 = 0x1\n 42534: a2 = 0x24\n 42537: ra = 0x6a0\n 42541: ecalli 13 // 'seal_return'\n 42543: fallthrough\n      : @1566 [@dyn 848] (gas: 10)\n 42544: a4 = u64 [a1 + 0x18]\n 42547: a3 = u64 [a1 + 0x10]\n 42550: t1 = u64 [a1 + 0x8]\n 42553: t0 = a4 >u 0\n 42555: a5 = a3 >u 0\n 42557: a5 = t0 if a4 != 0\n 42560: t0 = a3 | a4\n 42563: a2 = t1 >u 0\n 42565: a2 = a5 if t0 != 0\n 42568: jump @1568 if a2 != 0\n      : @1567 (gas: 24)\n 42571: a1 = u64 [a1]\n 42573: a2 = a3 >> 0x3b\n 42576: a4 = a4 << 0x5\n 42579: t0 = a4 | a2\n 42582: a4 = t1 >> 0x3b\n 42585: a3 = a3 << 0x5\n 42588: a3 = a3 | a4\n 42591: a4 = a1 >> 0x3b\n 42594: t1 = t1 << 0x5\n 42597: a4 = t1 | a4\n 42600: a1 = a1 << 0x5\n 42603: a5 = a1 + 0x20\n 42606: a1 = a5 <u a1\n 42609: a2 = a4 + a1\n 42612: a4 = a2 <u a4\n 42615: a4 = a1 if a1 == 0\n 42618: a4 = a4 + a3\n 42621: a1 = a4 <u a3\n 42624: a1 = a1 + t0\n 42627: u64 [a0] = a5\n 42629: u64 [a0 + 0x8] = a2\n 42632: u64 [a0 + 0x10] = a4\n 42635: u64 [a0 + 0x18] = a1\n 42638: ret\n      : @1568 (gas: 6)\n 42640: sp = sp + 0xffffffffffffffb0\n 42643: u64 [sp + 0x48] = ra\n 42646: u64 [sp + 0x40] = s0\n 42649: s0 = sp + 0x50\n 42652: sp = sp & 0xfffffffffffffff0\n 42655: t0 = 1698, jump @1922\n      : @1569 [@dyn 849] (gas: 1)\n 42661: ra = 1700, jump @19\n      : @1570 [@dyn 850] (gas: 1)\n 42668: t0 = 1702, jump @1983\n      : @1571 [@dyn 851] (gas: 1)\n 42674: ra = 1704, jump @19\n      : @1572 [@dyn 852] (gas: 2)\n 42681: a1 = i32 [0x2020c]\n 42686: jump @1574 if a1 >u 63\n      : @1573 (gas: 2)\n 42690: u32 [0x2020c] = 0x40\n 42696: fallthrough\n      : @1574 (gas: 7)\n 42697: a1 = 0x20220\n 42702: i32 a1 = a1 + 0\n 42704: a0 = 0x1\n 42707: a2 = 0x24\n 42710: ra = 0x6aa\n 42714: ecalli 13 // 'seal_return'\n 42716: fallthrough\n      : @1575 [@dyn 853] (gas: 24)\n 42717: sp = sp + 0xfffffffffffffd20\n 42721: a2 = sp + 0x200\n 42725: u64 [a2 + 0xd8] = ra\n 42729: u64 [a2 + 0xd0] = s0\n 42733: u64 [a2 + 0xc8] = s1\n 42737: s0 = sp + 0x2e0\n 42741: sp = sp & 0xfffffffffffffff0\n 42744: a2 = u64 [a1]\n 42746: a3 = u64 [a1 + 0x8]\n 42749: a4 = u64 [a1 + 0x10]\n 42752: a1 = u64 [a1 + 0x18]\n 42755: u64 [sp] = a0\n 42757: u64 [sp + 0x80] = a1\n 42761: a5 = sp + 0x200\n 42765: u64 [a5 + 0x98] = a1\n 42769: u64 [sp + 0xa8] = a4\n 42773: u64 [a5 + 0x90] = a4\n 42777: u64 [sp + 0xb0] = a3\n 42781: u64 [a5 + 0x88] = a3\n 42785: a0 = sp + 0x2a0\n 42789: a1 = sp + 0x280\n 42793: u64 [sp + 0xb8] = a2\n 42797: u64 [a5 + 0x80] = a2\n 42801: ra = 1708, jump @1566\n      : @1576 [@dyn 854] (gas: 12)\n 42807: a1 = sp + 0x200\n 42811: a0 = u64 [a1 + 0xa0]\n 42815: u64 [sp + 0xa0] = a0\n 42819: a0 = u64 [a1 + 0xa8]\n 42823: u64 [sp + 0x98] = a0\n 42827: a0 = u64 [a1 + 0xb0]\n 42831: u64 [sp + 0x90] = a0\n 42835: a0 = u64 [a1 + 0xb8]\n 42839: u64 [sp + 0x88] = a0\n 42843: a0 = sp + 0x260\n 42847: a1 = 0x40\n 42850: ra = 1710, jump @17\n      : @1577 [@dyn 855] (gas: 24)\n 42857: a4 = sp + 0x200\n 42861: a0 = u64 [a4 + 0x78]\n 42864: s1 = u64 [a4 + 0x70]\n 42867: a1 = u64 [a4 + 0x68]\n 42870: u64 [sp + 0x68] = a1\n 42873: a2 = u64 [a4 + 0x60]\n 42876: u64 [sp + 0x8] = a2\n 42879: a3 = u64 [sp + 0x88]\n 42883: u64 [a4 + 0x38] = a3\n 42886: a3 = a0\n 42888: u64 [sp + 0x10] = a0\n 42891: a0 = u64 [sp + 0x90]\n 42895: u64 [a4 + 0x30] = a0\n 42898: a0 = u64 [sp + 0x98]\n 42902: u64 [a4 + 0x28] = a0\n 42905: a0 = u64 [sp + 0xa0]\n 42909: u64 [a4 + 0x20] = a0\n 42912: u64 [a4 + 0x58] = a3\n 42915: u64 [a4 + 0x50] = s1\n 42918: u64 [a4 + 0x48] = a1\n 42921: a0 = sp + 0x240\n 42925: a1 = sp + 0x220\n 42929: u64 [a4 + 0x40] = a2\n 42932: ra = 1712, jump @1521\n      : @1578 [@dyn 856] (gas: 12)\n 42938: a0 = u64 [sp + 0x8]\n 42941: a2 = u64 [sp + 0x10]\n 42944: a1 = u64 [sp + 0x68]\n 42947: a2 = a2 | a1\n 42950: a1 = a0 | s1\n 42953: a1 = a1 | a2\n 42956: a1 = a1 >> 0x20\n 42959: u64 [sp + 0x60] = s1\n 42962: a2 = a2 | s1\n 42965: a2 = a2 << 0x20\n 42968: a1 = a1 | a2\n 42971: jump @1605 if a1 != 0\n      : @1579 (gas: 11)\n 42975: a1 = u64 [sp + 0xb8]\n 42979: a2 = sp + 0x200\n 42983: u64 [a2] = a1\n 42985: a1 = u64 [sp + 0xb0]\n 42989: u64 [a2 + 0x8] = a1\n 42992: a1 = u64 [sp + 0xa8]\n 42996: u64 [a2 + 0x10] = a1\n 42999: a1 = sp + 0x200\n 43003: s1 = u64 [sp + 0x80]\n 43007: u64 [a2 + 0x18] = s1\n 43010: ra = 1714, jump @19\n      : @1580 [@dyn 857] (gas: 10)\n 43017: u64 [sp + 0x1d8] = s1\n 43021: a0 = u64 [sp + 0xa8]\n 43025: u64 [sp + 0x1d0] = a0\n 43029: a0 = u64 [sp + 0xb0]\n 43033: u64 [sp + 0x1c8] = a0\n 43037: a0 = sp + 0x1e0\n 43041: a1 = sp + 0x1c0\n 43045: a2 = u64 [sp + 0xb8]\n 43049: u64 [sp + 0x1c0] = a2\n 43053: ra = 1716, jump @1566\n      : @1581 [@dyn 858] (gas: 46)\n 43059: t1 = 0\n 43061: t2 = 0\n 43063: a5 = 0\n 43065: s1 = 0\n 43067: a0 = u64 [sp + 0x1e0]\n 43071: t0 = u64 [sp + 0x1f8]\n 43075: a2 = u64 [sp + 0x1e8]\n 43079: a3 = u64 [sp + 0x1f0]\n 43083: a4 = a0 + 0xffffffffffffffe0\n 43086: u64 [sp + 0x58] = a4\n 43089: a0 = a4 <u a0\n 43092: a4 = a2 + a0\n 43095: a4 = a4 + 0xffffffffffffffff\n 43098: a1 = a4 ^ a2\n 43101: u64 [sp + 0x50] = a4\n 43104: a2 = a4 <u a2\n 43107: a2 = a0 if a1 == 0\n 43110: a0 = a3 + 0xffffffffffffffff\n 43113: a2 = a2 + a0\n 43116: u64 [sp + 0x48] = a2\n 43119: a0 = a2 <u a0\n 43122: a2 = a3 <u 0x1\n 43125: a1 = t0 - a2\n 43128: a0 = a0 + a1\n 43131: u64 [sp + 0x40] = a0\n 43134: a1 = u64 [sp + 0x8]\n 43137: a0 = a1 + 0x20\n 43140: u64 [sp + 0x30] = a0\n 43143: a0 = a0 <u a1\n 43146: ra = u64 [sp + 0x68]\n 43149: a1 = ra + a0\n 43152: u64 [sp + 0x28] = a1\n 43155: a1 = a1 <u ra\n 43158: a1 = a0 if a0 == 0\n 43161: t0 = u64 [sp + 0x60]\n 43164: a1 = a1 + t0\n 43167: u64 [sp + 0x20] = a1\n 43170: a0 = a1 <u t0\n 43173: a1 = u64 [sp + 0x10]\n 43176: a0 = a0 + a1\n 43179: u64 [sp + 0x18] = a0\n 43182: a0 = 0x100000000\n 43192: u64 [sp + 0x98] = a0\n 43196: a0 = 0xffffffe0\n 43206: u64 [sp + 0x38] = a0\n 43209: fallthrough\n      : @1582 (gas: 16)\n 43210: a0 = u64 [sp + 0x58]\n 43213: a0 = t1 <u a0\n 43216: a2 = u64 [sp + 0x50]\n 43219: a1 = t2 ^ a2\n 43222: a2 = t2 <u a2\n 43225: a2 = a0 if a1 == 0\n 43228: a0 = u64 [sp + 0x48]\n 43231: a4 = a5 <u a0\n 43234: a3 = u64 [sp + 0x40]\n 43237: a1 = s1 ^ a3\n 43240: a3 = s1 <u a3\n 43243: a3 = a4 if a1 == 0\n 43246: a0 = a0 ^ a5\n 43249: a0 = a0 | a1\n 43252: a3 = a2 if a0 == 0\n 43255: jump @1604 if a3 == 0\n      : @1583 (gas: 7)\n 43259: u64 [sp + 0x80] = t2\n 43263: u64 [sp + 0x88] = t1\n 43267: u64 [sp + 0x90] = a5\n 43271: u64 [sp + 0x78] = s1\n 43274: a0 = sp + 0x1a0\n 43278: a1 = 0x40\n 43281: ra = 1718, jump @17\n      : @1584 [@dyn 859] (gas: 13)\n 43288: a0 = u64 [sp + 0x1b8]\n 43292: u64 [sp + 0xa8] = a0\n 43296: s1 = u64 [sp + 0x1b0]\n 43300: a2 = u64 [sp + 0x1a8]\n 43304: u64 [sp + 0xb0] = a2\n 43308: a1 = u64 [sp + 0x1a0]\n 43312: u64 [sp + 0xb8] = a1\n 43316: u64 [sp + 0x198] = a0\n 43320: u64 [sp + 0x190] = s1\n 43324: u64 [sp + 0x188] = a2\n 43328: a0 = sp + 0x180\n 43332: u64 [sp + 0x180] = a1\n 43336: ra = 1720, jump @1511\n      : @1585 [@dyn 860] (gas: 11)\n 43342: a0 = u64 [sp + 0xa8]\n 43346: a1 = u64 [sp + 0xb0]\n 43350: a0 = a0 | a1\n 43353: a1 = u64 [sp + 0xb8]\n 43357: a1 = a1 | s1\n 43360: a1 = a1 | a0\n 43363: a1 = a1 >> 0x20\n 43366: a0 = a0 | s1\n 43369: a0 = a0 << 0x20\n 43372: a0 = a0 | a1\n 43375: jump @1605 if a0 != 0\n      : @1586 (gas: 7)\n 43379: u64 [sp + 376] = 0\n 43383: u64 [sp + 368] = 0\n 43387: u64 [sp + 360] = 0\n 43391: a1 = sp + 0x160\n 43395: u64 [sp + 352] = 0\n 43399: a0 = u64 [sp + 0xb8]\n 43403: ra = 1722, jump @19\n      : @1587 [@dyn 861] (gas: 11)\n 43410: u64 [sp + 0x70] = s1\n 43413: a2 = u64 [sp + 0xa8]\n 43417: a2 = a2 | s1\n 43420: a0 = u64 [sp + 0x38]\n 43423: a1 = u64 [sp + 0xb8]\n 43427: a0 = a1 <u a0\n 43430: a1 = u64 [sp + 0xb0]\n 43434: a0 = 0 if a1 != 0\n 43436: u64 [sp + 0xa0] = a2\n 43440: a0 = 0 if a2 != 0\n 43442: jump @1605 if a0 == 0\n      : @1588 (gas: 8)\n 43446: s1 = u64 [sp + 0xb8]\n 43450: i32 a0 = s1 + 0x20\n 43453: u64 [sp + 344] = 0\n 43457: u64 [sp + 336] = 0\n 43461: u64 [sp + 328] = 0\n 43465: a1 = sp + 0x140\n 43469: u64 [sp + 320] = 0\n 43473: ra = 1724, jump @19\n      : @1589 [@dyn 862] (gas: 3)\n 43480: a0 = u64 [sp + 0x98]\n 43484: a0 = a0 + 0xffffffffffffffc0\n 43487: t0 = 1726, jump @1985\n      : @1590 [@dyn 863] (gas: 1)\n 43493: jump @1605 if a0 == 0\n      : @1591 (gas: 8)\n 43497: s1 = u64 [sp + 0xb8]\n 43501: i32 a0 = s1 + 0x40\n 43504: u64 [sp + 312] = 0\n 43508: u64 [sp + 304] = 0\n 43512: u64 [sp + 296] = 0\n 43516: a1 = sp + 0x120\n 43520: u64 [sp + 288] = 0\n 43524: ra = 1728, jump @19\n      : @1592 [@dyn 864] (gas: 3)\n 43531: a0 = u64 [sp + 0x98]\n 43535: a0 = a0 + 0xffffffffffffffa0\n 43538: t0 = 1730, jump @1985\n      : @1593 [@dyn 865] (gas: 1)\n 43544: jump @1605 if a0 == 0\n      : @1594 (gas: 8)\n 43548: s1 = u64 [sp + 0xb8]\n 43552: i32 a0 = s1 + 0x60\n 43555: u64 [sp + 280] = 0\n 43559: u64 [sp + 272] = 0\n 43563: u64 [sp + 264] = 0\n 43567: a1 = sp + 0x100\n 43571: u64 [sp + 256] = 0\n 43575: ra = 1732, jump @19\n      : @1595 [@dyn 866] (gas: 3)\n 43582: a0 = u64 [sp + 0x98]\n 43586: a0 = a0 + 0xffffffffffffff80\n 43589: t0 = 1734, jump @1985\n      : @1596 [@dyn 867] (gas: 1)\n 43595: jump @1605 if a0 == 0\n      : @1597 (gas: 8)\n 43599: a0 = u64 [sp + 0xb8]\n 43603: i32 a0 = a0 + 0x80\n 43607: u64 [sp + 248] = 0\n 43611: u64 [sp + 240] = 0\n 43615: u64 [sp + 232] = 0\n 43619: a1 = sp + 0xe0\n 43623: u64 [sp + 224] = 0\n 43627: ra = 1736, jump @19\n      : @1598 [@dyn 868] (gas: 7)\n 43634: a1 = u64 [sp + 0x30]\n 43637: a0 = u64 [sp + 0x88]\n 43641: a0 = a0 + a1\n 43644: a1 = a0 <u a1\n 43647: a4 = u64 [sp + 0x28]\n 43650: a2 = u64 [sp + 0x80]\n 43654: t0 = 1738, jump @1984\n      : @1599 [@dyn 869] (gas: 9)\n 43660: a3 = u64 [sp + 0x20]\n 43663: a1 = u64 [sp + 0x90]\n 43667: a1 = a1 + a3\n 43670: a3 = a1 <u a3\n 43673: s1 = u64 [sp + 0x78]\n 43676: a5 = u64 [sp + 0x18]\n 43679: a5 = a5 + s1\n 43682: a3 = a3 + a5\n 43685: t0 = 1740, jump @1930\n      : @1600 [@dyn 870] (gas: 1)\n 43691: jump @1605 if a1 != 0\n      : @1601 (gas: 10)\n 43695: a1 = u64 [sp + 0xb8]\n 43699: u64 [sp + 0xc0] = a1\n 43703: a1 = u64 [sp + 0xb0]\n 43707: u64 [sp + 0xc8] = a1\n 43711: a1 = u64 [sp + 0x70]\n 43714: u64 [sp + 0xd0] = a1\n 43718: a1 = sp + 0xc0\n 43722: a2 = u64 [sp + 0xa8]\n 43726: u64 [sp + 0xd8] = a2\n 43730: ra = 1742, jump @19\n      : @1602 [@dyn 871] (gas: 5)\n 43737: a1 = u64 [sp + 0x88]\n 43741: a0 = a1 + 0x20\n 43744: a1 = a0 <u a1\n 43747: a3 = u64 [sp + 0x80]\n 43751: t0 = 1744, jump @1991\n      : @1603 [@dyn 872] (gas: 10)\n 43757: a1 = u64 [sp + 0x90]\n 43761: a3 = a3 + a1\n 43764: a1 = a3 <u a1\n 43767: s1 = s1 + a1\n 43770: t1 = a0\n 43772: t2 = a2\n 43774: a5 = a3\n 43776: t0 = u64 [sp + 0x60]\n 43779: ra = u64 [sp + 0x68]\n 43782: jump @1582\n      : @1604 (gas: 14)\n 43785: a0 = u64 [sp]\n 43787: a1 = u64 [sp + 0x8]\n 43790: u64 [a0] = a1\n 43792: u64 [a0 + 0x8] = ra\n 43795: u64 [a0 + 0x10] = t0\n 43798: a1 = u64 [sp + 0x10]\n 43801: u64 [a0 + 0x18] = a1\n 43804: sp = s0 + 0xfffffffffffffd20\n 43808: a0 = sp + 0x200\n 43812: ra = u64 [a0 + 0xd8]\n 43816: s0 = u64 [a0 + 0xd0]\n 43820: s1 = u64 [a0 + 0xc8]\n 43824: sp = sp + 0x2e0\n 43828: ret\n      : @1605 (gas: 1)\n 43830: trap\n      : @1606 (gas: 22)\n 43831: sp = sp + 0xffffffffffffff40\n 43835: u64 [sp + 0xb8] = ra\n 43839: u64 [sp + 0xb0] = s0\n 43843: u64 [sp + 0xa8] = s1\n 43847: s0 = sp + 0xc0\n 43851: sp = sp & 0xfffffffffffffff0\n 43854: a4 = u64 [a1 + 0x10]\n 43857: a3 = u64 [a1 + 0x18]\n 43860: a5 = u64 [a1 + 0x8]\n 43863: a1 = u64 [a1]\n 43865: u64 [sp + 0x28] = a3\n 43868: u64 [sp + 0x20] = a5\n 43871: a5 = a5 | a3\n 43874: a3 = a1 | a4\n 43877: a3 = a3 | a5\n 43880: a3 = a3 >> 0x20\n 43883: u64 [sp + 0x30] = a4\n 43886: a4 = a4 | a5\n 43889: a4 = a4 << 0x20\n 43892: a3 = a3 | a4\n 43895: u64 [sp + 0x38] = a0\n 43898: jump @1610 if a3 != 0\n      : @1607 (gas: 10)\n 43902: a0 = u64 [a2 + 0x18]\n 43905: u64 [sp + 0x10] = a0\n 43908: s1 = u64 [a2 + 0x10]\n 43911: a0 = u64 [a2 + 0x8]\n 43914: u64 [sp + 0x8] = a0\n 43917: a0 = u64 [a2]\n 43919: u64 [sp] = a0\n 43921: a0 = sp + 0x80\n 43925: u64 [sp + 0x18] = a1\n 43928: ra = 1746, jump @17\n      : @1608 [@dyn 873] (gas: 19)\n 43935: t0 = u64 [sp + 0x10]\n 43938: a5 = u64 [sp + 0x8]\n 43941: t1 = u64 [sp]\n 43943: a0 = u64 [sp + 0x88]\n 43947: a1 = u64 [sp + 0x98]\n 43951: a2 = u64 [sp + 0x80]\n 43955: a3 = u64 [sp + 0x90]\n 43959: a4 = a0 ^ a5\n 43962: a0 = a5 <u a0\n 43965: a2 = t1 <u a2\n 43968: a2 = a0 if a4 != 0\n 43971: a0 = s1 <u a3\n 43974: a4 = a1 ^ t0\n 43977: a1 = t0 <u a1\n 43980: a1 = a0 if a4 == 0\n 43983: a3 = a3 ^ s1\n 43986: a3 = a3 | a4\n 43989: a1 = a2 if a3 == 0\n 43992: jump @1611 if a1 == 0\n      : @1609 (gas: 47)\n 43996: a0 = s1 >> 0x3b\n 43999: a1 = t0 << 0x5\n 44002: t0 = a1 | a0\n 44005: a1 = a5 >> 0x3b\n 44008: s1 = s1 << 0x5\n 44011: a1 = a1 | s1\n 44014: a2 = t1 >> 0x3b\n 44017: a3 = a5 << 0x5\n 44020: a2 = a2 | a3\n 44023: a3 = t1 << 0x5\n 44026: a0 = u64 [sp + 0x18]\n 44029: a3 = a3 + a0\n 44032: a4 = a3 <u a0\n 44035: a5 = u64 [sp + 0x20]\n 44038: a2 = a2 + a5\n 44041: a2 = a2 + a4\n 44044: a0 = a2 ^ a5\n 44047: s1 = a2 <u a5\n 44050: s1 = a4 if a0 == 0\n 44053: a5 = u64 [sp + 0x30]\n 44056: a1 = a1 + a5\n 44059: s1 = s1 + a1\n 44062: a4 = s1 <u a1\n 44065: a1 = a1 <u a5\n 44068: a5 = u64 [sp + 0x28]\n 44071: a0 = a5 + t0\n 44074: a0 = a0 + a1\n 44077: a0 = a0 + a4\n 44080: a1 = a3 + 0x20\n 44083: a3 = a1 <u a3\n 44086: a4 = a2 + a3\n 44089: a2 = a4 <u a2\n 44092: a2 = a3 if a3 == 0\n 44095: a2 = a2 + s1\n 44098: a3 = a2 <u s1\n 44101: a0 = a0 + a3\n 44104: a3 = u64 [sp + 0x38]\n 44107: u64 [a3] = a1\n 44109: u64 [a3 + 0x8] = a4\n 44112: u64 [a3 + 0x10] = a2\n 44115: u64 [a3 + 0x18] = a0\n 44118: sp = s0 + 0xffffffffffffff40\n 44122: ra = u64 [sp + 0xb8]\n 44126: s0 = u64 [sp + 0xb0]\n 44130: s1 = u64 [sp + 0xa8]\n 44134: sp = sp + 0xc0\n 44138: ret\n      : @1610 (gas: 1)\n 44140: trap\n      : @1611 (gas: 6)\n 44141: u64 [sp + 112] = 0\n 44144: u64 [sp + 104] = 0\n 44147: u64 [sp + 96] = 0\n 44150: t0 = 0x6d4\n 44154: a0 = 0x4e487b7100000000\n 44164: fallthrough\n      : @1612 [@dyn 874] (gas: 4)\n 44165: a1 = sp + 0x60\n 44168: u64 [sp + 0x78] = a0\n 44171: a0 = 0\n 44173: ra = 1750, jump @19\n      : @1613 [@dyn 875] (gas: 7)\n 44180: u64 [sp + 88] = 0\n 44183: u64 [sp + 80] = 0\n 44186: u64 [sp + 64] = 0x32\n 44190: a0 = 0x4\n 44193: a1 = sp + 0x40\n 44196: u64 [sp + 72] = 0\n 44199: ra = 1752, jump @19\n      : @1614 [@dyn 876] (gas: 2)\n 44206: a1 = i32 [0x2020c]\n 44211: jump @1616 if a1 >u 63\n      : @1615 (gas: 2)\n 44215: u32 [0x2020c] = 0x40\n 44221: fallthrough\n      : @1616 (gas: 7)\n 44222: a1 = 0x20220\n 44227: i32 a1 = a1 + 0\n 44229: a0 = 0x1\n 44232: a2 = 0x24\n 44235: ra = 0x6da\n 44239: ecalli 13 // 'seal_return'\n 44241: fallthrough\n      : @1617 [@dyn 877] (gas: 17)\n 44242: sp = sp + 0xfffffffffffffa00\n 44246: a3 = sp + 0x500\n 44250: u64 [a3 + 0xf8] = ra\n 44254: u64 [a3 + 0xf0] = s0\n 44258: u64 [a3 + 0xe8] = s1\n 44262: s0 = sp + 0x600\n 44266: sp = sp & 0xffffffffffffffe0\n 44269: s1 = sp\n 44271: a4 = u32 [a1 + 0x10]\n 44274: a3 = u64 [a1]\n 44276: a5 = u64 [a1 + 0x8]\n 44279: u64 [s1 + 0x90] = a3\n 44283: u64 [s1 + 0x88] = a4\n 44287: a1 = a3 | a4\n 44290: u64 [s1 + 0x80] = a5\n 44294: a1 = a1 | a5\n 44297: jump @1689 if a1 == 0\n      : @1618 (gas: 23)\n 44301: a5 = u64 [a2 + 0x18]\n 44304: a4 = u64 [a2 + 0x10]\n 44307: a3 = u64 [a2 + 0x8]\n 44310: a1 = u64 [a2]\n 44312: a2 = u64 [a0 + 0x10]\n 44315: u64 [s1 + 0x40] = a2\n 44318: a2 = u64 [a0 + 0x8]\n 44321: u64 [s1 + 0x30] = a2\n 44324: a0 = u64 [a0]\n 44326: u64 [s1 + 0x38] = a0\n 44329: a0 = 0xffffffff\n 44339: u64 [s1 + 0x50] = a0\n 44342: u64 [s1 + 0x78] = a1\n 44345: u64 [s1 + 0x520] = a1\n 44349: u64 [s1 + 0x70] = a3\n 44352: u64 [s1 + 0x528] = a3\n 44356: u64 [s1 + 0x68] = a4\n 44359: u64 [s1 + 0x530] = a4\n 44363: a1 = s1 + 0x520\n 44367: u64 [s1 + 0x60] = a5\n 44370: u64 [s1 + 0x538] = a5\n 44374: a0 = 0\n 44376: ra = 1756, jump @19\n      : @1619 [@dyn 878] (gas: 7)\n 44383: u64 [s1 + 1304] = 0\n 44387: u64 [s1 + 1296] = 0\n 44391: u64 [s1 + 1280] = 0x2\n 44396: a0 = 0x20\n 44399: a1 = s1 + 0x500\n 44403: u64 [s1 + 1288] = 0\n 44407: ra = 1758, jump @19\n      : @1620 [@dyn 879] (gas: 3)\n 44414: a2 = 0x2020c\n 44419: a0 = i32 [0x2020c]\n 44424: jump @1622 if a0 >u 63\n      : @1621 (gas: 2)\n 44428: u32 [0x2020c] = 0x40\n 44434: fallthrough\n      : @1622 (gas: 15)\n 44435: u64 [s1 + 0x98] = a2\n 44439: a0 = sp + 0xffffffffffffffe0\n 44442: a2 = a0 & 0xffffffffffffffe0\n 44445: u64 [s1 + 0xb8] = a2\n 44449: sp = a2\n 44451: a0 = 0x20220\n 44456: i32 a0 = a0 + 0\n 44458: i32 a2 = a2 + 0\n 44460: a1 = 0x40\n 44463: u64 [s1 + 0xa0] = a0\n 44467: ra = 0x6e0\n 44471: ecalli 9 // 'hash_keccak_256'\n 44473: a3 = u64 [s1 + 0xb8]\n 44477: t0 = 0x6e2\n 44481: jump @1979\n      : @1623 [@dyn 880] (gas: 2)\n 44484: a3 = u64 [s1 + 0xb8]\n 44488: t0 = 1762, jump @1979\n      : @1624 [@dyn 881] (gas: 7)\n 44494: u64 [a4 + 0x58] = a3\n 44497: u64 [a4 + 0x50] = a2\n 44500: u64 [a4 + 0x48] = a1\n 44503: u64 [a4 + 0x40] = a0\n 44506: a0 = s1 + 0x4e0\n 44510: a1 = s1 + 0x540\n 44514: ra = 1764, jump @21\n      : @1625 [@dyn 882] (gas: 20)\n 44521: a0 = s1 + 0x400\n 44525: a3 = u64 [a0 + 0xf0]\n 44529: a1 = u64 [a0 + 0xe8]\n 44533: a2 = u64 [a0 + 0xe0]\n 44537: a0 = u64 [s1 + 0x50]\n 44540: u64 [s1 + 0x18] = a3\n 44543: a0 = a0 & a3\n 44546: u64 [s1 + 0xa8] = a0\n 44550: u64 [s1 + 0x28] = a1\n 44553: a1 = a1 & 0xffffffffffffffff\n 44556: u64 [s1 + 0xb0] = a1\n 44560: u64 [s1 + 0x20] = a2\n 44563: a0 = a2 & 0xffffffffffffffff\n 44566: u64 [s1 + 0xb8] = a0\n 44570: a0 = 0x30220\n 44575: u64 [s1 + 0x58] = a0\n 44578: i32 a0 = a0 + 0\n 44580: u64 [s1 + 0x48] = a0\n 44583: ecalli 5 // 'caller'\n 44585: fallthrough\n      : @1626 (gas: 7)\n 44586: a2 = u64 [s1 + 0x58]\n 44589: a0 = u32 [a2 + 0x10]\n 44592: a1 = u64 [a2]\n 44594: a2 = u64 [a2 + 0x8]\n 44597: a0 = a0 | a1\n 44600: a0 = a0 | a2\n 44603: jump @1655 if a0 == 0\n      : @1627 (gas: 6)\n 44607: a0 = u64 [s1 + 0x48]\n 44610: ra = 0x6e6\n 44614: ecalli 5 // 'caller'\n 44616: a2 = u64 [s1 + 0x58]\n 44619: t0 = 0x6e8\n 44623: jump @1913\n      : @1628 [@dyn 883] (gas: 2)\n 44626: a2 = u64 [s1 + 0x58]\n 44629: t0 = 1768, jump @1913\n      : @1629 [@dyn 884] (gas: 11)\n 44635: a2 = u64 [s1 + 0x18]\n 44638: a2 = a2 << 0x20\n 44641: a2 = a2 >> 0x20\n 44644: a1 = a1 ^ a2\n 44647: a2 = u64 [s1 + 0x20]\n 44650: a0 = a0 ^ a2\n 44653: a0 = a0 | a1\n 44656: a1 = u64 [s1 + 0x28]\n 44659: a1 = a1 ^ a3\n 44662: a0 = a0 | a1\n 44665: jump @1655 if a0 == 0\n      : @1630 (gas: 10)\n 44669: u64 [s1 + 1240] = 0\n 44673: a0 = u64 [s1 + 0xb8]\n 44677: u64 [s1 + 0x4c0] = a0\n 44681: a0 = u64 [s1 + 0xb0]\n 44685: u64 [s1 + 0x4c8] = a0\n 44689: a1 = s1 + 0x4c0\n 44693: a0 = u64 [s1 + 0xa8]\n 44697: u64 [s1 + 0x4d0] = a0\n 44701: a0 = 0\n 44703: ra = 1770, jump @19\n      : @1631 [@dyn 885] (gas: 7)\n 44710: u64 [s1 + 1208] = 0\n 44714: u64 [s1 + 1200] = 0\n 44718: u64 [s1 + 1184] = 0x5\n 44723: a0 = 0x20\n 44726: a1 = s1 + 0x4a0\n 44730: u64 [s1 + 1192] = 0\n 44734: ra = 1772, jump @19\n      : @1632 [@dyn 886] (gas: 3)\n 44741: a1 = u64 [s1 + 0x98]\n 44745: a0 = i32 [a1]\n 44747: jump @1634 if a0 >u 63\n      : @1633 (gas: 2)\n 44751: u32 [a1 + 0] = 0x40\n 44754: fallthrough\n      : @1634 (gas: 12)\n 44755: a0 = sp + 0xffffffffffffffe0\n 44758: a0 = a0 & 0xffffffffffffffe0\n 44761: u64 [s1 + 0x28] = a0\n 44764: sp = a0\n 44766: i32 a2 = a0 + 0\n 44768: a1 = 0x40\n 44771: a0 = u64 [s1 + 0xa0]\n 44775: ra = 0x6ee\n 44779: ecalli 9 // 'hash_keccak_256'\n 44781: a3 = u64 [s1 + 0x28]\n 44784: t0 = 0x6f0\n 44788: jump @2019\n      : @1635 [@dyn 887] (gas: 2)\n 44791: a3 = u64 [s1 + 0x28]\n 44794: t0 = 1776, jump @2019\n      : @1636 [@dyn 888] (gas: 17)\n 44800: u64 [s1 + 0x20] = a0\n 44803: a0 = reverse a1\n 44805: u64 [s1 + 0x18] = a0\n 44808: a0 = reverse a2\n 44810: u64 [s1 + 0x10] = a0\n 44813: a0 = reverse a3\n 44815: u64 [s1 + 0x8] = a0\n 44818: a0 = sp + 0xffffffffffffffe0\n 44821: a0 = a0 & 0xffffffffffffffe0\n 44824: u64 [s1 + 0x28] = a0\n 44827: sp = a0\n 44829: a0 = u64 [s1 + 0x48]\n 44832: ra = 0x6f2\n 44836: ecalli 5 // 'caller'\n 44838: a2 = u64 [s1 + 0x58]\n 44841: t0 = 0x6f4\n 44845: jump @1914\n      : @1637 [@dyn 889] (gas: 2)\n 44848: a2 = u64 [s1 + 0x58]\n 44851: t0 = 1780, jump @1914\n      : @1638 [@dyn 890] (gas: 7)\n 44857: u64 [s1 + 1176] = 0\n 44861: u64 [s1 + 0x490] = a1\n 44865: u64 [s1 + 0x488] = a0\n 44869: a1 = s1 + 0x480\n 44873: u64 [s1 + 0x480] = a3\n 44877: a0 = 0\n 44879: ra = 1782, jump @19\n      : @1639 [@dyn 891] (gas: 12)\n 44886: a0 = u64 [s1 + 0x8]\n 44889: a3 = s1 + 0x400\n 44893: u64 [a3 + 0x78] = a0\n 44896: a0 = u64 [s1 + 0x10]\n 44899: u64 [a3 + 0x70] = a0\n 44902: a0 = u64 [s1 + 0x18]\n 44905: u64 [a3 + 0x68] = a0\n 44908: a0 = 0x20\n 44911: a1 = s1 + 0x460\n 44915: a2 = u64 [s1 + 0x20]\n 44918: u64 [a3 + 0x60] = a2\n 44921: ra = 1784, jump @19\n      : @1640 [@dyn 892] (gas: 3)\n 44928: a1 = u64 [s1 + 0x98]\n 44932: a0 = i32 [a1]\n 44934: jump @1642 if a0 >u 63\n      : @1641 (gas: 2)\n 44938: u32 [a1 + 0] = 0x40\n 44941: fallthrough\n      : @1642 (gas: 12)\n 44942: a0 = sp + 0xffffffffffffffe0\n 44945: a0 = a0 & 0xffffffffffffffe0\n 44948: u64 [s1 + 0x20] = a0\n 44951: sp = a0\n 44953: i32 a2 = a0 + 0\n 44955: a1 = 0x40\n 44958: a0 = u64 [s1 + 0xa0]\n 44962: ra = 0x6fa\n 44966: ecalli 9 // 'hash_keccak_256'\n 44968: a3 = u64 [s1 + 0x20]\n 44971: t0 = 0x6fc\n 44975: jump @1921\n      : @1643 [@dyn 893] (gas: 2)\n 44978: a3 = u64 [s1 + 0x20]\n 44981: t0 = 1788, jump @1921\n      : @1644 [@dyn 894] (gas: 7)\n 44987: a1 = u64 [s1 + 0x28]\n 44990: u64 [a1 + 0x18] = a3\n 44993: u64 [a1 + 0x10] = a2\n 44996: u64 [a1 + 0x8] = a4\n 44999: u64 [a1] = a0\n 45001: a0 = s1 + 0x440\n 45005: ra = 1790, jump @21\n      : @1645 [@dyn 895] (gas: 2)\n 45012: a0 = u8 [s1 + 0x440]\n 45016: jump @1655 if a0 != 0\n      : @1646 (gas: 11)\n 45020: a0 = u64 [s1 + 0x78]\n 45023: u64 [s1 + 0x420] = a0\n 45027: a0 = u64 [s1 + 0x70]\n 45030: u64 [s1 + 0x428] = a0\n 45034: a0 = u64 [s1 + 0x68]\n 45037: u64 [s1 + 0x430] = a0\n 45041: a1 = s1 + 0x420\n 45045: a0 = u64 [s1 + 0x60]\n 45048: u64 [s1 + 0x438] = a0\n 45052: a0 = 0\n 45054: ra = 1792, jump @19\n      : @1647 [@dyn 896] (gas: 7)\n 45061: u64 [s1 + 1048] = 0\n 45065: u64 [s1 + 1040] = 0\n 45069: u64 [s1 + 1024] = 0x4\n 45074: a0 = 0x20\n 45077: a1 = s1 + 0x400\n 45081: u64 [s1 + 1032] = 0\n 45085: ra = 1794, jump @19\n      : @1648 [@dyn 897] (gas: 3)\n 45092: a0 = u64 [s1 + 0x48]\n 45095: ecalli 5 // 'caller'\n 45097: fallthrough\n      : @1649 (gas: 20)\n 45098: a2 = u64 [s1 + 0x58]\n 45101: a0 = u64 [a2 + 0x8]\n 45104: a1 = u64 [a2]\n 45106: a2 = i32 [a2 + 0x10]\n 45109: a0 = reverse a0\n 45111: a3 = a0 >> 0x20\n 45114: a1 = reverse a1\n 45116: a4 = a1 << 0x20\n 45119: a3 = a3 | a4\n 45122: u64 [s1 + 0x28] = a3\n 45125: a0 = a0 << 0x20\n 45128: a2 = reverse a2\n 45130: a4 = u64 [s1 + 0x98]\n 45134: a3 = i32 [a4]\n 45136: a2 = a2 >> 0x20\n 45139: a0 = a0 | a2\n 45142: u64 [s1 + 0x20] = a0\n 45145: a1 = a1 >> 0x20\n 45148: u64 [s1 + 0x18] = a1\n 45151: jump @1651 if a3 >u 63\n      : @1650 (gas: 2)\n 45155: u32 [a4 + 0] = 0x40\n 45158: fallthrough\n      : @1651 (gas: 12)\n 45159: a0 = sp + 0xffffffffffffffe0\n 45162: a0 = a0 & 0xffffffffffffffe0\n 45165: u64 [s1 + 0x10] = a0\n 45168: sp = a0\n 45170: i32 a2 = a0 + 0\n 45172: a1 = 0x40\n 45175: a0 = u64 [s1 + 0xa0]\n 45179: ra = 0x704\n 45183: ecalli 9 // 'hash_keccak_256'\n 45185: a3 = u64 [s1 + 0x10]\n 45188: t0 = 0x706\n 45192: jump @1979\n      : @1652 [@dyn 898] (gas: 2)\n 45195: a3 = u64 [s1 + 0x10]\n 45198: t0 = 1798, jump @1979\n      : @1653 [@dyn 899] (gas: 7)\n 45204: u64 [a4 + 0x78] = a3\n 45207: u64 [a4 + 0x70] = a2\n 45210: u64 [a4 + 0x68] = a1\n 45213: u64 [a4 + 0x60] = a0\n 45216: a0 = s1 + 0x3e0\n 45220: a1 = s1 + 0x560\n 45224: ra = 1800, jump @21\n      : @1654 [@dyn 900] (gas: 12)\n 45231: a0 = u32 [s1 + 0x3f0]\n 45235: a1 = u64 [s1 + 0x3e0]\n 45239: a2 = u64 [s1 + 0x3e8]\n 45243: a3 = u64 [s1 + 0x18]\n 45246: a0 = a0 ^ a3\n 45249: a3 = u64 [s1 + 0x20]\n 45252: a1 = a1 ^ a3\n 45255: a0 = a0 | a1\n 45258: a1 = u64 [s1 + 0x28]\n 45261: a1 = a1 ^ a2\n 45264: a0 = a0 | a1\n 45267: jump @1701 if a0 != 0\n      : @1655 (gas: 6)\n 45271: a0 = u64 [s1 + 0xb8]\n 45275: a1 = u64 [s1 + 0xa8]\n 45279: a0 = a0 | a1\n 45282: a1 = u64 [s1 + 0xb0]\n 45286: a0 = a0 | a1\n 45289: jump @1667 if a0 == 0\n      : @1656 (gas: 10)\n 45293: a0 = u64 [s1 + 0x78]\n 45296: u64 [s1 + 0x320] = a0\n 45300: a0 = u64 [s1 + 0x70]\n 45303: u64 [s1 + 0x328] = a0\n 45307: a0 = u64 [s1 + 0x68]\n 45310: u64 [s1 + 0x330] = a0\n 45314: a0 = s1 + 0x320\n 45318: a1 = u64 [s1 + 0x60]\n 45321: u64 [s1 + 0x338] = a1\n 45325: ra = 1802, jump @1898\n      : @1657 [@dyn 901] (gas: 11)\n 45331: u64 [s1 + 792] = 0\n 45335: a0 = u64 [s1 + 0xa8]\n 45339: a2 = s1 + 0x300\n 45343: u64 [a2 + 0x10] = a0\n 45346: a0 = u64 [s1 + 0xb0]\n 45350: u64 [a2 + 0x8] = a0\n 45353: a1 = s1 + 0x300\n 45357: a0 = u64 [s1 + 0xb8]\n 45361: u64 [a2] = a0\n 45363: a0 = 0\n 45365: ra = 1804, jump @19\n      : @1658 [@dyn 902] (gas: 7)\n 45372: u64 [s1 + 760] = 0\n 45376: u64 [s1 + 752] = 0\n 45380: u64 [s1 + 736] = 0x3\n 45385: a0 = 0x20\n 45388: a1 = s1 + 0x2e0\n 45392: u64 [s1 + 744] = 0\n 45396: ra = 1806, jump @19\n      : @1659 [@dyn 903] (gas: 7)\n 45403: a0 = sp + 0xffffffffffffffe0\n 45406: a0 = a0 & 0xffffffffffffffe0\n 45409: u64 [s1 + 0x58] = a0\n 45412: sp = a0\n 45414: a2 = u64 [s1 + 0x98]\n 45418: a0 = i32 [a2]\n 45420: jump @1661 if a0 >u 63\n      : @1660 (gas: 3)\n 45424: u32 [a2 + 0] = 0x40\n 45427: t0 = 0x710\n 45431: jump @1962\n      : @1661 (gas: 1)\n 45434: t0 = 1808, jump @1962\n      : @1662 [@dyn 904] (gas: 4)\n 45440: ra = 0x712\n 45444: ecalli 9 // 'hash_keccak_256'\n 45446: t0 = 0x714\n 45450: jump @1923\n      : @1663 [@dyn 905] (gas: 1)\n 45453: t0 = 1812, jump @1923\n      : @1664 [@dyn 906] (gas: 2)\n 45459: a0 = s1 + 0x2c0\n 45463: ra = 1814, jump @21\n      : @1665 [@dyn 907] (gas: 2)\n 45470: a4 = s1 + 0x200\n 45474: t0 = 1816, jump @1966\n      : @1666 [@dyn 908] (gas: 8)\n 45480: a4 = s1 + 0x500\n 45484: u64 [a4 + 0x80] = a1\n 45488: u64 [a4 + 0x88] = a0\n 45492: u64 [a4 + 0x90] = a2\n 45496: u64 [a4 + 0x98] = a3\n 45500: a1 = s1 + 0x580\n 45504: a0 = u64 [s1 + 0x58]\n 45507: ra = 1818, jump @23\n      : @1667 [@dyn 909] (gas: 10)\n 45514: u64 [s1 + 696] = 0\n 45518: a0 = u64 [s1 + 0x90]\n 45522: u64 [s1 + 0x2a0] = a0\n 45526: a0 = u64 [s1 + 0x80]\n 45530: u64 [s1 + 0x2a8] = a0\n 45534: a1 = s1 + 0x2a0\n 45538: a0 = u64 [s1 + 0x88]\n 45542: u64 [s1 + 0x2b0] = a0\n 45546: a0 = 0\n 45548: ra = 1820, jump @19\n      : @1668 [@dyn 910] (gas: 7)\n 45555: u64 [s1 + 664] = 0\n 45559: u64 [s1 + 656] = 0\n 45563: u64 [s1 + 640] = 0x3\n 45568: a0 = 0x20\n 45571: a1 = s1 + 0x280\n 45575: u64 [s1 + 648] = 0\n 45579: ra = 1822, jump @19\n      : @1669 [@dyn 911] (gas: 7)\n 45586: a0 = sp + 0xffffffffffffffe0\n 45589: a0 = a0 & 0xffffffffffffffe0\n 45592: u64 [s1 + 0x58] = a0\n 45595: sp = a0\n 45597: a1 = u64 [s1 + 0x98]\n 45601: a0 = i32 [a1]\n 45603: jump @1671 if a0 >u 63\n      : @1670 (gas: 3)\n 45607: u32 [a1 + 0] = 0x40\n 45610: t0 = 0x720\n 45614: jump @1962\n      : @1671 (gas: 1)\n 45617: t0 = 1824, jump @1962\n      : @1672 [@dyn 912] (gas: 4)\n 45623: ra = 0x722\n 45627: ecalli 9 // 'hash_keccak_256'\n 45629: t0 = 0x724\n 45633: jump @1923\n      : @1673 [@dyn 913] (gas: 1)\n 45636: t0 = 1828, jump @1923\n      : @1674 [@dyn 914] (gas: 2)\n 45642: a0 = s1 + 0x260\n 45646: ra = 1830, jump @21\n      : @1675 [@dyn 915] (gas: 5)\n 45653: a0 = u64 [s1 + 0x260]\n 45657: a1 = u64 [s1 + 0x278]\n 45661: a2 = u64 [s1 + 0x268]\n 45665: a3 = u64 [s1 + 0x270]\n 45669: t0 = 1832, jump @1982\n      : @1676 [@dyn 916] (gas: 8)\n 45675: a3 = s1 + 0x500\n 45679: u64 [a3 + 0xa0] = a0\n 45683: u64 [a3 + 0xa8] = a2\n 45687: u64 [a3 + 0xb0] = a4\n 45691: u64 [a3 + 0xb8] = a1\n 45695: a1 = s1 + 0x5a0\n 45699: a0 = u64 [s1 + 0x58]\n 45702: ra = 1834, jump @23\n      : @1677 [@dyn 917] (gas: 11)\n 45709: a0 = u64 [s1 + 0x60]\n 45712: u64 [s1 + 0x258] = a0\n 45716: a0 = u64 [s1 + 0x68]\n 45719: u64 [s1 + 0x250] = a0\n 45723: a0 = u64 [s1 + 0x70]\n 45726: u64 [s1 + 0x248] = a0\n 45730: a1 = s1 + 0x240\n 45734: a0 = u64 [s1 + 0x78]\n 45737: u64 [s1 + 0x240] = a0\n 45741: a0 = 0\n 45743: ra = 1836, jump @19\n      : @1678 [@dyn 918] (gas: 7)\n 45750: u64 [s1 + 568] = 0\n 45754: u64 [s1 + 560] = 0\n 45758: u64 [s1 + 544] = 0x2\n 45763: a0 = 0x20\n 45766: a1 = s1 + 0x220\n 45770: u64 [s1 + 552] = 0\n 45774: ra = 1838, jump @19\n      : @1679 [@dyn 919] (gas: 7)\n 45781: a1 = u64 [s1 + 0x98]\n 45785: a0 = sp + 0xffffffffffffffe0\n 45788: a0 = a0 & 0xffffffffffffffe0\n 45791: u64 [s1 + 0x58] = a0\n 45794: sp = a0\n 45796: a0 = i32 [a1]\n 45798: jump @1681 if a0 >u 63\n      : @1680 (gas: 3)\n 45802: u32 [a1 + 0] = 0x40\n 45805: t0 = 0x730\n 45809: jump @1962\n      : @1681 (gas: 1)\n 45812: t0 = 1840, jump @1962\n      : @1682 [@dyn 920] (gas: 4)\n 45818: ra = 0x732\n 45822: ecalli 9 // 'hash_keccak_256'\n 45824: t0 = 0x734\n 45828: jump @1923\n      : @1683 [@dyn 921] (gas: 1)\n 45831: t0 = 1844, jump @1923\n      : @1684 [@dyn 922] (gas: 2)\n 45837: a0 = s1 + 0x200\n 45841: ra = 1846, jump @21\n      : @1685 [@dyn 923] (gas: 15)\n 45848: a0 = u32 [s1 + 0x214]\n 45852: a0 = a0 << 0x20\n 45855: a1 = u64 [s1 + 0x218]\n 45859: a2 = u64 [s1 + 0x88]\n 45863: a0 = a0 | a2\n 45866: a2 = u64 [s1 + 0x80]\n 45870: a3 = s1 + 0x500\n 45874: u64 [a3 + 0xc8] = a2\n 45878: a2 = u64 [s1 + 0x90]\n 45882: u64 [a3 + 0xc0] = a2\n 45886: u64 [a3 + 0xd8] = a1\n 45890: u64 [a3 + 0xd0] = a0\n 45894: a1 = s1 + 0x5c0\n 45898: a0 = u64 [s1 + 0x58]\n 45901: ra = 1848, jump @23\n      : @1686 [@dyn 924] (gas: 37)\n 45908: a0 = u64 [s1 + 0x60]\n 45911: u64 [s1 + 0x198] = a0\n 45915: a0 = u64 [s1 + 0x68]\n 45918: u64 [s1 + 0x190] = a0\n 45922: a0 = u64 [s1 + 0x70]\n 45925: u64 [s1 + 0x188] = a0\n 45929: a0 = u64 [s1 + 0x78]\n 45932: u64 [s1 + 0x180] = a0\n 45936: u64 [s1 + 440] = 0\n 45940: a0 = u64 [s1 + 0x88]\n 45944: u64 [s1 + 0x1b0] = a0\n 45948: a0 = u64 [s1 + 0x80]\n 45952: u64 [s1 + 0x1a8] = a0\n 45956: a0 = u64 [s1 + 0x90]\n 45960: u64 [s1 + 0x1a0] = a0\n 45964: u64 [s1 + 472] = 0\n 45968: a0 = u64 [s1 + 0xa8]\n 45972: u64 [s1 + 0x1d0] = a0\n 45976: a0 = u64 [s1 + 0xb0]\n 45980: u64 [s1 + 0x1c8] = a0\n 45984: a0 = u64 [0x201c8]\n 45989: a1 = u64 [0x201d0]\n 45994: a2 = u64 [0x201d8]\n 45999: a3 = u64 [s1 + 0xb8]\n 46003: u64 [s1 + 0x1c0] = a3\n 46007: u64 [s1 + 0x1f8] = a0\n 46011: u64 [s1 + 0x1f0] = a1\n 46015: u64 [s1 + 0x1e8] = a2\n 46019: a0 = u64 [0x201e0]\n 46024: a2 = s1 + 0x1e0\n 46028: a3 = s1 + 0x1c0\n 46032: a4 = s1 + 0x1a0\n 46036: a5 = s1 + 0x180\n 46040: u64 [s1 + 0x1e0] = a0\n 46044: a0 = 0\n 46046: a1 = 0\n 46048: ra = 1850, jump @31\n      : @1687 [@dyn 925] (gas: 16)\n 46055: t0 = u64 [s1 + 0xa8]\n 46059: t1 = u64 [s1 + 0xb0]\n 46063: a0 = u64 [s1 + 0x30]\n 46066: a4 = a0 & 0xffffffffffffffff\n 46069: a0 = u64 [s1 + 0x40]\n 46072: a2 = u64 [s1 + 0x50]\n 46075: a3 = a0 & a2\n 46078: a2 = u64 [s1 + 0xb8]\n 46082: a0 = u64 [s1 + 0x38]\n 46085: a5 = a0 & 0xffffffffffffffff\n 46088: a0 = a2 ^ a5\n 46091: a1 = t0 ^ a3\n 46094: a0 = a0 | a1\n 46097: a1 = t1 ^ a4\n 46100: a0 = a0 | a1\n 46103: jump @1694 if a0 != 0\n      : @1688 (gas: 7)\n 46107: sp = s0 + 0xfffffffffffffa00\n 46111: a0 = sp + 0x500\n 46115: ra = u64 [a0 + 0xf8]\n 46119: s0 = u64 [a0 + 0xf0]\n 46123: s1 = u64 [a0 + 0xe8]\n 46127: sp = sp + 0x600\n 46131: ret\n      : @1689 (gas: 8)\n 46133: u64 [s1 + 240] = 0\n 46137: u64 [s1 + 232] = 0\n 46141: u64 [s1 + 224] = 0\n 46145: a0 = 0x64a0ae9200000000\n 46155: a1 = s1 + 0xe0\n 46159: u64 [s1 + 0xf8] = a0\n 46163: a0 = 0\n 46165: ra = 1852, jump @19\n      : @1690 [@dyn 926] (gas: 7)\n 46172: u64 [s1 + 216] = 0\n 46176: u64 [s1 + 208] = 0\n 46180: u64 [s1 + 200] = 0\n 46184: a0 = 0x4\n 46187: a1 = s1 + 0xc0\n 46191: u64 [s1 + 192] = 0\n 46195: ra = 1854, jump @19\n      : @1691 [@dyn 927] (gas: 2)\n 46202: a1 = i32 [0x2020c]\n 46207: jump @1693 if a1 >u 63\n      : @1692 (gas: 2)\n 46211: u32 [0x2020c] = 0x40\n 46217: fallthrough\n      : @1693 (gas: 6)\n 46218: a1 = 0x20220\n 46223: i32 a1 = a1 + 0\n 46225: a0 = 0x1\n 46228: a2 = 0x24\n 46231: ecalli 13 // 'seal_return'\n 46233: fallthrough\n      : @1694 (gas: 11)\n 46234: u64 [s1 + 368] = 0\n 46238: u64 [s1 + 360] = 0\n 46242: u64 [s1 + 352] = 0\n 46246: a0 = 0x64283d7b00000000\n 46256: a1 = s1 + 0x160\n 46260: u64 [s1 + 0x178] = a0\n 46264: a0 = 0\n 46266: u64 [s1 + 0x90] = a5\n 46270: u64 [s1 + 0x88] = a4\n 46274: u64 [s1 + 0x80] = a3\n 46278: ra = 1856, jump @19\n      : @1695 [@dyn 928] (gas: 10)\n 46285: u64 [s1 + 344] = 0\n 46289: a0 = u64 [s1 + 0x80]\n 46293: u64 [s1 + 0x150] = a0\n 46297: a0 = u64 [s1 + 0x88]\n 46301: u64 [s1 + 0x148] = a0\n 46305: a0 = 0x4\n 46308: a1 = s1 + 0x140\n 46312: a2 = u64 [s1 + 0x90]\n 46316: u64 [s1 + 0x140] = a2\n 46320: ra = 1858, jump @19\n      : @1696 [@dyn 929] (gas: 11)\n 46327: a0 = u64 [s1 + 0x60]\n 46330: u64 [s1 + 0x138] = a0\n 46334: a0 = u64 [s1 + 0x68]\n 46337: u64 [s1 + 0x130] = a0\n 46341: a0 = u64 [s1 + 0x70]\n 46344: u64 [s1 + 0x128] = a0\n 46348: a0 = 0x24\n 46351: a1 = s1 + 0x120\n 46355: a2 = u64 [s1 + 0x78]\n 46358: u64 [s1 + 0x120] = a2\n 46362: ra = 1860, jump @19\n      : @1697 [@dyn 930] (gas: 11)\n 46369: u64 [s1 + 280] = 0\n 46373: a0 = u64 [s1 + 0xa8]\n 46377: a3 = s1 + 0x100\n 46381: u64 [a3 + 0x10] = a0\n 46384: a0 = u64 [s1 + 0xb0]\n 46388: u64 [a3 + 0x8] = a0\n 46391: a0 = 0x44\n 46394: a1 = s1 + 0x100\n 46398: a2 = u64 [s1 + 0xb8]\n 46402: u64 [a3] = a2\n 46404: ra = 1862, jump @19\n      : @1698 [@dyn 931] (gas: 3)\n 46411: a0 = u64 [s1 + 0x98]\n 46415: a0 = i32 [a0]\n 46417: jump @1700 if a0 >u 127\n      : @1699 (gas: 7)\n 46421: a1 = u64 [s1 + 0x98]\n 46425: u32 [a1 + 0] = 0x80\n 46429: a0 = 0x1\n 46432: a2 = 0x64\n 46435: a1 = u64 [s1 + 0xa0]\n 46439: ecalli 13 // 'seal_return'\n 46441: jump @1701\n      : @1700 (gas: 5)\n 46443: a0 = 0x1\n 46446: a2 = 0x64\n 46449: a1 = u64 [s1 + 0xa0]\n 46453: ecalli 13 // 'seal_return'\n 46455: fallthrough\n      : @1701 (gas: 6)\n 46456: a0 = u64 [s1 + 0xb8]\n 46460: a1 = u64 [s1 + 0xa8]\n 46464: a0 = a0 | a1\n 46467: a1 = u64 [s1 + 0xb0]\n 46471: a0 = a0 | a1\n 46474: jump @1710 if a0 == 0\n      : @1702 (gas: 8)\n 46478: u64 [s1 + 976] = 0\n 46482: u64 [s1 + 968] = 0\n 46486: u64 [s1 + 960] = 0\n 46490: a0 = 0x177e802f00000000\n 46500: a1 = s1 + 0x3c0\n 46504: u64 [s1 + 0x3d8] = a0\n 46508: a0 = 0\n 46510: ra = 1864, jump @19\n      : @1703 [@dyn 932] (gas: 6)\n 46517: a0 = u64 [s1 + 0x48]\n 46520: ra = 0x74a\n 46524: ecalli 5 // 'caller'\n 46526: a2 = u64 [s1 + 0x58]\n 46529: t0 = 0x74c\n 46533: jump @1914\n      : @1704 [@dyn 933] (gas: 2)\n 46536: a2 = u64 [s1 + 0x58]\n 46539: t0 = 1868, jump @1914\n      : @1705 [@dyn 934] (gas: 7)\n 46545: u64 [s1 + 952] = 0\n 46549: u64 [s1 + 0x3b0] = a1\n 46553: u64 [s1 + 0x3a8] = a0\n 46557: a0 = 0x4\n 46560: a1 = s1 + 0x3a0\n 46564: u64 [s1 + 0x3a0] = a3\n 46568: ra = 1870, jump @19\n      : @1706 [@dyn 935] (gas: 12)\n 46575: a0 = u64 [s1 + 0x60]\n 46578: a3 = s1 + 0x300\n 46582: u64 [a3 + 0x98] = a0\n 46586: a0 = u64 [s1 + 0x68]\n 46589: u64 [a3 + 0x90] = a0\n 46593: a0 = u64 [s1 + 0x70]\n 46596: u64 [a3 + 0x88] = a0\n 46600: a0 = 0x24\n 46603: a1 = s1 + 0x380\n 46607: a2 = u64 [s1 + 0x78]\n 46610: u64 [a3 + 0x80] = a2\n 46614: ra = 1872, jump @19\n      : @1707 [@dyn 936] (gas: 3)\n 46621: a0 = u64 [s1 + 0x98]\n 46625: a0 = i32 [a0]\n 46627: jump @1709 if a0 >u 95\n      : @1708 (gas: 7)\n 46631: a1 = u64 [s1 + 0x98]\n 46635: u32 [a1 + 0] = 0x60\n 46638: a0 = 0x1\n 46641: a2 = 0x44\n 46644: a1 = u64 [s1 + 0xa0]\n 46648: ecalli 13 // 'seal_return'\n 46650: jump @1701\n      : @1709 (gas: 5)\n 46653: a0 = 0x1\n 46656: a2 = 0x44\n 46659: a1 = u64 [s1 + 0xa0]\n 46663: ecalli 13 // 'seal_return'\n 46665: jump @1701\n      : @1710 (gas: 8)\n 46668: u64 [s1 + 880] = 0\n 46672: u64 [s1 + 872] = 0\n 46676: u64 [s1 + 864] = 0\n 46680: a0 = 0x7e27328900000000\n 46690: a1 = s1 + 0x360\n 46694: u64 [s1 + 0x378] = a0\n 46698: a0 = 0\n 46700: ra = 1874, jump @19\n      : @1711 [@dyn 937] (gas: 12)\n 46707: a0 = u64 [s1 + 0x60]\n 46710: a3 = s1 + 0x300\n 46714: u64 [a3 + 0x58] = a0\n 46717: a0 = u64 [s1 + 0x68]\n 46720: u64 [a3 + 0x50] = a0\n 46723: a0 = u64 [s1 + 0x70]\n 46726: u64 [a3 + 0x48] = a0\n 46729: a0 = 0x4\n 46732: a1 = s1 + 0x340\n 46736: a2 = u64 [s1 + 0x78]\n 46739: u64 [a3 + 0x40] = a2\n 46742: ra = 1876, jump @19\n      : @1712 [@dyn 938] (gas: 3)\n 46749: a0 = u64 [s1 + 0x98]\n 46753: a0 = i32 [a0]\n 46755: jump @1714 if a0 >u 63\n      : @1713 (gas: 7)\n 46759: a1 = u64 [s1 + 0x98]\n 46763: u32 [a1 + 0] = 0x40\n 46766: a0 = 0x1\n 46769: a2 = 0x24\n 46772: a1 = u64 [s1 + 0xa0]\n 46776: ecalli 13 // 'seal_return'\n 46778: jump @1701\n      : @1714 (gas: 5)\n 46781: a0 = 0x1\n 46784: a2 = 0x24\n 46787: a1 = u64 [s1 + 0xa0]\n 46791: ecalli 13 // 'seal_return'\n 46793: jump @1701\n      : @1715 (gas: 16)\n 46796: a2 = u64 [a1]\n 46798: t0 = u64 [a1 + 0x18]\n 46801: a3 = u64 [a1 + 0x8]\n 46804: a5 = u64 [a1 + 0x10]\n 46807: a4 = a2 + 0x1\n 46810: a2 = a4 <u 0x1\n 46813: a2 = a2 + a3\n 46816: a3 = a4 | a2\n 46819: a3 = a3 <u 0x1\n 46822: a3 = a3 + a5\n 46825: a5 = a3 <u a5\n 46828: a5 = a5 + t0\n 46831: t0 = a2 | a5\n 46834: a1 = a4 | a3\n 46837: a1 = a1 | t0\n 46840: jump @1717 if a1 == 0\n      : @1716 (gas: 5)\n 46843: u64 [a0] = a4\n 46845: u64 [a0 + 0x8] = a2\n 46848: u64 [a0 + 0x10] = a3\n 46851: u64 [a0 + 0x18] = a5\n 46854: ret\n      : @1717 (gas: 6)\n 46856: sp = sp + 0xffffffffffffffb0\n 46859: u64 [sp + 0x48] = ra\n 46862: u64 [sp + 0x40] = s0\n 46865: s0 = sp + 0x50\n 46868: sp = sp & 0xfffffffffffffff0\n 46871: t0 = 1878, jump @1922\n      : @1718 [@dyn 939] (gas: 1)\n 46877: ra = 1880, jump @19\n      : @1719 [@dyn 940] (gas: 7)\n 46884: u64 [sp + 24] = 0\n 46887: u64 [sp + 16] = 0\n 46890: u64 [sp + 0] = 0x11\n 46893: a0 = 0x4\n 46896: a1 = sp\n 46898: u64 [sp + 8] = 0\n 46901: ra = 1882, jump @19\n      : @1720 [@dyn 941] (gas: 2)\n 46908: a1 = i32 [0x2020c]\n 46913: jump @1722 if a1 >u 63\n      : @1721 (gas: 2)\n 46917: u32 [0x2020c] = 0x40\n 46923: fallthrough\n      : @1722 (gas: 7)\n 46924: a1 = 0x20220\n 46929: i32 a1 = a1 + 0\n 46931: a0 = 0x1\n 46934: a2 = 0x24\n 46937: ra = 0x75c\n 46941: ecalli 13 // 'seal_return'\n 46943: fallthrough\n      : @1723 [@dyn 942] (gas: 55)\n 46944: sp = sp + 0xfffffffffffffb80\n 46948: a4 = sp + 0x400\n 46952: u64 [a4 + 0x78] = ra\n 46955: u64 [a4 + 0x70] = s0\n 46958: u64 [a4 + 0x68] = s1\n 46961: s0 = sp + 0x480\n 46965: sp = sp & 0xffffffffffffffe0\n 46968: a4 = u64 [a3 + 0x18]\n 46971: u64 [sp + 0x20] = a4\n 46974: a4 = u64 [a3 + 0x10]\n 46977: u64 [sp + 0x28] = a4\n 46980: a4 = u64 [a3 + 0x8]\n 46983: u64 [sp + 0x30] = a4\n 46986: a3 = u64 [a3]\n 46988: u64 [sp + 0x38] = a3\n 46991: ra = u64 [a0]\n 46993: t1 = u64 [a0 + 0x8]\n 46996: t2 = u64 [a0 + 0x10]\n 46999: a0 = u64 [a0 + 0x18]\n 47002: u64 [sp + 0xb8] = a0\n 47006: t0 = u64 [a1]\n 47008: u64 [sp + 0x88] = t0\n 47012: s1 = u64 [a1 + 0x8]\n 47015: a0 = u64 [a1 + 0x10]\n 47018: u64 [sp + 0xa0] = a0\n 47022: a1 = u64 [a1 + 0x18]\n 47025: a3 = u64 [a2]\n 47027: a4 = u64 [a2 + 0x8]\n 47030: a5 = u64 [a2 + 0x10]\n 47033: a2 = u64 [a2 + 0x18]\n 47036: u64 [sp + 0x60] = a2\n 47039: u64 [sp + 0x3b8] = a2\n 47043: u64 [sp + 0x48] = a5\n 47046: u64 [sp + 0x3b0] = a5\n 47050: u64 [sp + 0x50] = a4\n 47053: a5 = sp + 0x300\n 47057: u64 [a5 + 0xa8] = a4\n 47061: u64 [sp + 0x58] = a3\n 47064: u64 [a5 + 0xa0] = a3\n 47068: u64 [a5 + 0xd8] = a1\n 47072: u64 [a5 + 0xd0] = a0\n 47076: u64 [a5 + 0xc8] = s1\n 47080: u64 [a5 + 0xc0] = t0\n 47084: a0 = u64 [sp + 0xb8]\n 47088: u64 [a5 + 0xf8] = a0\n 47092: u64 [sp + 0x68] = t2\n 47095: u64 [a5 + 0xf0] = t2\n 47099: u64 [sp + 0x70] = t1\n 47102: u64 [a5 + 0xe8] = t1\n 47106: a0 = sp + 0x3e0\n 47110: a1 = sp + 0x3c0\n 47114: a2 = sp + 0x3a0\n 47118: u64 [sp + 0x78] = ra\n 47121: u64 [a5 + 0xe0] = ra\n 47125: ra = 1886, jump @1617\n      : @1724 [@dyn 943] (gas: 24)\n 47131: u64 [sp + 0x8] = s1\n 47134: a0 = reverse s1\n 47136: a1 = a0 << 0x20\n 47139: a2 = u64 [sp + 0xa0]\n 47143: a2 = reverse a2\n 47145: a2 = a2 >> 0x20\n 47148: a3 = a2 | a1\n 47151: a0 = a0 >> 0x20\n 47154: a1 = u64 [sp + 0x88]\n 47158: a1 = reverse a1\n 47160: s1 = 0x30220\n 47165: a2 = a1 << 0x20\n 47168: a0 = a0 | a2\n 47171: a1 = a1 >> 0x20\n 47174: u64 [sp + 0x18] = a1\n 47177: u32 [0x30230] = a1\n 47182: u64 [sp + 0x10] = a0\n 47185: u64 [0x30228] = a0\n 47190: u64 [sp + 0x40] = a3\n 47193: u64 [0x30220] = a3\n 47198: i32 a0 = s1 + 0\n 47200: u64 [sp + 0x98] = a0\n 47204: ecalli 6 // 'code_size'\n 47206: fallthrough\n      : @1725 (gas: 1)\n 47207: jump @1754 if a0 == 0\n      : @1726 (gas: 4)\n 47211: u64 [sp + 0x90] = s1\n 47215: a0 = sp + 0x380\n 47219: a1 = 0x40\n 47222: ra = 1888, jump @17\n      : @1727 [@dyn 944] (gas: 15)\n 47229: a3 = sp + 0x300\n 47233: a2 = u64 [a3 + 0x98]\n 47237: s1 = u64 [a3 + 0x90]\n 47241: a1 = u64 [a3 + 0x88]\n 47245: a0 = u64 [a3 + 0x80]\n 47249: u64 [sp + 0xb0] = a1\n 47253: u64 [sp + 0xa8] = a2\n 47257: a2 = a2 | a1\n 47260: a1 = a0 | s1\n 47263: a1 = a1 | a2\n 47266: a1 = a1 >> 0x20\n 47269: a2 = a2 | s1\n 47272: a2 = a2 << 0x20\n 47275: a1 = a1 | a2\n 47278: jump @1772 if a1 != 0\n      : @1728 (gas: 9)\n 47282: a3 = sp + 0x300\n 47286: u64 [a3 + 112] = 0\n 47289: u64 [a3 + 104] = 0\n 47292: u64 [a3 + 96] = 0\n 47295: a2 = 0x150b7a0200000000\n 47305: a1 = sp + 0x360\n 47309: u64 [a3 + 0x78] = a2\n 47312: u64 [sp + 0xb8] = a0\n 47316: ra = 1890, jump @19\n      : @1729 [@dyn 945] (gas: 4)\n 47323: a0 = u64 [sp + 0x98]\n 47327: ra = 0x764\n 47331: ecalli 5 // 'caller'\n 47333: fallthrough\n      : @1730 [@dyn 946] (gas: 12)\n 47334: a4 = u64 [sp + 0xb8]\n 47338: u64 [sp + 0x80] = s1\n 47342: a2 = u64 [sp + 0xa8]\n 47346: a2 = a2 | s1\n 47349: s1 = 0x100000000\n 47359: a0 = 0xfffffffc\n 47369: a0 = a4 <u a0\n 47372: a1 = u64 [sp + 0xb0]\n 47376: a0 = 0 if a1 != 0\n 47378: u64 [sp + 0x98] = a2\n 47382: a0 = 0 if a2 != 0\n 47384: jump @1772 if a0 == 0\n      : @1731 (gas: 2)\n 47388: a2 = u64 [sp + 0x90]\n 47392: t0 = 1894, jump @1950\n      : @1732 [@dyn 947] (gas: 8)\n 47398: i32 a0 = a4 + 0x4\n 47401: a4 = sp + 0x300\n 47405: u64 [a4 + 88] = 0\n 47408: u64 [a4 + 0x50] = a1\n 47411: u64 [a4 + 0x48] = a2\n 47414: a1 = sp + 0x340\n 47418: u64 [a4 + 0x40] = a3\n 47421: ra = 1896, jump @19\n      : @1733 [@dyn 948] (gas: 8)\n 47428: a4 = u64 [sp + 0xb8]\n 47432: a0 = s1 + 0xffffffffffffffdc\n 47435: a0 = a4 <u a0\n 47438: a1 = u64 [sp + 0xb0]\n 47442: a0 = 0 if a1 != 0\n 47444: a1 = u64 [sp + 0x98]\n 47448: a0 = 0 if a1 != 0\n 47450: jump @1772 if a0 == 0\n      : @1734 (gas: 15)\n 47454: a1 = 0xffffffff\n 47464: a2 = u64 [sp + 0x68]\n 47467: a2 = a2 & a1\n 47470: a1 = u64 [sp + 0x70]\n 47473: a1 = a1 & 0xffffffffffffffff\n 47476: a3 = u64 [sp + 0x78]\n 47479: a3 = a3 & 0xffffffffffffffff\n 47482: i32 a0 = a4 + 0x24\n 47485: a4 = sp + 0x300\n 47489: u64 [a4 + 56] = 0\n 47492: u64 [a4 + 0x20] = a3\n 47495: u64 [a4 + 0x28] = a1\n 47498: a1 = sp + 0x320\n 47502: u64 [a4 + 0x30] = a2\n 47505: ra = 1898, jump @19\n      : @1735 [@dyn 949] (gas: 9)\n 47512: a1 = u64 [sp + 0xb8]\n 47516: s1 = 0x100000000\n 47526: a0 = 0xffffffbc\n 47536: a0 = a1 <u a0\n 47539: a2 = u64 [sp + 0xb0]\n 47543: a0 = 0 if a2 != 0\n 47545: a2 = u64 [sp + 0x98]\n 47549: a0 = 0 if a2 != 0\n 47551: jump @1772 if a0 == 0\n      : @1736 (gas: 12)\n 47555: i32 a0 = a1 + 0x44\n 47558: a1 = u64 [sp + 0x58]\n 47561: a3 = sp + 0x300\n 47565: u64 [a3] = a1\n 47567: a1 = u64 [sp + 0x50]\n 47570: u64 [a3 + 0x8] = a1\n 47573: a1 = u64 [sp + 0x48]\n 47576: u64 [a3 + 0x10] = a1\n 47579: a1 = sp + 0x300\n 47583: a2 = u64 [sp + 0x60]\n 47586: u64 [a3 + 0x18] = a2\n 47589: ra = 1900, jump @19\n      : @1737 [@dyn 950] (gas: 8)\n 47596: a2 = u64 [sp + 0xb8]\n 47600: a0 = s1 + 0xffffffffffffff9c\n 47603: a0 = a2 <u a0\n 47606: s1 = u64 [sp + 0xb0]\n 47610: a0 = 0 if s1 != 0\n 47612: a1 = u64 [sp + 0x98]\n 47616: a0 = 0 if a1 != 0\n 47618: jump @1772 if a0 == 0\n      : @1738 (gas: 8)\n 47622: i32 a0 = a2 + 0x64\n 47625: a2 = sp + 0x200\n 47629: u64 [a2 + 248] = 0\n 47633: u64 [a2 + 240] = 0\n 47637: u64 [a2 + 224] = 0x80\n 47643: a1 = sp + 0x2e0\n 47647: u64 [a2 + 232] = 0\n 47651: ra = 1902, jump @19\n      : @1739 [@dyn 951] (gas: 28)\n 47658: a1 = u64 [sp + 0xb8]\n 47662: a0 = a1 + 0x84\n 47666: a1 = a0 <u a1\n 47669: a2 = s1 + a1\n 47672: a3 = a2 <u s1\n 47675: a3 = a1 if a1 == 0\n 47678: s1 = u64 [sp + 0x80]\n 47682: a3 = a3 + s1\n 47685: a1 = a3 <u s1\n 47688: a4 = u64 [sp + 0xa8]\n 47692: a4 = a4 + a1\n 47695: a5 = sp + 0x200\n 47699: u64 [a5 + 0x88] = a2\n 47703: u64 [a5 + 0x80] = a0\n 47707: a0 = u64 [sp + 0x20]\n 47710: u64 [a5 + 0xb8] = a0\n 47714: a0 = u64 [sp + 0x28]\n 47717: u64 [a5 + 0xb0] = a0\n 47721: a0 = u64 [sp + 0x30]\n 47724: u64 [a5 + 0xa8] = a0\n 47728: a0 = u64 [sp + 0x38]\n 47731: u64 [a5 + 0xa0] = a0\n 47735: u64 [a5 + 0x90] = a3\n 47739: a0 = sp + 0x2c0\n 47743: a1 = sp + 0x2a0\n 47747: a2 = sp + 0x280\n 47751: u64 [a5 + 0x98] = a4\n 47755: ra = 1904, jump @1435\n      : @1740 [@dyn 952] (gas: 28)\n 47761: a2 = sp + 0x200\n 47765: a0 = u64 [a2 + 0xc8]\n 47769: a1 = u64 [a2 + 0xd8]\n 47773: t0 = u64 [a2 + 0xc0]\n 47777: a3 = u64 [a2 + 0xd0]\n 47781: a2 = u64 [sp + 0xb0]\n 47785: a4 = a0 ^ a2\n 47788: a5 = a0 <u a2\n 47791: t2 = a2\n 47793: t1 = u64 [sp + 0xb8]\n 47797: a2 = t0 <u t1\n 47800: a5 = a2 if a4 == 0\n 47803: a4 = a3 - s1\n 47806: a3 = a3 <u s1\n 47809: s1 = u64 [sp + 0xa8]\n 47813: a1 = a1 - s1\n 47816: a1 = a1 - a3\n 47819: a3 = a4 <u a5\n 47822: a1 = a1 - a3\n 47825: u64 [sp + 0x98] = a1\n 47829: a4 = a4 - a5\n 47832: u64 [sp + 0x78] = a4\n 47835: a0 = a0 - t2\n 47838: a0 = a0 - a2\n 47841: u64 [sp + 0x70] = a0\n 47844: s1 = t0 - t1\n 47847: ecalli 10 // 'ref_time_left'\n 47849: fallthrough\n      : @1741 (gas: 24)\n 47850: a1 = u64 [sp + 0x90]\n 47854: a0 = u64 [sp + 0x10]\n 47857: u64 [a1 + 0x8] = a0\n 47860: a0 = u64 [sp + 0x40]\n 47863: u64 [a1] = a0\n 47865: a0 = u64 [sp + 0x18]\n 47868: u32 [a1 + 0x10] = a0\n 47871: a2 = sp + 0x400\n 47875: u64 [a2 + 24] = 0\n 47878: a5 = 0\n 47880: u64 [a2 + 16] = 0\n 47883: u64 [a2 + 8] = 0\n 47886: a3 = u64 [sp + 0x78]\n 47889: a0 = s1 | a3\n 47892: a1 = u64 [sp + 0x98]\n 47896: a4 = u64 [sp + 0x70]\n 47899: a1 = a1 | a4\n 47902: a0 = a0 | a1\n 47905: a0 = a0 >> 0x20\n 47908: a1 = a1 | a3\n 47911: a1 = a1 << 0x20\n 47914: a0 = a0 | a1\n 47917: u64 [a2 + 0] = 0\n 47919: jump @1772 if a0 != 0\n      : @1742 (gas: 10)\n 47923: a2 = s1\n 47925: a0 = u64 [sp + 0xa0]\n 47929: a0 = a0 << 0x20\n 47932: a0 = a0 >> 0x20\n 47935: u64 [sp + 0x98] = a0\n 47939: s1 = u64 [sp + 0xb8]\n 47943: a0 = s1\n 47945: a1 = a2\n 47947: u64 [sp + 0x68] = a2\n 47950: ra = 1906, jump @34\n      : @1743 [@dyn 953] (gas: 4)\n 47957: u64 [sp + 0xa0] = a0\n 47961: a1 = 0x20\n 47964: a0 = s1\n 47966: ra = 1908, jump @34\n      : @1744 [@dyn 954] (gas: 35)\n 47973: a2 = sp + 0x400\n 47977: u32 [a2 + 32] = 0x20\n 47981: u64 [a2 + 88] = 0xffffffffffffffff\n 47985: u64 [a2 + 80] = 0xffffffffffffffff\n 47989: u64 [a2 + 72] = 0xffffffffffffffff\n 47993: u64 [a2 + 64] = 0xffffffffffffffff\n 47997: a1 = u64 [sp + 0x90]\n 48001: a1 = a1 << 0x20\n 48004: a1 = a1 >> 0x20\n 48007: a2 = 0x800000000\n 48017: s1 = a1 | a2\n 48020: a1 = sp + 0x400\n 48024: a1 = a1 << 0x20\n 48027: a1 = a1 >> 0x20\n 48030: a2 = sp + 0x440\n 48034: a2 = a2 << 0x20\n 48037: a3 = a2 | a1\n 48040: a1 = u64 [sp + 0xa0]\n 48044: a1 = a1 << 0x20\n 48047: a1 = a1 >> 0x20\n 48050: a4 = u64 [sp + 0x68]\n 48053: a4 = a4 << 0x20\n 48056: a4 = a4 | a1\n 48059: a0 = a0 << 0x20\n 48062: a0 = a0 >> 0x20\n 48065: a1 = sp + 0x420\n 48069: a1 = a1 << 0x20\n 48072: a5 = a1 | a0\n 48075: a1 = 0xffffffffffffffff\n 48078: a2 = 0xffffffffffffffff\n 48081: a0 = s1\n 48083: ecalli 1 // 'call'\n 48085: s1 = a0\n 48087: ecalli 12 // 'return_data_size'\n 48089: fallthrough\n      : @1745 (gas: 1)\n 48090: jump @1755 if s1 != 0\n      : @1746 (gas: 1)\n 48094: jump @1748 if a0 >u 31\n      : @1747 (gas: 6)\n 48098: ecalli 12 // 'return_data_size'\n 48100: s1 = 0\n 48102: a1 = u64 [sp + 0xb8]\n 48106: a3 = u64 [sp + 0xa8]\n 48110: a4 = u64 [sp + 0x80]\n 48114: jump @1749\n      : @1748 (gas: 6)\n 48116: s1 = 0\n 48118: a1 = u64 [sp + 0xb8]\n 48122: a3 = u64 [sp + 0xa8]\n 48126: a4 = u64 [sp + 0x80]\n 48130: a0 = 0x20\n 48133: fallthrough\n      : @1749 (gas: 13)\n 48134: u64 [sp + 0xa8] = a0\n 48138: u64 [sp + 0x120] = a0\n 48142: u64 [sp + 0x140] = a1\n 48146: u64 [sp + 296] = 0\n 48150: a1 = u64 [sp + 0xb0]\n 48154: u64 [sp + 0x148] = a1\n 48158: u64 [sp + 304] = 0\n 48162: u64 [sp + 0x150] = a4\n 48166: u64 [sp + 312] = 0\n 48170: a0 = sp + 0x140\n 48174: a1 = sp + 0x120\n 48178: u64 [sp + 0x158] = a3\n 48182: ra = 1910, jump @1521\n      : @1750 [@dyn 955] (gas: 11)\n 48188: a0 = s1 >u 0\n 48190: a1 = u64 [sp + 0xa8]\n 48194: a1 = a1 <u 0x20\n 48197: a1 = a1 ^ 0x1\n 48200: a1 = a0 if s1 != 0\n 48203: a0 = s1 >u 0\n 48205: a2 = s1 >u 0\n 48207: a2 = a0 if s1 == 0\n 48210: s1 = s1 | s1\n 48213: a2 = a1 if s1 == 0\n 48216: jump @1773 if a2 == 0\n      : @1751 (gas: 3)\n 48220: a0 = sp + 0x100\n 48224: a1 = u64 [sp + 0xb8]\n 48228: ra = 1912, jump @17\n      : @1752 [@dyn 956] (gas: 10)\n 48235: a0 = u64 [sp + 0x118]\n 48239: a2 = u64 [sp + 0x110]\n 48243: a3 = u64 [sp + 0x100]\n 48247: a1 = u64 [sp + 0x108]\n 48251: a4 = a0 << 0x20\n 48254: a4 = a4 >> 0x20\n 48257: a2 = a2 | a3\n 48260: a4 = a4 | a1\n 48263: a4 = a4 | a2\n 48266: jump @1774 if a4 != 0\n      : @1753 (gas: 5)\n 48270: a3 = 0x150b7a0200000000\n 48280: a0 = a0 ^ a3\n 48283: a0 = a0 | a1\n 48286: a0 = a0 | a2\n 48289: jump @1775 if a0 != 0\n      : @1754 (gas: 7)\n 48293: sp = s0 + 0xfffffffffffffb80\n 48297: a0 = sp + 0x400\n 48301: ra = u64 [a0 + 0x78]\n 48304: s0 = u64 [a0 + 0x70]\n 48307: s1 = u64 [a0 + 0x68]\n 48310: sp = sp + 0x480\n 48314: ret\n      : @1755 (gas: 2)\n 48316: u64 [sp + 184] = 0x60\n 48321: jump @1761 if a0 != 0\n      : @1756 (gas: 3)\n 48324: a0 = sp + 0x1a0\n 48328: a1 = u64 [sp + 0xb8]\n 48332: ra = 1914, jump @17\n      : @1757 [@dyn 957] (gas: 8)\n 48339: a1 = u64 [sp + 0x1b8]\n 48343: a0 = u64 [sp + 0x1b0]\n 48347: a2 = u64 [sp + 0x1a8]\n 48351: s1 = u64 [sp + 0x1a0]\n 48355: a1 = a1 | a2\n 48358: a2 = s1 | a0\n 48361: a2 = a2 | a1\n 48364: jump @1781 if a2 == 0\n      : @1758 (gas: 5)\n 48368: a2 = a2 >> 0x20\n 48371: a0 = a0 | a1\n 48374: a0 = a0 << 0x20\n 48377: a0 = a0 | a2\n 48380: jump @1772 if a0 != 0\n      : @1759 (gas: 4)\n 48384: a0 = u64 [sp + 0xb8]\n 48388: i32 a0 = a0 + 0x20\n 48391: a1 = s1\n 48393: ra = 1916, jump @34\n      : @1760 [@dyn 958] (gas: 5)\n 48400: i32 a1 = a0 + 0\n 48402: i32 a2 = s1 + 0\n 48404: a0 = 0x1\n 48407: ecalli 13 // 'seal_return'\n 48409: jump @1774\n      : @1761 (gas: 11)\n 48412: ecalli 12 // 'return_data_size'\n 48414: a2 = a0\n 48416: a3 = sp + 0x200\n 48420: u64 [a3 + 88] = 0\n 48423: u64 [a3 + 80] = 0\n 48426: u64 [a3 + 72] = 0\n 48429: a0 = sp + 0x260\n 48433: a1 = sp + 0x240\n 48437: u64 [sp + 0x70] = a2\n 48440: u64 [a3 + 0x40] = a2\n 48443: ra = 1918, jump @1531\n      : @1762 [@dyn 959] (gas: 12)\n 48449: a1 = sp + 0x200\n 48453: a0 = u64 [a1 + 0x60]\n 48456: u64 [sp + 0xa0] = a0\n 48460: a0 = u64 [a1 + 0x68]\n 48463: u64 [sp + 0x90] = a0\n 48467: a0 = u64 [a1 + 0x70]\n 48470: u64 [sp + 0x80] = a0\n 48474: a0 = u64 [a1 + 0x78]\n 48477: u64 [sp + 0x78] = a0\n 48480: a0 = sp + 0x220\n 48484: a1 = 0x40\n 48487: ra = 1920, jump @17\n      : @1763 [@dyn 960] (gas: 23)\n 48494: a4 = sp + 0x200\n 48498: a0 = u64 [a4 + 0x38]\n 48501: u64 [sp + 0xa8] = a0\n 48505: s1 = u64 [a4 + 0x30]\n 48508: a3 = u64 [a4 + 0x28]\n 48511: u64 [sp + 0xb0] = a3\n 48515: a2 = u64 [a4 + 0x20]\n 48518: u64 [sp + 0xb8] = a2\n 48522: a1 = u64 [sp + 0x78]\n 48525: u64 [sp + 0x1f8] = a1\n 48529: a1 = u64 [sp + 0x80]\n 48533: u64 [sp + 0x1f0] = a1\n 48537: a1 = u64 [sp + 0x90]\n 48541: u64 [sp + 0x1e8] = a1\n 48545: a1 = u64 [sp + 0xa0]\n 48549: u64 [sp + 0x1e0] = a1\n 48553: u64 [a4 + 0x18] = a0\n 48556: u64 [a4 + 0x10] = s1\n 48559: u64 [a4 + 0x8] = a3\n 48562: a0 = sp + 0x200\n 48566: a1 = sp + 0x1e0\n 48570: u64 [a4] = a2\n 48572: ra = 1922, jump @1521\n      : @1764 [@dyn 961] (gas: 12)\n 48578: a0 = u64 [sp + 0xa8]\n 48582: a1 = u64 [sp + 0xb0]\n 48586: a0 = a0 | a1\n 48589: a1 = u64 [sp + 0xb8]\n 48593: a1 = a1 | s1\n 48596: a1 = a1 | a0\n 48599: a1 = a1 >> 0x20\n 48602: u64 [sp + 0xa0] = s1\n 48606: a0 = a0 | s1\n 48609: a0 = a0 << 0x20\n 48612: a0 = a0 | a1\n 48615: jump @1772 if a0 != 0\n      : @1765 (gas: 9)\n 48619: u64 [sp + 472] = 0\n 48623: u64 [sp + 464] = 0\n 48627: u64 [sp + 456] = 0\n 48631: a1 = sp + 0x1c0\n 48635: a0 = u64 [sp + 0x70]\n 48638: u64 [sp + 0x1c0] = a0\n 48642: s1 = u64 [sp + 0xb8]\n 48646: a0 = s1\n 48648: ra = 1924, jump @19\n      : @1766 [@dyn 962] (gas: 2)\n 48655: ecalli 12 // 'return_data_size'\n 48657: fallthrough\n      : @1767 (gas: 9)\n 48658: a1 = u64 [sp + 0xa8]\n 48662: a2 = u64 [sp + 0xa0]\n 48666: a1 = a1 | a2\n 48669: a2 = 0xffffffe0\n 48679: a2 = s1 <u a2\n 48682: a3 = u64 [sp + 0xb0]\n 48686: a2 = 0 if a3 != 0\n 48688: a2 = 0 if a1 != 0\n 48690: jump @1772 if a2 == 0\n      : @1768 (gas: 3)\n 48693: s1 = a0\n 48695: a0 = a0 >> 0x20\n 48698: jump @1772 if a0 != 0\n      : @1769 (gas: 6)\n 48701: a0 = u64 [sp + 0xb8]\n 48705: i32 a0 = a0 + 0x20\n 48708: i32 a1 = s1 + 0\n 48710: u64 [sp + 0xb0] = a1\n 48714: a1 = s1\n 48716: ra = 1926, jump @34\n      : @1770 [@dyn 963] (gas: 6)\n 48723: u32 [sp + 0x460] = s1\n 48727: i32 a0 = a0 + 0\n 48729: i32 a1 = sp + 0x460\n 48733: a2 = 0\n 48735: ecalli 11 // 'return_data_copy'\n 48737: fallthrough\n      : @1771 (gas: 3)\n 48738: a0 = i32 [sp + 0x460]\n 48742: a1 = u64 [sp + 0xb0]\n 48746: jump @1756 if a0 >=u a1\n      : @1772 (gas: 1)\n 48750: trap\n      : @1773 (gas: 5)\n 48751: a1 = 0x20220\n 48756: i32 a1 = a1 + 0\n 48758: a0 = 0x1\n 48761: ecalli 13 // 'seal_return'\n 48763: fallthrough\n      : @1774 (gas: 6)\n 48764: a1 = 0x20220\n 48769: i32 a1 = a1 + 0\n 48771: a0 = 0x1\n 48774: a2 = 0\n 48776: ecalli 13 // 'seal_return'\n 48778: fallthrough\n      : @1775 (gas: 8)\n 48779: u64 [sp + 240] = 0\n 48783: u64 [sp + 232] = 0\n 48787: u64 [sp + 224] = 0\n 48791: a0 = 0x64a0ae9200000000\n 48801: a1 = sp + 0xe0\n 48805: u64 [sp + 0xf8] = a0\n 48809: a0 = 0\n 48811: ra = 1928, jump @19\n      : @1776 [@dyn 964] (gas: 10)\n 48818: u64 [sp + 216] = 0\n 48822: a0 = u64 [sp + 0x98]\n 48826: u64 [sp + 0xd0] = a0\n 48830: a0 = u64 [sp + 0x8]\n 48833: u64 [sp + 0xc8] = a0\n 48837: a0 = 0x4\n 48840: a1 = sp + 0xc0\n 48844: a2 = u64 [sp + 0x88]\n 48848: u64 [sp + 0xc0] = a2\n 48852: ra = 1930, jump @19\n      : @1777 [@dyn 965] (gas: 2)\n 48859: a1 = i32 [0x2020c]\n 48864: jump @1779 if a1 >u 63\n      : @1778 (gas: 3)\n 48868: u32 [0x2020c] = 0x40\n 48874: a1 = 0x20220\n 48879: jump @1780\n      : @1779 (gas: 2)\n 48881: a1 = 0x20220\n 48886: fallthrough\n      : @1780 (gas: 5)\n 48887: i32 a1 = a1 + 0\n 48889: a0 = 0x1\n 48892: a2 = 0x24\n 48895: ecalli 13 // 'seal_return'\n 48897: fallthrough\n      : @1781 (gas: 8)\n 48898: u64 [sp + 400] = 0\n 48902: u64 [sp + 392] = 0\n 48906: u64 [sp + 384] = 0\n 48910: a0 = 0x64a0ae9200000000\n 48920: a1 = sp + 0x180\n 48924: u64 [sp + 0x198] = a0\n 48928: a0 = 0\n 48930: ra = 1932, jump @19\n      : @1782 [@dyn 966] (gas: 10)\n 48937: u64 [sp + 376] = 0\n 48941: a0 = u64 [sp + 0x98]\n 48945: u64 [sp + 0x170] = a0\n 48949: a0 = u64 [sp + 0x8]\n 48952: u64 [sp + 0x168] = a0\n 48956: a0 = 0x4\n 48959: a1 = sp + 0x160\n 48963: a2 = u64 [sp + 0x88]\n 48967: u64 [sp + 0x160] = a2\n 48971: ra = 1934, jump @19\n      : @1783 [@dyn 967] (gas: 2)\n 48978: a1 = i32 [0x2020c]\n 48983: jump @1785 if a1 >u 63\n      : @1784 (gas: 3)\n 48987: u32 [0x2020c] = 0x40\n 48993: a1 = 0x20220\n 48998: jump @1780\n      : @1785 (gas: 2)\n 49000: a1 = 0x20220\n 49005: jump @1780\n      : @1786 [@dyn 968] (gas: 11)\n 49007: a0 = u64 [s1 + 0xa0]\n 49011: u64 [s1 + 0x2d8] = a0\n 49015: a0 = u64 [s1 + 0xa8]\n 49019: u64 [s1 + 0x2d0] = a0\n 49023: a0 = u64 [s1 + 0xb0]\n 49027: u64 [s1 + 0x2c8] = a0\n 49031: a1 = s1 + 0x2c0\n 49035: a0 = u64 [s1 + 0xb8]\n 49039: u64 [s1 + 0x2c0] = a0\n 49043: a0 = 0\n 49045: ra = 1938, jump @19\n      : @1787 [@dyn 969] (gas: 7)\n 49052: u64 [s1 + 696] = 0\n 49056: u64 [s1 + 688] = 0\n 49060: u64 [s1 + 672] = 0x6\n 49065: a0 = 0x20\n 49068: a1 = s1 + 0x2a0\n 49072: u64 [s1 + 680] = 0\n 49076: ra = 1940, jump @19\n      : @1788 [@dyn 970] (gas: 3)\n 49083: a2 = 0x2020c\n 49088: a0 = i32 [0x2020c]\n 49093: jump @1790 if a0 >u 63\n      : @1789 (gas: 2)\n 49097: u32 [0x2020c] = 0x40\n 49103: fallthrough\n      : @1790 (gas: 32)\n 49104: u64 [s1 + 0xb0] = a2\n 49108: a0 = sp + 0xffffffffffffffe0\n 49111: a2 = a0 & 0xffffffffffffffe0\n 49114: u64 [s1 + 0xb8] = a2\n 49118: sp = a2\n 49120: a0 = 0x20220\n 49125: i32 a0 = a0 + 0\n 49127: i32 a2 = a2 + 0\n 49129: a1 = 0x40\n 49132: u64 [s1 + 0xa8] = a0\n 49136: ecalli 9 // 'hash_keccak_256'\n 49138: a3 = u64 [s1 + 0xb8]\n 49142: a0 = u64 [a3 + 0x18]\n 49145: a1 = u64 [a3 + 0x10]\n 49148: a2 = u64 [a3 + 0x8]\n 49151: a3 = u64 [a3]\n 49153: a4 = reverse a0\n 49155: a1 = reverse a1\n 49157: a2 = reverse a2\n 49159: a0 = reverse a3\n 49161: u64 [s1 + 0xa0] = a0\n 49165: a3 = s1 + 0x300\n 49169: u64 [a3 + 0x38] = a0\n 49172: u64 [s1 + 0x88] = a2\n 49176: u64 [a3 + 0x30] = a2\n 49179: u64 [s1 + 0x90] = a1\n 49183: u64 [a3 + 0x28] = a1\n 49186: u64 [s1 + 0x98] = a4\n 49190: u64 [a3 + 0x20] = a4\n 49193: a0 = s1 + 0x280\n 49197: a1 = 0x40\n 49200: ra = 1942, jump @17\n      : @1791 [@dyn 971] (gas: 11)\n 49207: a0 = u64 [s1 + 0x298]\n 49211: u64 [s1 + 0x78] = a0\n 49214: a0 = u64 [s1 + 0x290]\n 49218: u64 [s1 + 0x18] = a0\n 49221: a0 = u64 [s1 + 0x288]\n 49225: u64 [s1 + 0x20] = a0\n 49228: a0 = u64 [s1 + 0x280]\n 49232: u64 [s1 + 0x28] = a0\n 49235: a0 = s1 + 0x260\n 49239: a1 = s1 + 0x320\n 49243: ra = 1944, jump @21\n      : @1792 [@dyn 972] (gas: 16)\n 49250: a4 = s1 + 0x200\n 49254: a0 = u64 [a4 + 0x78]\n 49257: a1 = u64 [a4 + 0x70]\n 49260: a2 = u64 [a4 + 0x68]\n 49263: a3 = u64 [a4 + 0x60]\n 49266: u64 [s1 + 0x80] = a0\n 49270: u64 [a4 + 0x38] = a0\n 49273: u64 [s1 + 0x50] = a1\n 49276: u64 [a4 + 0x30] = a1\n 49279: u64 [s1 + 0x48] = a2\n 49282: u64 [a4 + 0x28] = a2\n 49285: a0 = s1 + 0x240\n 49289: a1 = s1 + 0x220\n 49293: u64 [s1 + 0xb8] = a3\n 49297: u64 [a4 + 0x20] = a3\n 49300: ra = 1946, jump @1557\n      : @1793 [@dyn 973] (gas: 6)\n 49306: a0 = u64 [s1 + 0x28]\n 49309: a1 = u64 [s1 + 0x78]\n 49312: a2 = u64 [s1 + 0x20]\n 49315: a2 = a2 | a1\n 49318: a3 = u64 [s1 + 0x18]\n 49321: t0 = 1948, jump @2018\n      : @1794 [@dyn 974] (gas: 1)\n 49327: jump @1819 if a1 != 0\n      : @1795 (gas: 15)\n 49331: a5 = s1 + 0x200\n 49335: a2 = u64 [a5 + 0x58]\n 49338: a3 = u64 [a5 + 0x50]\n 49341: a1 = u64 [a5 + 0x48]\n 49344: a4 = u64 [a5 + 0x40]\n 49347: u64 [s1 + 0x58] = a4\n 49350: u64 [a5] = a4\n 49352: u64 [s1 + 0x68] = a1\n 49355: u64 [a5 + 0x8] = a1\n 49358: u64 [s1 + 0x60] = a3\n 49361: u64 [a5 + 0x10] = a3\n 49364: a1 = s1 + 0x200\n 49368: u64 [s1 + 0x70] = a2\n 49371: u64 [a5 + 0x18] = a2\n 49374: ra = 1950, jump @19\n      : @1796 [@dyn 975] (gas: 3)\n 49381: a3 = u64 [s1 + 0xb8]\n 49385: a0 = a3 & 0x1\n 49388: jump @1800 if a0 != 0\n      : @1797 (gas: 10)\n 49392: a0 = u64 [s1 + 0x18]\n 49395: a1 = u64 [s1 + 0x78]\n 49398: a0 = a0 | a1\n 49401: a1 = 0xffffffe0\n 49411: a4 = u64 [s1 + 0x28]\n 49414: a1 = a4 <u a1\n 49417: a2 = u64 [s1 + 0x20]\n 49420: a1 = 0 if a2 != 0\n 49422: a1 = 0 if a0 != 0\n 49424: jump @1819 if a1 == 0\n      : @1798 (gas: 12)\n 49428: a1 = a3 & 0xffffffffffffff00\n 49432: i32 a0 = a4 + 0x20\n 49435: a3 = u64 [s1 + 0x48]\n 49438: a2 = s1 + 0x100\n 49442: u64 [a2 + 0x88] = a3\n 49446: u64 [a2 + 0x80] = a1\n 49450: a1 = u64 [s1 + 0x50]\n 49453: u64 [a2 + 0x90] = a1\n 49457: a1 = s1 + 0x180\n 49461: a3 = u64 [s1 + 0x80]\n 49465: u64 [a2 + 0x98] = a3\n 49469: ra = 1952, jump @19\n      : @1799 [@dyn 976] (gas: 15)\n 49476: a3 = 0\n 49478: a4 = 0\n 49480: t0 = 0\n 49482: a0 = u64 [s1 + 0x60]\n 49485: a1 = u64 [s1 + 0x58]\n 49488: a0 = a0 | a1\n 49491: a1 = u64 [s1 + 0x70]\n 49494: a2 = u64 [s1 + 0x68]\n 49497: a1 = a1 | a2\n 49500: a0 = a0 | a1\n 49503: a0 = a0 >u 0\n 49505: a1 = a0 << 0x5\n 49508: a5 = u64 [s1 + 0x18]\n 49511: t2 = u64 [s1 + 0x78]\n 49514: jump @1812\n      : @1800 (gas: 12)\n 49517: a0 = u64 [s1 + 0x98]\n 49521: a2 = s1 + 0x100\n 49525: u64 [a2 + 0xe0] = a0\n 49529: a0 = u64 [s1 + 0x90]\n 49533: u64 [a2 + 0xe8] = a0\n 49537: a0 = u64 [s1 + 0x88]\n 49541: u64 [a2 + 0xf0] = a0\n 49545: a1 = s1 + 0x1e0\n 49549: a0 = u64 [s1 + 0xa0]\n 49553: u64 [a2 + 0xf8] = a0\n 49557: a0 = 0\n 49559: ra = 1954, jump @19\n      : @1801 [@dyn 977] (gas: 7)\n 49566: a0 = sp + 0xffffffffffffffe0\n 49569: a0 = a0 & 0xffffffffffffffe0\n 49572: u64 [s1 + 0x50] = a0\n 49575: sp = a0\n 49577: a2 = u64 [s1 + 0xb0]\n 49581: a0 = i32 [a2]\n 49583: jump @1803 if a0 >u 31\n      : @1802 (gas: 2)\n 49587: u32 [a2 + 0] = 0x20\n 49590: fallthrough\n      : @1803 (gas: 48)\n 49591: a0 = sp + 0xffffffffffffffe0\n 49594: a0 = a0 & 0xffffffffffffffe0\n 49597: u64 [s1 + 0xb8] = a0\n 49601: sp = a0\n 49603: i32 a2 = a0 + 0\n 49605: a1 = 0x20\n 49608: a0 = u64 [s1 + 0xa8]\n 49612: ecalli 9 // 'hash_keccak_256'\n 49614: ra = 0\n 49616: a5 = 0\n 49618: t0 = 0\n 49620: a4 = u64 [s1 + 0xb8]\n 49624: a0 = u64 [a4 + 0x18]\n 49627: a1 = u64 [s1 + 0x28]\n 49630: a2 = a1 + 0x20\n 49633: u64 [s1 + 0x48] = a2\n 49636: a1 = a2 <u a1\n 49639: a3 = u64 [s1 + 0x20]\n 49642: a2 = a3 + a1\n 49645: u64 [s1 + 0x40] = a2\n 49648: a2 = a2 <u a3\n 49651: a2 = a1 if a1 == 0\n 49654: a1 = u64 [a4 + 0x10]\n 49657: a3 = u64 [a4 + 0x8]\n 49660: t1 = u64 [a4]\n 49662: a0 = reverse a0\n 49664: a4 = reverse a1\n 49666: a3 = reverse a3\n 49668: t1 = reverse t1\n 49670: a1 = u64 [s1 + 0x50]\n 49673: u64 [s1 + 0x88] = t1\n 49677: u64 [a1 + 0x18] = t1\n 49680: u64 [s1 + 0x80] = a3\n 49684: u64 [a1 + 0x10] = a3\n 49687: u64 [s1 + 0x90] = a4\n 49691: u64 [a1 + 0x8] = a4\n 49694: a3 = a0\n 49696: u64 [a1] = a0\n 49698: a4 = u64 [s1 + 0x18]\n 49701: a0 = a4 + a2\n 49704: a2 = 0\n 49706: u64 [s1 + 0x38] = a0\n 49709: a0 = a0 <u a4\n 49712: a4 = u64 [s1 + 0x78]\n 49715: t2 = a4\n 49717: a0 = a0 + a4\n 49720: u64 [s1 + 0x30] = a0\n 49723: fallthrough\n      : @1804 (gas: 20)\n 49724: u64 [s1 + 0xb0] = a2\n 49728: u64 [s1 + 0x98] = a3\n 49732: a0 = u64 [s1 + 0x58]\n 49735: a0 = a2 <u a0\n 49738: a2 = u64 [s1 + 0x68]\n 49741: a3 = ra ^ a2\n 49744: u64 [s1 + 0xb8] = ra\n 49748: a2 = ra <u a2\n 49751: a2 = a0 if a3 == 0\n 49754: a0 = u64 [s1 + 0x60]\n 49757: t1 = a5 <u a0\n 49760: a3 = u64 [s1 + 0x70]\n 49763: a4 = t0 ^ a3\n 49766: a3 = t0 <u a3\n 49769: a3 = t1 if a4 == 0\n 49772: u64 [s1 + 0xa8] = a5\n 49776: a0 = a0 ^ a5\n 49779: a0 = a0 | a4\n 49782: a3 = a2 if a0 == 0\n 49785: jump @1811 if a3 == 0\n      : @1805 (gas: 3)\n 49789: a0 = s1 + 0x1c0\n 49793: u64 [s1 + 0xa0] = t0\n 49797: ra = 1956, jump @21\n      : @1806 [@dyn 978] (gas: 7)\n 49804: a1 = u64 [s1 + 0x48]\n 49807: a0 = u64 [s1 + 0xb0]\n 49811: a0 = a0 + a1\n 49814: a1 = a0 <u a1\n 49817: a4 = u64 [s1 + 0x40]\n 49820: a2 = u64 [s1 + 0xb8]\n 49824: t0 = 1958, jump @1984\n      : @1807 [@dyn 979] (gas: 9)\n 49830: a3 = u64 [s1 + 0x38]\n 49833: a1 = u64 [s1 + 0xa8]\n 49837: a1 = a1 + a3\n 49840: t0 = a1 <u a3\n 49843: a5 = u64 [s1 + 0x30]\n 49846: a3 = u64 [s1 + 0xa0]\n 49850: a5 = a5 + a3\n 49853: a3 = a5 + t0\n 49856: t0 = 1960, jump @1930\n      : @1808 [@dyn 980] (gas: 1)\n 49862: jump @1819 if a1 != 0\n      : @1809 (gas: 11)\n 49866: a5 = s1 + 0x100\n 49870: a2 = u64 [a5 + 0xd8]\n 49874: a1 = u64 [a5 + 0xd0]\n 49878: a3 = u64 [a5 + 0xc8]\n 49882: a4 = u64 [a5 + 0xc0]\n 49886: u64 [a5 + 0xa0] = a4\n 49890: u64 [a5 + 0xa8] = a3\n 49894: u64 [a5 + 0xb0] = a1\n 49898: a1 = s1 + 0x1a0\n 49902: u64 [a5 + 0xb8] = a2\n 49906: ra = 1962, jump @19\n      : @1810 [@dyn 981] (gas: 39)\n 49913: a5 = u64 [s1 + 0x98]\n 49917: a5 = a5 + 0x1\n 49920: a0 = a5 <u 0x1\n 49923: a3 = u64 [s1 + 0x90]\n 49927: a3 = a3 + a0\n 49930: a0 = a5 | a3\n 49933: a0 = a0 <u 0x1\n 49936: a1 = u64 [s1 + 0x80]\n 49940: a0 = a0 + a1\n 49943: a1 = a0 <u a1\n 49946: ra = u64 [s1 + 0x88]\n 49950: ra = ra + a1\n 49953: a1 = u64 [s1 + 0xb0]\n 49957: t2 = a1 + 0x20\n 49960: a2 = t2 <u a1\n 49963: a4 = u64 [s1 + 0xb8]\n 49967: t1 = a4 + a2\n 49970: a4 = t1 <u a4\n 49973: a4 = a2 if a2 == 0\n 49976: a2 = u64 [s1 + 0xa8]\n 49980: a4 = a4 + a2\n 49983: a2 = a4 <u a2\n 49986: t0 = u64 [s1 + 0xa0]\n 49990: t0 = t0 + a2\n 49993: u64 [s1 + 0x90] = a3\n 49997: a1 = u64 [s1 + 0x50]\n 50000: u64 [a1 + 0x8] = a3\n 50003: a3 = a5\n 50005: u64 [a1] = a5\n 50007: u64 [a1 + 0x10] = a0\n 50010: a2 = ra\n 50012: u64 [s1 + 0x88] = a2\n 50016: u64 [a1 + 0x18] = a2\n 50019: u64 [s1 + 0x80] = a0\n 50023: a2 = t2\n 50025: ra = t1\n 50027: a5 = a4\n 50029: t2 = u64 [s1 + 0x78]\n 50032: jump @1804\n      : @1811 (gas: 5)\n 50035: a4 = u64 [s1 + 0xa8]\n 50039: a3 = u64 [s1 + 0xb8]\n 50043: a1 = u64 [s1 + 0xb0]\n 50047: a5 = u64 [s1 + 0x18]\n 50050: fallthrough\n      : @1812 (gas: 21)\n 50051: a0 = a1 + 0x20\n 50054: a1 = a0 <u a1\n 50057: a2 = a3 + a1\n 50060: a3 = a2 <u a3\n 50063: a3 = a1 if a1 == 0\n 50066: a3 = a3 + a4\n 50069: a1 = a3 <u a4\n 50072: t0 = t0 + a1\n 50075: a1 = u64 [s1 + 0x28]\n 50078: u64 [s1 + 0x160] = a1\n 50082: u64 [s1 + 0x140] = a0\n 50086: a0 = u64 [s1 + 0x20]\n 50089: u64 [s1 + 0x168] = a0\n 50093: u64 [s1 + 0x170] = a5\n 50097: u64 [s1 + 0x148] = a2\n 50101: u64 [s1 + 0x178] = t2\n 50105: u64 [s1 + 0x150] = a3\n 50109: a0 = s1 + 0x160\n 50113: a1 = s1 + 0x140\n 50117: u64 [s1 + 0x158] = t0\n 50121: ra = 1964, jump @1521\n      : @1813 [@dyn 982] (gas: 3)\n 50127: a0 = s1 + 0x120\n 50131: a1 = 0x40\n 50134: ra = 1966, jump @17\n      : @1814 [@dyn 983] (gas: 20)\n 50141: a5 = s1 + 0x100\n 50145: a1 = u64 [a5 + 0x38]\n 50148: u64 [s1 + 0xb8] = a1\n 50152: a2 = u64 [a5 + 0x30]\n 50155: u64 [s1 + 0xb0] = a2\n 50159: a3 = u64 [a5 + 0x28]\n 50162: u64 [s1 + 0xa8] = a3\n 50166: a4 = u64 [a5 + 0x20]\n 50169: u64 [s1 + 0xa0] = a4\n 50173: u64 [s1 + 248] = 0\n 50177: u64 [s1 + 240] = 0\n 50181: u64 [s1 + 232] = 0\n 50185: u64 [s1 + 224] = 0x20\n 50190: u64 [a5 + 0x18] = a1\n 50193: u64 [a5 + 0x10] = a2\n 50196: u64 [a5 + 0x8] = a3\n 50199: a0 = s1 + 0x100\n 50203: a1 = s1 + 0xe0\n 50207: u64 [a5] = a4\n 50209: ra = 1968, jump @1521\n      : @1815 [@dyn 984] (gas: 6)\n 50215: a0 = u64 [s1 + 0xa0]\n 50219: a1 = u64 [s1 + 0xb8]\n 50223: a2 = u64 [s1 + 0xa8]\n 50227: a2 = a2 | a1\n 50230: a3 = u64 [s1 + 0xb0]\n 50234: t0 = 1970, jump @2018\n      : @1816 [@dyn 985] (gas: 1)\n 50240: jump @1819 if a1 != 0\n      : @1817 (gas: 6)\n 50243: u64 [s1 + 216] = 0\n 50247: u64 [s1 + 208] = 0\n 50251: u64 [s1 + 200] = 0\n 50255: a1 = s1 + 0xc0\n 50259: u64 [s1 + 192] = 0\n 50263: ra = 1972, jump @19\n      : @1818 [@dyn 986] (gas: 16)\n 50270: a0 = u64 [s1 + 0x10]\n 50273: a1 = u64 [s1 + 0x78]\n 50276: u64 [a0 + 0x18] = a1\n 50279: a1 = u64 [s1 + 0x18]\n 50282: u64 [a0 + 0x10] = a1\n 50285: a1 = u64 [s1 + 0x20]\n 50288: u64 [a0 + 0x8] = a1\n 50291: a1 = u64 [s1 + 0x28]\n 50294: u64 [a0] = a1\n 50296: sp = s0 + 0xfffffffffffffca0\n 50300: a0 = sp + 0x300\n 50304: ra = u64 [a0 + 0x58]\n 50307: s0 = u64 [a0 + 0x50]\n 50310: s1 = u64 [a0 + 0x48]\n 50313: sp = sp + 0x360\n 50317: ret\n      : @1819 (gas: 1)\n 50319: trap\n      : @1820 (gas: 24)\n 50320: sp = sp + 0xffffffffffffff60\n 50324: u64 [sp + 0x98] = ra\n 50328: u64 [sp + 0x90] = s0\n 50332: u64 [sp + 0x88] = s1\n 50336: s0 = sp + 0xa0\n 50340: sp = sp & 0xffffffffffffffe0\n 50343: a2 = u64 [a1 + 0x10]\n 50346: u64 [sp + 0x18] = a2\n 50349: a2 = u64 [a1]\n 50351: u64 [sp + 0x10] = a2\n 50354: a2 = u64 [a1 + 0x18]\n 50357: u64 [sp + 0x8] = a2\n 50360: s1 = u64 [a1 + 0x8]\n 50363: a1 = u64 [a0 + 0x18]\n 50366: a2 = u64 [a0 + 0x10]\n 50369: a3 = u64 [a0 + 0x8]\n 50372: a0 = u64 [a0]\n 50374: u64 [sp + 0x58] = a1\n 50377: u64 [sp + 0x50] = a2\n 50380: u64 [sp + 0x48] = a3\n 50383: u64 [sp + 0x40] = a0\n 50386: a0 = sp + 0x20\n 50389: a1 = sp + 0x40\n 50392: ra = 1974, jump @21\n      : @1821 [@dyn 987] (gas: 20)\n 50399: a0 = u64 [sp + 0x20]\n 50402: a1 = u64 [sp + 0x28]\n 50405: a2 = u64 [sp + 0x30]\n 50408: a3 = u64 [sp + 0x38]\n 50411: a0 = a0 & 0xffffffffffffff00\n 50415: a4 = u64 [sp + 0x8]\n 50418: a4 = a4 | s1\n 50421: a5 = u64 [sp + 0x18]\n 50424: s1 = u64 [sp + 0x10]\n 50427: a5 = a5 | s1\n 50430: a4 = a4 | a5\n 50433: a4 = a4 >u 0\n 50435: a0 = a0 | a4\n 50438: u64 [sp + 0x78] = a3\n 50441: u64 [sp + 0x70] = a2\n 50444: u64 [sp + 0x68] = a1\n 50447: u64 [sp + 0x60] = a0\n 50450: a0 = sp + 0x40\n 50453: a1 = sp + 0x60\n 50456: ra = 1976, jump @23\n      : @1822 [@dyn 988] (gas: 6)\n 50463: sp = s0 + 0xffffffffffffff60\n 50467: ra = u64 [sp + 0x98]\n 50471: s0 = u64 [sp + 0x90]\n 50475: s1 = u64 [sp + 0x88]\n 50479: sp = sp + 0xa0\n 50483: ret\n      : @1823 (gas: 23)\n 50485: sp = sp + 0xfffffffffffffee0\n 50489: u64 [sp + 0x118] = ra\n 50493: u64 [sp + 0x110] = s0\n 50497: u64 [sp + 0x108] = s1\n 50501: s0 = sp + 0x120\n 50505: sp = sp & 0xffffffffffffffe0\n 50508: s1 = sp\n 50510: a2 = u64 [a1]\n 50512: a3 = u64 [a1 + 0x8]\n 50515: a4 = u64 [a1 + 0x10]\n 50518: a1 = u64 [a1 + 0x18]\n 50521: u64 [s1 + 0x38] = a0\n 50524: u64 [s1 + 0x10] = a1\n 50527: u64 [s1 + 0xd8] = a1\n 50531: u64 [s1 + 0x18] = a4\n 50534: u64 [s1 + 0xd0] = a4\n 50538: u64 [s1 + 0x20] = a3\n 50541: u64 [s1 + 0xc8] = a3\n 50545: a1 = s1 + 0xc0\n 50549: u64 [s1 + 0x28] = a2\n 50552: u64 [s1 + 0xc0] = a2\n 50556: a0 = 0\n 50558: ra = 1978, jump @19\n      : @1824 [@dyn 989] (gas: 7)\n 50565: u64 [s1 + 184] = 0\n 50569: u64 [s1 + 176] = 0\n 50573: u64 [s1 + 160] = 0x2\n 50578: a0 = 0x20\n 50581: a1 = s1 + 0xa0\n 50585: u64 [s1 + 168] = 0\n 50589: ra = 1980, jump @19\n      : @1825 [@dyn 990] (gas: 3)\n 50596: a2 = 0x2020c\n 50601: a0 = i32 [0x2020c]\n 50606: jump @1827 if a0 >u 63\n      : @1826 (gas: 2)\n 50610: u32 [0x2020c] = 0x40\n 50616: fallthrough\n      : @1827 (gas: 15)\n 50617: u64 [s1 + 0x8] = a2\n 50620: a0 = sp + 0xffffffffffffffe0\n 50623: a2 = a0 & 0xffffffffffffffe0\n 50626: u64 [s1 + 0x30] = a2\n 50629: sp = a2\n 50631: a0 = 0x20220\n 50636: i32 a0 = a0 + 0\n 50638: i32 a2 = a2 + 0\n 50640: a1 = 0x40\n 50643: u64 [s1] = a0\n 50645: ra = 0x7be\n 50649: ecalli 9 // 'hash_keccak_256'\n 50651: a3 = u64 [s1 + 0x30]\n 50654: t0 = 0x7c0\n 50658: jump @1942\n      : @1828 [@dyn 991] (gas: 2)\n 50661: a3 = u64 [s1 + 0x30]\n 50664: t0 = 1984, jump @1942\n      : @1829 [@dyn 992] (gas: 7)\n 50670: u64 [s1 + 0xf8] = a3\n 50674: u64 [s1 + 0xf0] = a2\n 50678: u64 [s1 + 0xe8] = a1\n 50682: u64 [s1 + 0xe0] = a0\n 50686: a0 = s1 + 0x80\n 50690: a1 = s1 + 0xe0\n 50694: ra = 1986, jump @21\n      : @1830 [@dyn 993] (gas: 6)\n 50701: a0 = u32 [s1 + 0x90]\n 50705: a1 = u64 [s1 + 0x80]\n 50709: a2 = u64 [s1 + 0x88]\n 50713: a3 = a1 | a0\n 50716: a3 = a3 | a2\n 50719: jump @1832 if a3 == 0\n      : @1831 (gas: 11)\n 50722: a3 = u64 [s1 + 0x38]\n 50725: u64 [a3 + 24] = 0\n 50728: u64 [a3] = a1\n 50730: u64 [a3 + 0x8] = a2\n 50733: u64 [a3 + 0x10] = a0\n 50736: sp = s0 + 0xfffffffffffffee0\n 50740: ra = u64 [sp + 0x118]\n 50744: s0 = u64 [sp + 0x110]\n 50748: s1 = u64 [sp + 0x108]\n 50752: sp = sp + 0x120\n 50756: ret\n      : @1832 (gas: 8)\n 50758: u64 [s1 + 112] = 0\n 50761: u64 [s1 + 104] = 0\n 50764: u64 [s1 + 96] = 0\n 50767: a0 = 0x7e27328900000000\n 50777: a1 = s1 + 0x60\n 50780: u64 [s1 + 0x78] = a0\n 50783: a0 = 0\n 50785: ra = 1988, jump @19\n      : @1833 [@dyn 994] (gas: 11)\n 50792: a0 = u64 [s1 + 0x10]\n 50795: u64 [s1 + 0x58] = a0\n 50798: a0 = u64 [s1 + 0x18]\n 50801: u64 [s1 + 0x50] = a0\n 50804: a0 = u64 [s1 + 0x20]\n 50807: u64 [s1 + 0x48] = a0\n 50810: a0 = 0x4\n 50813: a1 = s1 + 0x40\n 50816: a2 = u64 [s1 + 0x28]\n 50819: u64 [s1 + 0x40] = a2\n 50822: ra = 1990, jump @19\n      : @1834 [@dyn 995] (gas: 3)\n 50829: a0 = u64 [s1 + 0x8]\n 50832: a0 = i32 [a0]\n 50834: jump @1836 if a0 >u 63\n      : @1835 (gas: 3)\n 50838: a1 = u64 [s1 + 0x8]\n 50841: u32 [a1 + 0] = 0x40\n 50844: fallthrough\n      : @1836 (gas: 6)\n 50845: a0 = 0x1\n 50848: a2 = 0x24\n 50851: a1 = u64 [s1]\n 50853: ra = 0x7c8\n 50857: ecalli 13 // 'seal_return'\n 50859: fallthrough\n      : @1837 [@dyn 996] (gas: 30)\n 50860: sp = sp + 0xfffffffffffffcc0\n 50864: a3 = sp + 0x300\n 50868: u64 [a3 + 0x38] = ra\n 50871: u64 [a3 + 0x30] = s0\n 50874: u64 [a3 + 0x28] = s1\n 50877: s0 = sp + 0x340\n 50881: sp = sp & 0xffffffffffffffe0\n 50884: s1 = sp\n 50886: a3 = u64 [a1 + 0x10]\n 50889: u64 [s1 + 0x40] = a3\n 50892: a3 = u64 [a1 + 0x8]\n 50895: u64 [s1 + 0x30] = a3\n 50898: a1 = u64 [a1]\n 50900: u64 [s1 + 0x38] = a1\n 50903: a3 = u64 [a2]\n 50905: a1 = u64 [a2 + 0x8]\n 50908: a4 = u64 [a2 + 0x10]\n 50911: a2 = u64 [a2 + 0x18]\n 50914: u64 [s1 + 0x10] = a0\n 50917: u64 [s1 + 0x60] = a2\n 50920: u64 [s1 + 0x298] = a2\n 50924: u64 [s1 + 0x68] = a4\n 50927: u64 [s1 + 0x290] = a4\n 50931: u64 [s1 + 0x70] = a1\n 50934: u64 [s1 + 0x288] = a1\n 50938: a1 = s1 + 0x280\n 50942: u64 [s1 + 0x78] = a3\n 50945: u64 [s1 + 0x280] = a3\n 50949: a0 = 0\n 50951: ra = 1994, jump @19\n      : @1838 [@dyn 997] (gas: 7)\n 50958: u64 [s1 + 632] = 0\n 50962: u64 [s1 + 624] = 0\n 50966: u64 [s1 + 608] = 0x2\n 50971: a0 = 0x20\n 50974: a1 = s1 + 0x260\n 50978: u64 [s1 + 616] = 0\n 50982: ra = 1996, jump @19\n      : @1839 [@dyn 998] (gas: 3)\n 50989: a2 = 0x2020c\n 50994: a0 = i32 [0x2020c]\n 50999: jump @1841 if a0 >u 63\n      : @1840 (gas: 2)\n 51003: u32 [0x2020c] = 0x40\n 51009: fallthrough\n      : @1841 (gas: 17)\n 51010: u64 [s1 + 0x28] = a2\n 51013: a0 = 0xffffffff\n 51023: u64 [s1 + 0x18] = a0\n 51026: a0 = sp + 0xffffffffffffffe0\n 51029: a2 = a0 & 0xffffffffffffffe0\n 51032: u64 [s1 + 0x58] = a2\n 51035: sp = a2\n 51037: a0 = 0x20220\n 51042: i32 a0 = a0 + 0\n 51044: i32 a2 = a2 + 0\n 51046: a1 = 0x40\n 51049: u64 [s1 + 0x20] = a0\n 51052: ra = 0x7ce\n 51056: ecalli 9 // 'hash_keccak_256'\n 51058: a3 = u64 [s1 + 0x58]\n 51061: t0 = 0x7d0\n 51065: jump @1942\n      : @1842 [@dyn 999] (gas: 2)\n 51068: a3 = u64 [s1 + 0x58]\n 51071: t0 = 2000, jump @1942\n      : @1843 [@dyn 1000] (gas: 7)\n 51077: u64 [s1 + 0x2b8] = a3\n 51081: u64 [s1 + 0x2b0] = a2\n 51085: u64 [s1 + 0x2a8] = a1\n 51089: u64 [s1 + 0x2a0] = a0\n 51093: a0 = s1 + 0x240\n 51097: a1 = s1 + 0x2a0\n 51101: ra = 2002, jump @21\n      : @1844 [@dyn 1001] (gas: 9)\n 51108: a1 = u32 [s1 + 0x250]\n 51112: a0 = u64 [s1 + 0x240]\n 51116: a2 = u64 [s1 + 0x248]\n 51120: u64 [s1 + 0x58] = a0\n 51123: u64 [s1 + 0x50] = a1\n 51126: a0 = a0 | a1\n 51129: u64 [s1 + 0x48] = a2\n 51132: a0 = a0 | a2\n 51135: jump @1855 if a0 == 0\n      : @1845 (gas: 10)\n 51139: a0 = u64 [s1 + 0x78]\n 51142: u64 [s1 + 0x220] = a0\n 51146: a0 = u64 [s1 + 0x70]\n 51149: u64 [s1 + 0x228] = a0\n 51153: a0 = u64 [s1 + 0x68]\n 51156: u64 [s1 + 0x230] = a0\n 51160: a0 = s1 + 0x220\n 51164: a1 = u64 [s1 + 0x60]\n 51167: u64 [s1 + 0x238] = a1\n 51171: ra = 2004, jump @1898\n      : @1846 [@dyn 1002] (gas: 11)\n 51177: u64 [s1 + 536] = 0\n 51181: a0 = u64 [s1 + 0x50]\n 51184: a2 = s1 + 0x200\n 51188: u64 [a2 + 0x10] = a0\n 51191: a0 = u64 [s1 + 0x48]\n 51194: u64 [a2 + 0x8] = a0\n 51197: a1 = s1 + 0x200\n 51201: a0 = u64 [s1 + 0x58]\n 51204: u64 [a2] = a0\n 51206: a0 = 0\n 51208: ra = 2006, jump @19\n      : @1847 [@dyn 1003] (gas: 7)\n 51215: u64 [s1 + 504] = 0\n 51219: u64 [s1 + 496] = 0\n 51223: u64 [s1 + 480] = 0x3\n 51228: a0 = 0x20\n 51231: a1 = s1 + 0x1e0\n 51235: u64 [s1 + 488] = 0\n 51239: ra = 2008, jump @19\n      : @1848 [@dyn 1004] (gas: 7)\n 51246: a0 = sp + 0xffffffffffffffe0\n 51249: a0 = a0 & 0xffffffffffffffe0\n 51252: u64 [s1 + 0x8] = a0\n 51255: sp = a0\n 51257: a2 = u64 [s1 + 0x28]\n 51260: a0 = i32 [a2]\n 51262: jump @1850 if a0 >u 63\n      : @1849 (gas: 2)\n 51266: u32 [a2 + 0] = 0x40\n 51269: fallthrough\n      : @1850 (gas: 12)\n 51270: a0 = sp + 0xffffffffffffffe0\n 51273: a0 = a0 & 0xffffffffffffffe0\n 51276: u64 [s1] = a0\n 51278: sp = a0\n 51280: i32 a2 = a0 + 0\n 51282: a1 = 0x40\n 51285: a0 = u64 [s1 + 0x20]\n 51288: ra = 0x7da\n 51292: ecalli 9 // 'hash_keccak_256'\n 51294: a3 = u64 [s1]\n 51296: t0 = 0x7dc\n 51300: jump @1921\n      : @1851 [@dyn 1005] (gas: 2)\n 51303: a3 = u64 [s1]\n 51305: t0 = 2012, jump @1921\n      : @1852 [@dyn 1006] (gas: 7)\n 51311: a1 = u64 [s1 + 0x8]\n 51314: u64 [a1 + 0x18] = a3\n 51317: u64 [a1 + 0x10] = a2\n 51320: u64 [a1 + 0x8] = a4\n 51323: u64 [a1] = a0\n 51325: a0 = s1 + 0x1c0\n 51329: ra = 2014, jump @21\n      : @1853 [@dyn 1007] (gas: 2)\n 51336: a4 = s1 + 0x100\n 51340: t0 = 2016, jump @1966\n      : @1854 [@dyn 1008] (gas: 8)\n 51346: a4 = s1 + 0x200\n 51350: u64 [a4 + 0xc0] = a1\n 51354: u64 [a4 + 0xc8] = a0\n 51358: u64 [a4 + 0xd0] = a2\n 51362: u64 [a4 + 0xd8] = a3\n 51366: a1 = s1 + 0x2c0\n 51370: a0 = u64 [s1 + 0x8]\n 51373: ra = 2018, jump @23\n      : @1855 [@dyn 1009] (gas: 13)\n 51380: a0 = u64 [s1 + 0x30]\n 51383: a1 = a0 & 0xffffffffffffffff\n 51386: a0 = u64 [s1 + 0x38]\n 51389: a0 = a0 & 0xffffffffffffffff\n 51392: a2 = u64 [s1 + 0x40]\n 51395: a3 = u64 [s1 + 0x18]\n 51398: a2 = a2 & a3\n 51401: u64 [s1 + 0x40] = a0\n 51404: u64 [s1 + 0x30] = a2\n 51407: a0 = a0 | a2\n 51410: u64 [s1 + 0x38] = a1\n 51413: a0 = a0 | a1\n 51416: jump @1865 if a0 == 0\n      : @1856 (gas: 10)\n 51420: u64 [s1 + 440] = 0\n 51424: a0 = u64 [s1 + 0x40]\n 51427: u64 [s1 + 0x1a0] = a0\n 51431: a0 = u64 [s1 + 0x38]\n 51434: u64 [s1 + 0x1a8] = a0\n 51438: a1 = s1 + 0x1a0\n 51442: a0 = u64 [s1 + 0x30]\n 51445: u64 [s1 + 0x1b0] = a0\n 51449: a0 = 0\n 51451: ra = 2020, jump @19\n      : @1857 [@dyn 1010] (gas: 7)\n 51458: u64 [s1 + 408] = 0\n 51462: u64 [s1 + 400] = 0\n 51466: u64 [s1 + 384] = 0x3\n 51471: a0 = 0x20\n 51474: a1 = s1 + 0x180\n 51478: u64 [s1 + 392] = 0\n 51482: ra = 2022, jump @19\n      : @1858 [@dyn 1011] (gas: 7)\n 51489: a0 = sp + 0xffffffffffffffe0\n 51492: a0 = a0 & 0xffffffffffffffe0\n 51495: u64 [s1 + 0x18] = a0\n 51498: sp = a0\n 51500: a2 = u64 [s1 + 0x28]\n 51503: a0 = i32 [a2]\n 51505: jump @1860 if a0 >u 63\n      : @1859 (gas: 2)\n 51509: u32 [a2 + 0] = 0x40\n 51512: fallthrough\n      : @1860 (gas: 12)\n 51513: a0 = sp + 0xffffffffffffffe0\n 51516: a0 = a0 & 0xffffffffffffffe0\n 51519: u64 [s1 + 0x8] = a0\n 51522: sp = a0\n 51524: i32 a2 = a0 + 0\n 51526: a1 = 0x40\n 51529: a0 = u64 [s1 + 0x20]\n 51532: ra = 0x7e8\n 51536: ecalli 9 // 'hash_keccak_256'\n 51538: a3 = u64 [s1 + 0x8]\n 51541: t0 = 0x7ea\n 51545: jump @1961\n      : @1861 [@dyn 1012] (gas: 2)\n 51548: a3 = u64 [s1 + 0x8]\n 51551: t0 = 2026, jump @1961\n      : @1862 [@dyn 1013] (gas: 2)\n 51557: a0 = s1 + 0x160\n 51561: ra = 2028, jump @21\n      : @1863 [@dyn 1014] (gas: 6)\n 51568: a4 = s1 + 0x100\n 51572: a0 = u64 [a4 + 0x60]\n 51575: a1 = u64 [a4 + 0x78]\n 51578: a2 = u64 [a4 + 0x68]\n 51581: a3 = u64 [a4 + 0x70]\n 51584: t0 = 2030, jump @1982\n      : @1864 [@dyn 1015] (gas: 8)\n 51590: a3 = s1 + 0x200\n 51594: u64 [a3 + 0xe0] = a0\n 51598: u64 [a3 + 0xe8] = a2\n 51602: u64 [a3 + 0xf0] = a4\n 51606: u64 [a3 + 0xf8] = a1\n 51610: a1 = s1 + 0x2e0\n 51614: a0 = u64 [s1 + 0x18]\n 51617: ra = 2032, jump @23\n      : @1865 [@dyn 1016] (gas: 11)\n 51624: a0 = u64 [s1 + 0x78]\n 51627: u64 [s1 + 0x140] = a0\n 51631: a0 = u64 [s1 + 0x70]\n 51634: u64 [s1 + 0x148] = a0\n 51638: a0 = u64 [s1 + 0x68]\n 51641: u64 [s1 + 0x150] = a0\n 51645: a1 = s1 + 0x140\n 51649: a0 = u64 [s1 + 0x60]\n 51652: u64 [s1 + 0x158] = a0\n 51656: a0 = 0\n 51658: ra = 2034, jump @19\n      : @1866 [@dyn 1017] (gas: 7)\n 51665: u64 [s1 + 312] = 0\n 51669: u64 [s1 + 304] = 0\n 51673: u64 [s1 + 288] = 0x2\n 51678: a0 = 0x20\n 51681: a1 = s1 + 0x120\n 51685: u64 [s1 + 296] = 0\n 51689: ra = 2036, jump @19\n      : @1867 [@dyn 1018] (gas: 7)\n 51696: a0 = sp + 0xffffffffffffffe0\n 51699: a0 = a0 & 0xffffffffffffffe0\n 51702: u64 [s1 + 0x18] = a0\n 51705: sp = a0\n 51707: a2 = u64 [s1 + 0x28]\n 51710: a0 = i32 [a2]\n 51712: jump @1869 if a0 >u 63\n      : @1868 (gas: 2)\n 51716: u32 [a2 + 0] = 0x40\n 51719: fallthrough\n      : @1869 (gas: 12)\n 51720: a0 = sp + 0xffffffffffffffe0\n 51723: a0 = a0 & 0xffffffffffffffe0\n 51726: u64 [s1 + 0x28] = a0\n 51729: sp = a0\n 51731: i32 a2 = a0 + 0\n 51733: a1 = 0x40\n 51736: a0 = u64 [s1 + 0x20]\n 51739: ra = 0x7f6\n 51743: ecalli 9 // 'hash_keccak_256'\n 51745: a3 = u64 [s1 + 0x28]\n 51748: t0 = 0x7f8\n 51752: jump @1961\n      : @1870 [@dyn 1019] (gas: 2)\n 51755: a3 = u64 [s1 + 0x28]\n 51758: t0 = 2040, jump @1961\n      : @1871 [@dyn 1020] (gas: 2)\n 51764: a0 = s1 + 0x100\n 51768: ra = 2042, jump @21\n      : @1872 [@dyn 1021] (gas: 15)\n 51775: a0 = u32 [s1 + 0x114]\n 51779: a0 = a0 << 0x20\n 51782: a1 = u64 [s1 + 0x118]\n 51786: a2 = u64 [s1 + 0x30]\n 51789: a0 = a0 | a2\n 51792: a2 = u64 [s1 + 0x38]\n 51795: a3 = s1 + 0x300\n 51799: u64 [a3 + 0x8] = a2\n 51802: a2 = u64 [s1 + 0x40]\n 51805: u64 [a3] = a2\n 51807: u64 [a3 + 0x18] = a1\n 51810: u64 [a3 + 0x10] = a0\n 51813: a1 = s1 + 0x300\n 51817: a0 = u64 [s1 + 0x18]\n 51820: ra = 2044, jump @23\n      : @1873 [@dyn 1022] (gas: 37)\n 51827: a0 = u64 [s1 + 0x60]\n 51830: u64 [s1 + 0x98] = a0\n 51834: a0 = u64 [s1 + 0x68]\n 51837: u64 [s1 + 0x90] = a0\n 51841: a0 = u64 [s1 + 0x70]\n 51844: u64 [s1 + 0x88] = a0\n 51848: a0 = u64 [s1 + 0x78]\n 51851: u64 [s1 + 0x80] = a0\n 51855: u64 [s1 + 184] = 0\n 51859: a0 = u64 [s1 + 0x30]\n 51862: u64 [s1 + 0xb0] = a0\n 51866: a0 = u64 [s1 + 0x38]\n 51869: u64 [s1 + 0xa8] = a0\n 51873: a0 = u64 [s1 + 0x40]\n 51876: u64 [s1 + 0xa0] = a0\n 51880: u64 [s1 + 216] = 0\n 51884: a0 = u64 [s1 + 0x50]\n 51887: u64 [s1 + 0xd0] = a0\n 51891: a0 = u64 [s1 + 0x48]\n 51894: u64 [s1 + 0xc8] = a0\n 51898: a0 = u64 [0x201e8]\n 51903: a1 = u64 [0x201f0]\n 51908: a2 = u64 [0x201f8]\n 51913: a3 = u64 [s1 + 0x58]\n 51916: u64 [s1 + 0xc0] = a3\n 51920: u64 [s1 + 0xf8] = a0\n 51924: u64 [s1 + 0xf0] = a1\n 51928: u64 [s1 + 0xe8] = a2\n 51932: a0 = u64 [0x20200]\n 51937: a2 = s1 + 0xe0\n 51941: a3 = s1 + 0xc0\n 51945: a4 = s1 + 0xa0\n 51949: a5 = s1 + 0x80\n 51953: u64 [s1 + 0xe0] = a0\n 51957: a0 = 0\n 51959: a1 = 0\n 51961: ra = 2046, jump @31\n      : @1874 [@dyn 1023] (gas: 15)\n 51968: a0 = u64 [s1 + 0x10]\n 51971: u64 [a0 + 24] = 0\n 51974: a1 = u64 [s1 + 0x50]\n 51977: u64 [a0 + 0x10] = a1\n 51980: a1 = u64 [s1 + 0x48]\n 51983: u64 [a0 + 0x8] = a1\n 51986: a1 = u64 [s1 + 0x58]\n 51989: u64 [a0] = a1\n 51991: sp = s0 + 0xfffffffffffffcc0\n 51995: a0 = sp + 0x300\n 51999: ra = u64 [a0 + 0x38]\n 52002: s0 = u64 [a0 + 0x30]\n 52005: s1 = u64 [a0 + 0x28]\n 52008: sp = sp + 0x340\n 52012: ret\n      : @1875 (gas: 14)\n 52014: sp = sp + 0xfffffffffffffe30\n 52018: u64 [sp + 0x1c8] = ra\n 52022: u64 [sp + 0x1c0] = s0\n 52026: u64 [sp + 0x1b8] = s1\n 52030: s0 = sp + 0x1d0\n 52034: sp = sp & 0xfffffffffffffff0\n 52037: t0 = u64 [a1 + 0x10]\n 52040: t2 = u64 [a1 + 0x8]\n 52043: a5 = u64 [a1]\n 52045: a3 = t0 << 0x20\n 52048: a3 = a3 >> 0x20\n 52051: a4 = a5 | t2\n 52054: a3 = a3 | a4\n 52057: jump @1880 if a3 == 0\n      : @1876 (gas: 27)\n 52061: s1 = u64 [a2 + 0x18]\n 52064: a3 = u64 [a2 + 0x10]\n 52067: a4 = u64 [a2 + 0x8]\n 52070: a2 = u64 [a2]\n 52072: t1 = u64 [a1 + 0x18]\n 52075: a1 = u64 [a0 + 0x10]\n 52078: u64 [sp + 0x48] = a1\n 52081: a1 = u64 [a0 + 0x8]\n 52084: u64 [sp + 0x38] = a1\n 52087: a0 = u64 [a0]\n 52089: u64 [sp + 0x40] = a0\n 52092: u64 [sp + 0x30] = a2\n 52095: u64 [sp + 0x150] = a2\n 52099: u64 [sp + 0x170] = a5\n 52103: u64 [sp + 0x28] = a4\n 52106: u64 [sp + 0x158] = a4\n 52110: u64 [sp + 0x178] = t2\n 52114: u64 [sp + 0x20] = a3\n 52117: u64 [sp + 0x160] = a3\n 52121: u64 [sp + 0x180] = t0\n 52125: u64 [sp + 0x18] = s1\n 52128: u64 [sp + 0x168] = s1\n 52132: a0 = sp + 0x190\n 52136: a1 = sp + 0x170\n 52140: a2 = sp + 0x150\n 52144: u64 [sp + 0x188] = t1\n 52148: ra = 2048, jump @1837\n      : @1877 [@dyn 1024] (gas: 8)\n 52154: a5 = u64 [sp + 0x1a8]\n 52158: a4 = u64 [sp + 0x1a0]\n 52162: a3 = u64 [sp + 0x198]\n 52166: a2 = u64 [sp + 0x190]\n 52170: a0 = a3 | a5\n 52173: a1 = a2 | a4\n 52176: a0 = a0 | a1\n 52179: jump @1885 if a0 == 0\n      : @1878 (gas: 14)\n 52183: a1 = 0xffffffff\n 52193: s1 = u64 [sp + 0x38]\n 52196: t0 = s1 & 0xffffffffffffffff\n 52199: s1 = u64 [sp + 0x48]\n 52202: t1 = s1 & a1\n 52205: s1 = u64 [sp + 0x40]\n 52208: s1 = s1 & 0xffffffffffffffff\n 52211: a0 = a2 ^ s1\n 52214: a1 = a4 ^ t1\n 52217: a0 = a0 | a1\n 52220: a1 = a3 ^ t0\n 52223: a1 = a1 | a5\n 52226: a0 = a0 | a1\n 52229: jump @1891 if a0 != 0\n      : @1879 (gas: 6)\n 52233: sp = s0 + 0xfffffffffffffe30\n 52237: ra = u64 [sp + 0x1c8]\n 52241: s0 = u64 [sp + 0x1c0]\n 52245: s1 = u64 [sp + 0x1b8]\n 52249: sp = sp + 0x1d0\n 52253: ret\n      : @1880 (gas: 8)\n 52255: u64 [sp + 128] = 0\n 52259: u64 [sp + 120] = 0\n 52262: u64 [sp + 112] = 0\n 52265: a0 = 0x64a0ae9200000000\n 52275: a1 = sp + 0x70\n 52278: u64 [sp + 0x88] = a0\n 52282: a0 = 0\n 52284: ra = 2050, jump @19\n      : @1881 [@dyn 1025] (gas: 7)\n 52291: u64 [sp + 104] = 0\n 52294: u64 [sp + 96] = 0\n 52297: u64 [sp + 88] = 0\n 52300: a0 = 0x4\n 52303: a1 = sp + 0x50\n 52306: u64 [sp + 80] = 0\n 52309: ra = 2052, jump @19\n      : @1882 [@dyn 1026] (gas: 2)\n 52316: a1 = i32 [0x2020c]\n 52321: jump @1884 if a1 >u 63\n      : @1883 (gas: 3)\n 52325: u32 [0x2020c] = 0x40\n 52331: a1 = 0x20220\n 52336: jump @1890\n      : @1884 (gas: 2)\n 52338: a1 = 0x20220\n 52343: jump @1890\n      : @1885 (gas: 8)\n 52345: u64 [sp + 192] = 0\n 52349: u64 [sp + 184] = 0\n 52353: u64 [sp + 176] = 0\n 52357: a0 = 0x7e27328900000000\n 52367: a1 = sp + 0xb0\n 52371: u64 [sp + 0xc8] = a0\n 52375: a0 = 0\n 52377: ra = 2054, jump @19\n      : @1886 [@dyn 1027] (gas: 11)\n 52384: a0 = u64 [sp + 0x18]\n 52387: u64 [sp + 0xa8] = a0\n 52391: a0 = u64 [sp + 0x20]\n 52394: u64 [sp + 0xa0] = a0\n 52398: a0 = u64 [sp + 0x28]\n 52401: u64 [sp + 0x98] = a0\n 52405: a0 = 0x4\n 52408: a1 = sp + 0x90\n 52412: a2 = u64 [sp + 0x30]\n 52415: u64 [sp + 0x90] = a2\n 52419: ra = 2056, jump @19\n      : @1887 [@dyn 1028] (gas: 2)\n 52426: a1 = i32 [0x2020c]\n 52431: jump @1889 if a1 >u 63\n      : @1888 (gas: 3)\n 52435: u32 [0x2020c] = 0x40\n 52441: a1 = 0x20220\n 52446: jump @1890\n      : @1889 (gas: 2)\n 52448: a1 = 0x20220\n 52453: fallthrough\n      : @1890 (gas: 5)\n 52454: i32 a1 = a1 + 0\n 52456: a0 = 0x1\n 52459: a2 = 0x24\n 52462: ecalli 13 // 'seal_return'\n 52464: fallthrough\n      : @1891 (gas: 15)\n 52465: u64 [sp + 320] = 0\n 52469: u64 [sp + 312] = 0\n 52473: u64 [sp + 304] = 0\n 52477: a0 = 0x64283d7b00000000\n 52487: a1 = sp + 0x130\n 52491: u64 [sp + 0x148] = a0\n 52495: a0 = 0\n 52497: u64 [sp + 0x48] = a2\n 52500: u64 [sp + 0x40] = a3\n 52503: u64 [sp + 0x38] = a4\n 52506: u64 [sp + 0x10] = a5\n 52509: u64 [sp + 0x8] = s1\n 52512: u64 [sp] = t0\n 52514: s1 = t1\n 52516: ra = 2058, jump @19\n      : @1892 [@dyn 1029] (gas: 9)\n 52523: u64 [sp + 296] = 0\n 52527: u64 [sp + 0x120] = s1\n 52531: a0 = u64 [sp]\n 52533: u64 [sp + 0x118] = a0\n 52537: a0 = 0x4\n 52540: a1 = sp + 0x110\n 52544: a2 = u64 [sp + 0x8]\n 52547: u64 [sp + 0x110] = a2\n 52551: ra = 2060, jump @19\n      : @1893 [@dyn 1030] (gas: 11)\n 52558: a0 = u64 [sp + 0x18]\n 52561: u64 [sp + 0x108] = a0\n 52565: a0 = u64 [sp + 0x20]\n 52568: u64 [sp + 0x100] = a0\n 52572: a0 = u64 [sp + 0x28]\n 52575: u64 [sp + 0xf8] = a0\n 52579: a0 = 0x24\n 52582: a1 = sp + 0xf0\n 52586: a2 = u64 [sp + 0x30]\n 52589: u64 [sp + 0xf0] = a2\n 52593: ra = 2062, jump @19\n      : @1894 [@dyn 1031] (gas: 11)\n 52600: a0 = u64 [sp + 0x10]\n 52603: u64 [sp + 0xe8] = a0\n 52607: a0 = u64 [sp + 0x38]\n 52610: u64 [sp + 0xe0] = a0\n 52614: a0 = u64 [sp + 0x40]\n 52617: u64 [sp + 0xd8] = a0\n 52621: a0 = 0x44\n 52624: a1 = sp + 0xd0\n 52628: a2 = u64 [sp + 0x48]\n 52631: u64 [sp + 0xd0] = a2\n 52635: ra = 2064, jump @19\n      : @1895 [@dyn 1032] (gas: 2)\n 52642: a1 = i32 [0x2020c]\n 52647: jump @1897 if a1 >u 127\n      : @1896 (gas: 2)\n 52651: u32 [0x2020c] = 0x80\n 52658: fallthrough\n      : @1897 (gas: 7)\n 52659: a1 = 0x20220\n 52664: i32 a1 = a1 + 0\n 52666: a0 = 0x1\n 52669: a2 = 0x64\n 52672: ra = 0x812\n 52676: ecalli 13 // 'seal_return'\n 52678: fallthrough\n      : @1898 [@dyn 1033] (gas: 18)\n 52679: sp = sp + 0xffffffffffffff20\n 52683: u64 [sp + 0xd8] = ra\n 52687: u64 [sp + 0xd0] = s0\n 52691: u64 [sp + 0xc8] = s1\n 52695: s0 = sp + 0xe0\n 52699: sp = sp & 0xffffffffffffffe0\n 52702: s1 = sp\n 52704: a2 = u64 [a0]\n 52706: a1 = u64 [a0 + 0x8]\n 52709: a3 = u64 [a0 + 0x10]\n 52712: a0 = u64 [a0 + 0x18]\n 52715: u64 [s1 + 0x78] = a0\n 52718: u64 [s1 + 0x70] = a3\n 52721: u64 [s1 + 0x68] = a1\n 52724: a1 = s1 + 0x60\n 52727: u64 [s1 + 0x60] = a2\n 52730: a0 = 0\n 52732: ra = 2068, jump @19\n      : @1899 [@dyn 1034] (gas: 7)\n 52739: u64 [s1 + 88] = 0\n 52742: u64 [s1 + 80] = 0\n 52745: u64 [s1 + 64] = 0x4\n 52749: a0 = 0x20\n 52752: a1 = s1 + 0x40\n 52755: u64 [s1 + 72] = 0\n 52758: ra = 2070, jump @19\n      : @1900 [@dyn 1035] (gas: 2)\n 52765: a1 = i32 [0x2020c]\n 52770: jump @1902 if a1 >u 63\n      : @1901 (gas: 2)\n 52774: u32 [0x2020c] = 0x40\n 52780: fallthrough\n      : @1902 (gas: 13)\n 52781: a0 = sp + 0xffffffffffffffe0\n 52784: a2 = a0 & 0xffffffffffffffe0\n 52787: u64 [s1 + 0x18] = a2\n 52790: sp = a2\n 52792: a0 = 0x20220\n 52797: i32 a0 = a0 + 0\n 52799: i32 a2 = a2 + 0\n 52801: a1 = 0x40\n 52804: ra = 0x818\n 52808: ecalli 9 // 'hash_keccak_256'\n 52810: a3 = u64 [s1 + 0x18]\n 52813: t0 = 0x81a\n 52817: jump @1942\n      : @1903 [@dyn 1036] (gas: 2)\n 52820: a3 = u64 [s1 + 0x18]\n 52823: t0 = 2074, jump @1942\n      : @1904 [@dyn 1037] (gas: 7)\n 52829: u64 [s1 + 0x98] = a3\n 52833: u64 [s1 + 0x90] = a2\n 52837: u64 [s1 + 0x88] = a1\n 52841: u64 [s1 + 0x80] = a0\n 52845: a0 = s1 + 0x20\n 52848: a1 = s1 + 0x80\n 52852: ra = 2076, jump @21\n      : @1905 [@dyn 1038] (gas: 10)\n 52859: a0 = u32 [s1 + 0x34]\n 52862: a1 = u64 [s1 + 0x38]\n 52865: a0 = a0 << 0x20\n 52868: u64 [s1 + 168] = 0\n 52872: u64 [s1 + 160] = 0\n 52876: u64 [s1 + 0xb8] = a1\n 52880: u64 [s1 + 0xb0] = a0\n 52884: a0 = s1 + 0x80\n 52888: a1 = s1 + 0xa0\n 52892: ra = 2078, jump @23\n      : @1906 [@dyn 1039] (gas: 6)\n 52899: sp = s0 + 0xffffffffffffff20\n 52903: ra = u64 [sp + 0xd8]\n 52907: s0 = u64 [sp + 0xd0]\n 52911: s1 = u64 [sp + 0xc8]\n 52915: sp = sp + 0xe0\n 52919: ret\n      : @1907 [export #0: 'call'] (gas: 2)\n 52921: a0 = 0\n 52923: ra = 2080, jump @40\n      : @1908 [@dyn 1040] [export #1: 'deploy'] (gas: 2)\n 52930: a0 = 0x1\n 52933: ra = 2082, jump @40\n      : @1909 [@dyn 1041] (gas: 7)\n 52940: a1 = u64 [a2 + 0x58]\n 52943: a0 = a1 <u a0\n 52946: a1 = u64 [a2 + 0x50]\n 52949: a0 = 0 if a1 != 0\n 52951: a1 = u64 [a2 + 0x48]\n 52954: a0 = 0 if a1 != 0\n 52956: jump [t0]\n      : @1910 (gas: 14)\n 52958: a3 = s1 + 0x100\n 52962: a0 = u64 [a3 + 0x48]\n 52965: a2 = u64 [a3 + 0x40]\n 52968: a2 = a2 | a0\n 52971: a0 = 0x100000000\n 52981: u64 [a3 + 0x40] = a0\n 52984: a0 = 0xfffffffc\n 52994: a1 = u64 [a3 + 0x58]\n 52997: a0 = a1 <u a0\n 53000: a1 = u64 [a3 + 0x50]\n 53003: a0 = 0 if a1 != 0\n 53005: u64 [a3 + 0x48] = a2\n 53008: a0 = 0 if a2 != 0\n 53010: jump [t0]\n      : @1911 (gas: 21)\n 53012: a0 = u64 [a2 + 0x8]\n 53015: a1 = u64 [a2]\n 53017: a2 = i32 [a2 + 0x10]\n 53020: a0 = reverse a0\n 53022: a3 = a0 >> 0x20\n 53025: a1 = reverse a1\n 53027: a4 = a1 << 0x20\n 53030: a3 = a3 | a4\n 53033: u64 [s1 + 0x120] = a3\n 53037: a0 = a0 << 0x20\n 53040: a2 = reverse a2\n 53042: a2 = a2 >> 0x20\n 53045: a0 = a0 | a2\n 53048: u64 [s1 + 0x118] = a0\n 53052: a1 = a1 >> 0x20\n 53055: u64 [s1 + 0x110] = a1\n 53059: a0 = sp + 0xffffffffffffffe0\n 53062: a2 = a0 & 0xffffffffffffffe0\n 53065: u64 [s1 + 0x108] = a2\n 53069: sp = a2\n 53071: jump [t0]\n      : @1912 (gas: 17)\n 53073: a0 = u64 [a3]\n 53075: a1 = u64 [a3 + 0x8]\n 53078: a2 = u64 [a3 + 0x10]\n 53081: a3 = u64 [a3 + 0x18]\n 53084: a0 = reverse a0\n 53086: a1 = reverse a1\n 53088: a2 = reverse a2\n 53090: a3 = reverse a3\n 53092: a4 = a3 + 0x2\n 53095: a3 = a4 <u a3\n 53098: a5 = a2 + a3\n 53101: a2 = a5 <u a2\n 53104: a2 = a3 if a3 == 0\n 53107: a2 = a2 + a1\n 53110: a1 = a2 <u a1\n 53113: a0 = a0 + a1\n 53116: jump [t0]\n      : @1913 (gas: 14)\n 53118: a0 = u64 [a2 + 0x8]\n 53121: a1 = u64 [a2]\n 53123: a2 = i32 [a2 + 0x10]\n 53126: a0 = reverse a0\n 53128: a3 = a0 >> 0x20\n 53131: a1 = reverse a1\n 53133: a4 = a1 << 0x20\n 53136: a3 = a3 | a4\n 53139: a0 = a0 << 0x20\n 53142: a2 = reverse a2\n 53144: a2 = a2 >> 0x20\n 53147: a0 = a0 | a2\n 53150: a1 = a1 >> 0x20\n 53153: jump [t0]\n      : @1914 (gas: 14)\n 53155: a0 = u64 [a2 + 0x8]\n 53158: a1 = i32 [a2 + 0x10]\n 53161: a2 = u64 [a2]\n 53163: a0 = reverse a0\n 53165: a3 = a0 << 0x20\n 53168: a1 = reverse a1\n 53170: a1 = a1 >> 0x20\n 53173: a3 = a3 | a1\n 53176: a0 = a0 >> 0x20\n 53179: a1 = reverse a2\n 53181: a2 = a1 << 0x20\n 53184: a0 = a0 | a2\n 53187: a1 = a1 >> 0x20\n 53190: jump [t0]\n      : @1915 (gas: 17)\n 53192: a0 = u64 [a3]\n 53194: a1 = u64 [a3 + 0x8]\n 53197: a2 = u64 [a3 + 0x10]\n 53200: a3 = u64 [a3 + 0x18]\n 53203: a0 = reverse a0\n 53205: a1 = reverse a1\n 53207: a2 = reverse a2\n 53209: a3 = reverse a3\n 53211: a3 = a3 + 0x1\n 53214: a4 = a3 <u 0x1\n 53217: a2 = a2 + a4\n 53220: a4 = a3 | a2\n 53223: a4 = a4 <u 0x1\n 53226: a4 = a4 + a1\n 53229: a1 = a4 <u a1\n 53232: a0 = a0 + a1\n 53235: jump [t0]\n      : @1916 (gas: 13)\n 53237: a5 = s1 + 0x100\n 53241: u64 [a5 + 0x50] = a2\n 53244: u64 [a5 + 0x48] = a3\n 53247: a0 = a2 | a3\n 53250: u64 [a5 + 0x58] = a1\n 53253: a1 = a1 | a4\n 53256: a1 = a1 | a0\n 53259: a1 = a1 >> 0x20\n 53262: u64 [a5 + 0x40] = a4\n 53265: a0 = a0 | a4\n 53268: a0 = a0 << 0x20\n 53271: a0 = a0 | a1\n 53274: jump [t0]\n      : @1917 (gas: 13)\n 53276: a1 = a0 <u a1\n 53279: a3 = u64 [s1 + 0xd0]\n 53283: a2 = a3 + a1\n 53286: a3 = a2 <u a3\n 53289: a3 = a1 if a1 == 0\n 53292: a1 = u64 [s1 + 0x110]\n 53296: a3 = a3 + a1\n 53299: a1 = a3 <u a1\n 53302: a4 = u64 [s1 + 0x108]\n 53306: a1 = a1 + a4\n 53309: a4 = s1 + 0x30d8\n 53313: a5 = a4 + 0x300\n 53317: jump [t0]\n      : @1918 (gas: 13)\n 53319: a1 = a0 <u a1\n 53322: a3 = u64 [s1 + 0xc0]\n 53326: a2 = a3 + a1\n 53329: a3 = a2 <u a3\n 53332: a3 = a1 if a1 == 0\n 53335: a1 = u64 [s1 + 0x110]\n 53339: a3 = a3 + a1\n 53342: a1 = a3 <u a1\n 53345: a4 = u64 [s1 + 0x108]\n 53349: a1 = a1 + a4\n 53352: a4 = s1 + 0x30d8\n 53356: a5 = a4 + 0x400\n 53360: jump [t0]\n      : @1919 (gas: 7)\n 53362: a1 = u64 [s1 + 0x120]\n 53366: a0 = a1 <u a0\n 53369: a1 = u64 [s1 + 0x118]\n 53373: a0 = 0 if a1 != 0\n 53375: a1 = u64 [s1 + 0x98]\n 53379: a0 = 0 if a1 != 0\n 53381: jump [t0]\n      : @1920 (gas: 24)\n 53383: t1 = u64 [s1 + 0x120]\n 53387: t1 = t1 + 0x1\n 53390: a0 = t1 <u 0x1\n 53393: t2 = u64 [s1 + 0x128]\n 53397: t2 = t2 + a0\n 53400: a0 = t1 | t2\n 53403: a0 = a0 <u 0x1\n 53406: a5 = s1 + 0x100\n 53410: a1 = u64 [a5 + 0x18]\n 53413: a0 = a0 + a1\n 53416: a1 = a0 <u a1\n 53419: ra = u64 [s1 + 0x130]\n 53423: ra = ra + a1\n 53426: a2 = u64 [a5 + 0x58]\n 53429: a1 = a2 + 0x20\n 53432: a2 = a1 <u a2\n 53435: a4 = u64 [a5 + 0x48]\n 53438: a3 = a4 + a2\n 53441: a4 = a3 <u a4\n 53444: a4 = a2 if a2 == 0\n 53447: a2 = u64 [a5 + 0x40]\n 53450: a4 = a4 + a2\n 53453: a2 = a4 <u a2\n 53456: jump [t0]\n      : @1921 (gas: 9)\n 53458: a0 = u64 [a3 + 0x18]\n 53461: a1 = u64 [a3 + 0x10]\n 53464: a2 = u64 [a3 + 0x8]\n 53467: a3 = u64 [a3]\n 53469: a0 = reverse a0\n 53471: a4 = reverse a1\n 53473: a2 = reverse a2\n 53475: a3 = reverse a3\n 53477: jump [t0]\n      : @1922 (gas: 8)\n 53479: u64 [sp + 48] = 0\n 53482: u64 [sp + 40] = 0\n 53485: u64 [sp + 32] = 0\n 53488: a0 = 0x4e487b7100000000\n 53498: a1 = sp + 0x20\n 53501: u64 [sp + 0x38] = a0\n 53504: a0 = 0\n 53506: jump [t0]\n      : @1923 (gas: 15)\n 53508: a3 = u64 [s1 + 0x48]\n 53511: a0 = u64 [a3 + 0x18]\n 53514: a1 = u64 [a3 + 0x10]\n 53517: a2 = u64 [a3 + 0x8]\n 53520: a3 = u64 [a3]\n 53522: a0 = reverse a0\n 53524: a4 = reverse a1\n 53526: a2 = reverse a2\n 53528: a3 = reverse a3\n 53530: a1 = u64 [s1 + 0x58]\n 53533: u64 [a1 + 0x18] = a3\n 53536: u64 [a1 + 0x10] = a2\n 53539: u64 [a1 + 0x8] = a4\n 53542: u64 [a1] = a0\n 53544: jump [t0]\n      : @1924 (gas: 19)\n 53546: a3 = u64 [s1 + 0x108]\n 53550: a0 = u64 [a3]\n 53552: a1 = u64 [a3 + 0x8]\n 53555: a2 = u64 [a3 + 0x10]\n 53558: a3 = u64 [a3 + 0x18]\n 53561: a0 = reverse a0\n 53563: a1 = reverse a1\n 53565: a2 = reverse a2\n 53567: a3 = reverse a3\n 53569: a4 = a3 + 0x2\n 53572: a3 = a4 <u a3\n 53575: a5 = a2 + a3\n 53578: a2 = a5 <u a2\n 53581: a2 = a3 if a3 == 0\n 53584: a2 = a2 + a1\n 53587: a1 = a2 <u a1\n 53590: a0 = a0 + a1\n 53593: a1 = s1 + 0x30d8\n 53597: jump [t0]\n      : @1925 (gas: 19)\n 53599: a3 = u64 [s1 + 0x128]\n 53603: a0 = u64 [a3]\n 53605: a1 = u64 [a3 + 0x8]\n 53608: a2 = u64 [a3 + 0x10]\n 53611: a3 = u64 [a3 + 0x18]\n 53614: a0 = reverse a0\n 53616: a1 = reverse a1\n 53618: a2 = reverse a2\n 53620: a3 = reverse a3\n 53622: a4 = a3 + 0x3\n 53625: a3 = a4 <u a3\n 53628: a5 = a2 + a3\n 53631: a2 = a5 <u a2\n 53634: a2 = a3 if a3 == 0\n 53637: a2 = a2 + a1\n 53640: a1 = a2 <u a1\n 53643: a0 = a0 + a1\n 53646: a1 = s1 + 0x38d8\n 53650: jump [t0]\n      : @1926 (gas: 22)\n 53652: a2 = u64 [s1 + 0xd0]\n 53656: a0 = u64 [a2 + 0x8]\n 53659: a1 = u64 [a2]\n 53661: a2 = i32 [a2 + 0x10]\n 53664: a0 = reverse a0\n 53666: a3 = a0 >> 0x20\n 53669: a1 = reverse a1\n 53671: a4 = a1 << 0x20\n 53674: a3 = a3 | a4\n 53677: u64 [s1 + 0x138] = a3\n 53681: a0 = a0 << 0x20\n 53684: a2 = reverse a2\n 53686: a2 = a2 >> 0x20\n 53689: a0 = a0 | a2\n 53692: u64 [s1 + 0x130] = a0\n 53696: a1 = a1 >> 0x20\n 53699: u64 [s1 + 0x128] = a1\n 53703: a0 = sp + 0xffffffffffffffe0\n 53706: a2 = a0 & 0xffffffffffffffe0\n 53709: u64 [s1 + 0x120] = a2\n 53713: sp = a2\n 53715: jump [t0]\n      : @1927 (gas: 8)\n 53717: a0 = a0 | a2\n 53720: a2 = a4 | a1\n 53723: a2 = a2 | a0\n 53726: a2 = a2 >> 0x20\n 53729: a0 = a0 | a1\n 53732: a0 = a0 << 0x20\n 53735: a0 = a0 | a2\n 53738: jump [t0]\n      : @1928 (gas: 10)\n 53740: a1 = a1 + a2\n 53743: a2 = a0 | a1\n 53746: a2 = a2 <u 0x1\n 53749: a3 = u64 [s1 + 0x110]\n 53753: a2 = a2 + a3\n 53756: a3 = a2 <u a3\n 53759: a4 = u64 [s1 + 0x108]\n 53763: a3 = a3 + a4\n 53766: a4 = s1 + 0x30d8\n 53770: jump [t0]\n      : @1929 (gas: 19)\n 53772: a0 = u64 [a3]\n 53774: a1 = u64 [a3 + 0x8]\n 53777: a2 = u64 [a3 + 0x10]\n 53780: a3 = u64 [a3 + 0x18]\n 53783: a0 = reverse a0\n 53785: a1 = reverse a1\n 53787: a2 = reverse a2\n 53789: a3 = reverse a3\n 53791: a3 = a3 + 0x1\n 53794: a4 = a3 <u 0x1\n 53797: a2 = a2 + a4\n 53800: a4 = a3 | a2\n 53803: a4 = a4 <u 0x1\n 53806: a4 = a4 + a1\n 53809: a1 = a4 <u a1\n 53812: a0 = a0 + a1\n 53815: a1 = s1 + 0x30d8\n 53819: a5 = a1 + 0x500\n 53823: jump [t0]\n      : @1930 (gas: 11)\n 53825: a4 = a4 + a1\n 53828: a1 = a4 <u a1\n 53831: a1 = a1 + a3\n 53834: a1 = a1 | a2\n 53837: a2 = a0 | a4\n 53840: a2 = a2 | a1\n 53843: a1 = a1 | a4\n 53846: a2 = a2 >> 0x20\n 53849: a1 = a1 << 0x20\n 53852: a1 = a1 | a2\n 53855: jump [t0]\n      : @1931 (gas: 19)\n 53857: a2 = u64 [s1 + 0x138]\n 53861: a0 = u64 [a2 + 0x8]\n 53864: a1 = i32 [a2 + 0x10]\n 53867: a2 = u64 [a2]\n 53869: a0 = reverse a0\n 53871: a3 = a0 << 0x20\n 53874: a1 = reverse a1\n 53876: a1 = a1 >> 0x20\n 53879: a1 = a1 | a3\n 53882: u64 [s1 + 0x120] = a1\n 53886: a0 = a0 >> 0x20\n 53889: a1 = reverse a2\n 53891: a2 = a1 << 0x20\n 53894: a0 = a0 | a2\n 53897: u64 [s1 + 0x118] = a0\n 53901: a1 = a1 >> 0x20\n 53904: u64 [s1 + 0x108] = a1\n 53908: a0 = 0x3000\n 53912: jump [t0]\n      : @1932 (gas: 17)\n 53914: a0 = u64 [a3]\n 53916: a1 = u64 [a3 + 0x8]\n 53919: a2 = u64 [a3 + 0x10]\n 53922: a3 = u64 [a3 + 0x18]\n 53925: a0 = reverse a0\n 53927: a1 = reverse a1\n 53929: a2 = reverse a2\n 53931: a3 = reverse a3\n 53933: a4 = a3 + 0x4\n 53936: a3 = a4 <u a3\n 53939: a5 = a2 + a3\n 53942: a2 = a5 <u a2\n 53945: a2 = a3 if a3 == 0\n 53948: a2 = a2 + a1\n 53951: a1 = a2 <u a1\n 53954: a0 = a0 + a1\n 53957: jump [t0]\n      : @1933 (gas: 16)\n 53959: a4 = u64 [s1 + 0x118]\n 53963: a2 = a4 <u 0x80\n 53967: a3 = u64 [s1 + 0xd0]\n 53971: a1 = a3 if a2 != 0\n 53974: a5 = u64 [s1 + 0xd8]\n 53978: a3 = u64 [s1 + 0xe8]\n 53982: a3 = a3 | a5\n 53985: a3 = a0 if a2 == 0\n 53988: a1 = 0xffffffffffffffff if a4 == 0\n 53991: a3 = 0xffffffffffffffff if a4 == 0\n 53994: a4 = u64 [s1 + 0xe0]\n 53998: a4 = 0 if a2 == 0\n 54000: a5 = 0 if a2 == 0\n 54002: a0 = u64 [s1 + 0xf0]\n 54006: a0 = a0 & ~a3\n 54009: jump [t0]\n      : @1934 (gas: 19)\n 54011: a3 = u64 [s1 + 0x120]\n 54015: a0 = u64 [a3 + 0x18]\n 54018: a1 = u64 [a3 + 0x10]\n 54021: a2 = u64 [a3 + 0x8]\n 54024: a3 = u64 [a3]\n 54026: a5 = reverse a0\n 54028: a4 = reverse a1\n 54030: a0 = reverse a2\n 54032: a1 = reverse a3\n 54034: u64 [s1 + 0x108] = a1\n 54038: a2 = u64 [s1 + 0x98]\n 54042: u64 [a2 + 0x18] = a1\n 54045: u64 [s1 + 0x110] = a0\n 54049: u64 [a2 + 0x10] = a0\n 54052: u64 [s1 + 0xc0] = a4\n 54056: u64 [a2 + 0x8] = a4\n 54059: u64 [s1 + 0xb8] = a5\n 54063: u64 [a2] = a5\n 54065: jump [t0]\n      : @1935 (gas: 15)\n 54067: a5 = s1 + 0x100\n 54071: a1 = u64 [a5 + 0x58]\n 54074: a0 = a1 + 0x20\n 54077: a1 = a0 <u a1\n 54080: a3 = u64 [a5 + 0x50]\n 54083: a2 = a3 + a1\n 54086: a3 = a2 <u a3\n 54089: a3 = a1 if a1 == 0\n 54092: a1 = u64 [a5 + 0x40]\n 54095: a3 = a3 + a1\n 54098: a1 = a3 <u a1\n 54101: a4 = u64 [a5 + 0x48]\n 54104: a4 = a4 + a1\n 54107: a1 = s1 + 0x20d8\n 54111: jump [t0]\n      : @1936 (gas: 13)\n 54113: a1 = s1 + 0x100\n 54117: a4 = u64 [a1 + 0x48]\n 54120: a2 = u64 [a1 + 0x40]\n 54123: a0 = u64 [a1 + 0x58]\n 54126: a0 = a0 | a4\n 54129: a3 = u64 [a1 + 0x50]\n 54132: a1 = a2 | a3\n 54135: a1 = a1 | a0\n 54138: a1 = a1 >> 0x20\n 54141: a0 = a0 | a3\n 54144: a0 = a0 << 0x20\n 54147: a0 = a0 | a1\n 54150: jump [t0]\n      : @1937 (gas: 13)\n 54152: a1 = a0 <u a1\n 54155: a3 = u64 [s1 + 0xc0]\n 54159: a2 = a3 + a1\n 54162: a3 = a2 <u a3\n 54165: a3 = a1 if a1 == 0\n 54168: a1 = u64 [s1 + 0x110]\n 54172: a3 = a3 + a1\n 54175: a1 = a3 <u a1\n 54178: a4 = u64 [s1 + 0x108]\n 54182: a1 = a1 + a4\n 54185: a4 = s1 + 0x30d8\n 54189: a5 = a4 + 0x500\n 54193: jump [t0]\n      : @1938 (gas: 13)\n 54195: a4 = s1 + 0x100\n 54199: u64 [a4 + 0x50] = a0\n 54202: u64 [a4 + 0x48] = a2\n 54205: a0 = a0 | a2\n 54208: u64 [a4 + 0x58] = a1\n 54211: a1 = a1 | a3\n 54214: a1 = a1 | a0\n 54217: a1 = a1 >> 0x20\n 54220: u64 [a4 + 0x40] = a3\n 54223: a0 = a0 | a3\n 54226: a0 = a0 << 0x20\n 54229: a0 = a0 | a1\n 54232: jump [t0]\n      : @1939 (gas: 16)\n 54234: a2 = u64 [s1 + 0xa8]\n 54238: a0 = u64 [a2 + 0x8]\n 54241: a1 = i32 [a2 + 0x10]\n 54244: a2 = u64 [a2]\n 54246: a0 = reverse a0\n 54248: a3 = a0 << 0x20\n 54251: a1 = reverse a1\n 54253: a1 = a1 >> 0x20\n 54256: a3 = a3 | a1\n 54259: a0 = a0 >> 0x20\n 54262: a1 = reverse a2\n 54264: a2 = a1 << 0x20\n 54267: a4 = a2 | a0\n 54270: a1 = a1 >> 0x20\n 54273: a0 = u64 [s1 + 0x158]\n 54277: jump [t0]\n      : @1940 (gas: 15)\n 54279: a1 = u64 [s1 + 0xf0]\n 54283: a0 = u64 [s1 + 0x158]\n 54287: a0 = a0 + a1\n 54290: a1 = a0 <u a1\n 54293: a4 = u64 [s1 + 0xe8]\n 54297: a2 = u64 [s1 + 0x148]\n 54301: a2 = a2 + a4\n 54304: a2 = a2 + a1\n 54307: a3 = a2 ^ a4\n 54310: a4 = a2 <u a4\n 54313: a4 = a1 if a3 == 0\n 54316: a3 = u64 [s1 + 0xe0]\n 54320: a1 = u64 [s1 + 0x140]\n 54324: a1 = a1 + a3\n 54327: jump [t0]\n      : @1941 (gas: 14)\n 54329: a3 = u64 [s1 + 0x128]\n 54333: a0 = a0 ^ a3\n 54336: a3 = u64 [s1 + 0x130]\n 54340: a1 = a1 ^ a3\n 54343: a0 = a0 | a1\n 54346: a1 = u64 [s1 + 0x138]\n 54350: a1 = a1 ^ a2\n 54353: a1 = a1 | a0\n 54356: a4 = u64 [s1 + 0x140]\n 54360: a0 = a4\n 54362: t1 = u64 [s1 + 0x158]\n 54366: t2 = u64 [s1 + 0x150]\n 54370: ra = u64 [s1 + 0x148]\n 54374: jump [t0]\n      : @1942 (gas: 9)\n 54376: a0 = u64 [a3 + 0x18]\n 54379: a1 = u64 [a3 + 0x10]\n 54382: a2 = u64 [a3 + 0x8]\n 54385: a3 = u64 [a3]\n 54387: a0 = reverse a0\n 54389: a1 = reverse a1\n 54391: a2 = reverse a2\n 54393: a3 = reverse a3\n 54395: jump [t0]\n      : @1943 (gas: 14)\n 54397: a0 = u64 [a2 + 0x8]\n 54400: a1 = i32 [a2 + 0x10]\n 54403: a2 = u64 [a2]\n 54405: a0 = reverse a0\n 54407: a3 = a0 << 0x20\n 54410: a1 = reverse a1\n 54412: a1 = a1 >> 0x20\n 54415: a1 = a1 | a3\n 54418: u64 [s1 + 0x158] = a1\n 54422: a0 = a0 >> 0x20\n 54425: a1 = reverse a2\n 54427: a2 = a1 << 0x20\n 54430: a0 = a0 | a2\n 54433: jump [t0]\n      : @1944 (gas: 15)\n 54435: a0 = u64 [a2 + 0x8]\n 54438: a1 = i32 [a2 + 0x10]\n 54441: a2 = u64 [a2]\n 54443: a0 = reverse a0\n 54445: a3 = a0 << 0x20\n 54448: a1 = reverse a1\n 54450: a1 = a1 >> 0x20\n 54453: a3 = a3 | a1\n 54456: a0 = a0 >> 0x20\n 54459: a1 = reverse a2\n 54461: a2 = a1 << 0x20\n 54464: a0 = a0 | a2\n 54467: a1 = a1 >> 0x20\n 54470: a2 = 0x2000\n 54474: jump [t0]\n      : @1945 (gas: 5)\n 54476: a0 = sp + 0xffffffffffffffe0\n 54479: a2 = a0 & 0xffffffffffffffe0\n 54482: u64 [s1 + 0x108] = a2\n 54486: sp = a2\n 54488: jump [t0]\n      : @1946 (gas: 14)\n 54490: a3 = a3 + a4\n 54493: u64 [s1 + 0xe8] = a3\n 54497: a3 = a3 << 0x3b\n 54500: a4 = a2 >> 0x5\n 54503: a4 = a4 | a3\n 54506: a0 = u64 [s1 + 0x108]\n 54510: t1 = u64 [a0 + 0x18]\n 54513: a2 = a2 << 0x3b\n 54516: a3 = u64 [a0 + 0x10]\n 54519: a1 = a1 >> 0x5\n 54522: a0 = a1 | a2\n 54525: t2 = reverse t1\n 54527: a2 = reverse a3\n 54529: jump [t0]\n      : @1947 (gas: 14)\n 54531: a0 = u64 [a2 + 0x8]\n 54534: a1 = i32 [a2 + 0x10]\n 54537: a2 = u64 [a2]\n 54539: a3 = reverse a0\n 54541: a0 = a3 << 0x20\n 54544: a1 = reverse a1\n 54546: a1 = a1 >> 0x20\n 54549: a0 = a0 | a1\n 54552: a3 = a3 >> 0x20\n 54555: a1 = reverse a2\n 54557: a2 = a1 << 0x20\n 54560: a2 = a2 | a3\n 54563: a1 = a1 >> 0x20\n 54566: jump [t0]\n      : @1948 (gas: 9)\n 54568: a0 = u64 [a2 + 0x8]\n 54571: a1 = i32 [a2 + 0x10]\n 54574: a2 = u64 [a2]\n 54576: a0 = reverse a0\n 54578: a3 = a0 << 0x20\n 54581: a1 = reverse a1\n 54583: a1 = a1 >> 0x20\n 54586: a1 = a1 | a3\n 54589: jump [t0]\n      : @1949 (gas: 14)\n 54591: a0 = u64 [a2 + 0x8]\n 54594: a1 = i32 [a2 + 0x10]\n 54597: a2 = u64 [a2]\n 54599: a0 = reverse a0\n 54601: a3 = a0 << 0x20\n 54604: a1 = reverse a1\n 54606: a1 = a1 >> 0x20\n 54609: a1 = a1 | a3\n 54612: a0 = a0 >> 0x20\n 54615: a2 = reverse a2\n 54617: a3 = a2 << 0x20\n 54620: a0 = a0 | a3\n 54623: a2 = a2 >> 0x20\n 54626: jump [t0]\n      : @1950 (gas: 14)\n 54628: a0 = u64 [a2 + 0x8]\n 54631: a1 = i32 [a2 + 0x10]\n 54634: a2 = u64 [a2]\n 54636: a0 = reverse a0\n 54638: a3 = a0 << 0x20\n 54641: a1 = reverse a1\n 54643: a1 = a1 >> 0x20\n 54646: a3 = a3 | a1\n 54649: a0 = a0 >> 0x20\n 54652: a1 = reverse a2\n 54654: a2 = a1 << 0x20\n 54657: a2 = a2 | a0\n 54660: a1 = a1 >> 0x20\n 54663: jump [t0]\n      : @1951 (gas: 7)\n 54665: a1 = u64 [s1 + 0x120]\n 54669: a0 = a1 <u a0\n 54672: a1 = u64 [s1 + 0x118]\n 54676: a0 = 0 if a1 != 0\n 54678: a1 = u64 [s1 + 0xa8]\n 54682: a0 = 0 if a1 != 0\n 54684: jump [t0]\n      : @1952 (gas: 8)\n 54686: a0 = sp + 0xffffffffffffffe0\n 54689: a0 = a0 & 0xffffffffffffffe0\n 54692: u64 [s1 + 0x120] = a0\n 54696: sp = a0\n 54698: i32 a2 = a0 + 0\n 54700: a1 = 0x40\n 54703: a0 = u64 [s1 + 0xf8]\n 54707: jump [t0]\n      : @1953 (gas: 8)\n 54709: a0 = sp + 0xffffffffffffffe0\n 54712: a0 = a0 & 0xffffffffffffffe0\n 54715: u64 [s1 + 0x120] = a0\n 54719: sp = a0\n 54721: i32 a2 = a0 + 0\n 54723: a1 = 0x40\n 54726: a0 = u64 [s1 + 0xe8]\n 54730: jump [t0]\n      : @1954 (gas: 14)\n 54732: a5 = a5 + a2\n 54735: a4 = a5 <u a2\n 54738: a0 = u64 [s1 + 0x110]\n 54742: a2 = a2 <u a0\n 54745: a0 = t2 + a2\n 54748: a0 = a0 + a4\n 54751: a2 = a1 | a5\n 54754: a0 = a0 | a3\n 54757: a2 = a2 | a0\n 54760: a2 = a2 >> 0x20\n 54763: a0 = a0 | a5\n 54766: a0 = a0 << 0x20\n 54769: a0 = a0 | a2\n 54772: jump [t0]\n      : @1955 (gas: 14)\n 54774: a3 = s1 + 0x100\n 54778: a0 = u64 [a3 + 0x48]\n 54781: a2 = u64 [a3 + 0x40]\n 54784: a2 = a2 | a0\n 54787: a0 = 0x100000000\n 54797: u64 [a3 + 0x40] = a0\n 54800: a0 = 0xffffffe0\n 54810: a1 = u64 [a3 + 0x58]\n 54813: a0 = a1 <u a0\n 54816: a1 = u64 [a3 + 0x50]\n 54819: a0 = 0 if a1 != 0\n 54821: u64 [a3 + 0x48] = a2\n 54824: a0 = 0 if a2 != 0\n 54826: jump [t0]\n      : @1956 (gas: 10)\n 54828: a1 = u64 [s1 + 0x118]\n 54832: a0 = a0 | a1\n 54835: a1 = u64 [s1 + 0x120]\n 54839: a1 = a1 | a2\n 54842: a1 = a1 | a0\n 54845: a1 = a1 >> 0x20\n 54848: a0 = a0 | a2\n 54851: a0 = a0 << 0x20\n 54854: a0 = a0 | a1\n 54857: jump [t0]\n      : @1957 (gas: 13)\n 54859: a4 = a0 << 0x3f\n 54862: a5 = a1 >> 0x1\n 54865: t1 = a5 | a4\n 54868: a5 = a3 << 0x3f\n 54871: a0 = a0 >> 0x1\n 54874: a0 = a0 | a5\n 54877: a1 = a1 << 0x3f\n 54880: a5 = a2 >> 0x1\n 54883: a1 = a1 | a5\n 54886: a3 = a3 >> 0x1\n 54889: a2 = a2 & 0x1\n 54892: a5 = -a2\n 54894: jump [t0]\n      : @1958 (gas: 11)\n 54896: a3 = u64 [s1 + 0x158]\n 54900: a0 = u64 [a3 + 0x18]\n 54903: a1 = u64 [a3 + 0x10]\n 54906: a2 = u64 [a3 + 0x8]\n 54909: a3 = u64 [a3]\n 54911: a0 = reverse a0\n 54913: a1 = reverse a1\n 54915: a2 = reverse a2\n 54917: a3 = reverse a3\n 54919: a4 = s1 + 0x30d8\n 54923: jump [t0]\n      : @1959 (gas: 11)\n 54925: a4 = u64 [s1 + 0x148]\n 54929: a4 = a4 + 0x1\n 54932: a0 = a4 <u 0x1\n 54935: t2 = u64 [s1 + 0x150]\n 54939: t2 = t2 + a0\n 54942: a0 = a4 | t2\n 54945: a0 = a0 <u 0x1\n 54948: a1 = u64 [s1 + 0xb0]\n 54952: a3 = a1 + a0\n 54955: a1 = a3 <u a1\n 54958: jump [t0]\n      : @1960 (gas: 10)\n 54960: a4 = 0 if a2 == 0\n 54962: a1 = u64 [s1 + 0xf8]\n 54966: a1 = a1 & ~a3\n 54969: a2 = u64 [s1 + 0x100]\n 54973: a0 = a2 & ~a0\n 54976: a2 = u64 [s1 + 0x108]\n 54980: a2 = a2 & ~a4\n 54983: a3 = u64 [s1 + 0x110]\n 54987: a3 = a3 & ~a5\n 54990: jump [t0]\n      : @1961 (gas: 14)\n 54992: a0 = u64 [a3 + 0x18]\n 54995: a1 = u64 [a3 + 0x10]\n 54998: a2 = u64 [a3 + 0x8]\n 55001: a3 = u64 [a3]\n 55003: a0 = reverse a0\n 55005: a4 = reverse a1\n 55007: a2 = reverse a2\n 55009: a3 = reverse a3\n 55011: a1 = u64 [s1 + 0x18]\n 55014: u64 [a1 + 0x18] = a3\n 55017: u64 [a1 + 0x10] = a2\n 55020: u64 [a1 + 0x8] = a4\n 55023: u64 [a1] = a0\n 55025: jump [t0]\n      : @1962 (gas: 8)\n 55027: a0 = sp + 0xffffffffffffffe0\n 55030: a0 = a0 & 0xffffffffffffffe0\n 55033: u64 [s1 + 0x48] = a0\n 55036: sp = a0\n 55038: i32 a2 = a0 + 0\n 55040: a1 = 0x40\n 55043: a0 = u64 [s1 + 0xa0]\n 55047: jump [t0]\n      : @1963 (gas: 13)\n 55049: a5 = a5 + a2\n 55052: a3 = a5 <u a2\n 55055: a2 = a2 <u t2\n 55058: a0 = t1 + a2\n 55061: a0 = a0 + a3\n 55064: a2 = a1 | a5\n 55067: a0 = a0 | a4\n 55070: a2 = a2 | a0\n 55073: a2 = a2 >> 0x20\n 55076: a0 = a0 | a5\n 55079: a0 = a0 << 0x20\n 55082: a0 = a0 | a2\n 55085: jump [t0]\n      : @1964 (gas: 7)\n 55087: a3 = a3 | a5\n 55090: a3 = a1 if a2 == 0\n 55093: a1 = 0xffffffffffffffff\n 55096: a0 = a1 if a4 == 0\n 55099: a3 = a1 if a4 == 0\n 55102: a5 = 0 if a2 == 0\n 55104: jump [t0]\n      : @1965 (gas: 13)\n 55106: a3 = 0\n 55108: a5 = 0\n 55110: a4 = 0\n 55112: a0 = u64 [s1 + 0x100]\n 55116: a1 = u64 [s1 + 0xf8]\n 55120: a0 = a0 | a1\n 55123: a1 = u64 [s1 + 0x110]\n 55127: a2 = u64 [s1 + 0x108]\n 55131: a1 = a1 | a2\n 55134: a0 = a0 | a1\n 55137: a0 = a0 >u 0\n 55139: a0 = a0 << 0x5\n 55142: jump [t0]\n      : @1966 (gas: 13)\n 55144: a0 = u64 [a4 + 0xc8]\n 55148: a1 = u64 [a4 + 0xc0]\n 55152: a2 = u64 [a4 + 0xd0]\n 55156: a3 = u64 [a4 + 0xd8]\n 55160: a4 = a1 | a0\n 55163: a4 = a4 <u 0x1\n 55166: a5 = a2 <u a4\n 55169: a3 = a3 - a5\n 55172: a2 = a2 - a4\n 55175: a4 = a1 <u 0x1\n 55178: a0 = a0 - a4\n 55181: a1 = a1 + 0xffffffffffffffff\n 55184: jump [t0]\n      : @1967 (gas: 5)\n 55186: sp = a0\n 55188: i32 a2 = a0 + 0\n 55190: a1 = 0x40\n 55193: a0 = u64 [s1 + 0x130]\n 55197: jump [t0]\n      : @1968 (gas: 11)\n 55199: a0 = u64 [s1 + 0xa0]\n 55203: a1 = u64 [s1 + 0xa8]\n 55207: a1 = a1 | a0\n 55210: a0 = u64 [s1 + 0x60]\n 55213: a2 = u64 [s1 + 0x120]\n 55217: a0 = a2 <u a0\n 55220: a2 = u64 [s1 + 0x118]\n 55224: a0 = 0 if a2 != 0\n 55226: u64 [s1 + 0x98] = a1\n 55230: a0 = 0 if a1 != 0\n 55232: jump [t0]\n      : @1969 (gas: 10)\n 55234: a1 = a0\n 55236: a0 = a0 + 0x20\n 55239: a1 = a0 <u a1\n 55242: a2 = a3 + a1\n 55245: a3 = a2 <u a3\n 55248: a3 = a1 if a1 == 0\n 55251: a3 = a3 + a5\n 55254: a1 = a3 <u a5\n 55257: a4 = a4 + a1\n 55260: jump [t0]\n      : @1970 (gas: 16)\n 55262: a4 = u64 [a3]\n 55264: u64 [sp + 0x18] = a4\n 55267: a4 = u64 [a3 + 0x8]\n 55270: u64 [sp + 0x20] = a4\n 55273: a4 = u64 [a3 + 0x10]\n 55276: u64 [sp + 0x28] = a4\n 55279: a3 = u64 [a3 + 0x18]\n 55282: u64 [sp + 0x30] = a3\n 55285: s1 = u64 [a2]\n 55287: a3 = u64 [a2 + 0x8]\n 55290: u64 [sp] = a3\n 55292: a3 = u64 [a2 + 0x10]\n 55295: u64 [sp + 0x8] = a3\n 55298: a2 = u64 [a2 + 0x18]\n 55301: u64 [sp + 0x10] = a2\n 55304: jump [t0]\n      : @1971 (gas: 8)\n 55306: a2 = a4 >u 0\n 55308: a1 = a1 ^ 0x1\n 55311: a1 = a2 if a4 != 0\n 55314: a2 = t2 >u 0\n 55316: a3 = a5 >u 0\n 55318: a3 = a2 if a5 == 0\n 55321: a3 = a1 if a0 == 0\n 55324: jump [t0]\n      : @1972 (gas: 10)\n 55326: a2 = a2 + 0x1\n 55329: a1 = a2 <u 0x1\n 55332: a5 = a5 + a1\n 55335: a1 = a2 | a5\n 55338: a1 = a1 <u 0x1\n 55341: a1 = a1 + ra\n 55344: a0 = a1 <u ra\n 55347: t1 = t1 + a0\n 55350: u64 [s1 + 0x140] = a2\n 55354: jump [t0]\n      : @1973 (gas: 10)\n 55356: a0 = u64 [sp + 0x10]\n 55359: a1 = u64 [sp + 0x18]\n 55362: a2 = 0x100000000\n 55372: a2 = a2 ^ a0\n 55375: a2 = a2 | a1\n 55378: a3 = a0 >> 0x20\n 55381: a3 = a3 <u 0x1\n 55384: a3 = 0 if a1 != 0\n 55386: a3 = 0 if a2 == 0\n 55388: jump [t0]\n      : @1974 (gas: 11)\n 55390: a3 = u64 [s1 + 0x110]\n 55394: a0 = a0 ^ a3\n 55397: a3 = u64 [s1 + 0x118]\n 55401: a1 = a1 ^ a3\n 55404: a0 = a0 | a1\n 55407: a1 = u64 [s1 + 0x120]\n 55411: a1 = a1 ^ a2\n 55414: a1 = a1 | a0\n 55417: a3 = u64 [s1 + 0x128]\n 55421: ra = a3\n 55423: jump [t0]\n      : @1975 (gas: 10)\n 55425: t1 = t1 + 0x1\n 55428: a1 = t1 <u 0x1\n 55431: t2 = t2 + a1\n 55434: a1 = t1 | t2\n 55437: a1 = a1 <u 0x1\n 55440: a1 = a1 + a0\n 55443: a0 = a1 <u a0\n 55446: ra = ra + a0\n 55449: u64 [s1 + 0x158] = t1\n 55453: jump [t0]\n      : @1976 (gas: 7)\n 55455: a1 = u64 [sp + 0xb0]\n 55459: a0 = a1 <u s1\n 55462: a2 = u64 [sp + 0xb8]\n 55466: a0 = 0 if a2 != 0\n 55468: a2 = u64 [sp + 0x98]\n 55472: a0 = 0 if a2 != 0\n 55474: jump [t0]\n      : @1977 (gas: 5)\n 55476: a0 = u64 [s1 + 0x158]\n 55480: i32 a0 = a0 + 0x24\n 55483: a1 = 0x28d8\n 55487: a2 = s1 + a1\n 55490: jump [t0]\n      : @1978 (gas: 10)\n 55492: a0 = u64 [s1 + 0xc0]\n 55496: a1 = u64 [s1 + 0xb8]\n 55500: a0 = a0 | a1\n 55503: a1 = 0xffffffe0\n 55513: a2 = u64 [s1 + 0xd0]\n 55517: a1 = a2 <u a1\n 55520: a2 = u64 [s1 + 0xc8]\n 55524: a1 = 0 if a2 != 0\n 55526: a1 = 0 if a0 != 0\n 55528: jump [t0]\n      : @1979 (gas: 10)\n 55530: a0 = u64 [a3 + 0x18]\n 55533: a1 = u64 [a3 + 0x10]\n 55536: a2 = u64 [a3 + 0x8]\n 55539: a3 = u64 [a3]\n 55541: a0 = reverse a0\n 55543: a1 = reverse a1\n 55545: a2 = reverse a2\n 55547: a3 = reverse a3\n 55549: a4 = s1 + 0x500\n 55553: jump [t0]\n      : @1980 (gas: 6)\n 55555: a3 = a3 & a0\n 55558: a1 = a1 & 0xffffffffffffffff\n 55561: a2 = a2 & 0xffffffffffffffff\n 55564: a0 = u64 [s1 + 0x120]\n 55568: i32 a0 = a0 + 0x20\n 55571: jump [t0]\n      : @1981 (gas: 6)\n 55573: a3 = a3 & a0\n 55576: a1 = a1 & 0xffffffffffffffff\n 55579: a2 = a2 & 0xffffffffffffffff\n 55582: a0 = u64 [s1 + 0x120]\n 55586: i32 a0 = a0 + 0x40\n 55589: jump [t0]\n      : @1982 (gas: 9)\n 55591: a0 = a0 + 0x1\n 55594: a4 = a0 <u 0x1\n 55597: a2 = a2 + a4\n 55600: a4 = a0 | a2\n 55603: a4 = a4 <u 0x1\n 55606: a4 = a4 + a3\n 55609: a3 = a4 <u a3\n 55612: a1 = a1 + a3\n 55615: jump [t0]\n      : @1983 (gas: 7)\n 55617: u64 [sp + 24] = 0\n 55620: u64 [sp + 16] = 0\n 55623: u64 [sp + 0] = 0x41\n 55626: a0 = 0x4\n 55629: a1 = sp\n 55631: u64 [sp + 8] = 0\n 55634: jump [t0]\n      : @1984 (gas: 6)\n 55636: a2 = a2 + a4\n 55639: a2 = a2 + a1\n 55642: a3 = a2 ^ a4\n 55645: a4 = a2 <u a4\n 55648: a4 = a1 if a3 == 0\n 55651: jump [t0]\n      : @1985 (gas: 6)\n 55653: a0 = s1 <u a0\n 55656: a1 = u64 [sp + 0xb0]\n 55660: a0 = 0 if a1 != 0\n 55662: a1 = u64 [sp + 0xa0]\n 55666: a0 = 0 if a1 != 0\n 55668: jump [t0]\n      : @1986 (gas: 9)\n 55670: a3 = u64 [s1 + 0x108]\n 55674: a3 = a3 + 0x1\n 55677: a0 = a3 <u 0x1\n 55680: a2 = u64 [s1 + 0xf8]\n 55684: a2 = a2 + a0\n 55687: a0 = a3 | a2\n 55690: a0 = a0 <u 0x1\n 55693: a1 = u64 [s1 + 0xc0]\n 55697: jump [t0]\n      : @1987 (gas: 5)\n 55699: a0 = u64 [s1 + 0x158]\n 55703: i32 a0 = a0 + 0x4\n 55706: a1 = 0x28d8\n 55710: a2 = s1 + a1\n 55713: jump [t0]\n      : @1988 (gas: 8)\n 55715: a1 = a1 | a3\n 55718: a3 = a0 | a2\n 55721: a3 = a3 | a1\n 55724: a3 = a3 >> 0x20\n 55727: a1 = a1 | a2\n 55730: a1 = a1 << 0x20\n 55733: a1 = a1 | a3\n 55736: jump [t0]\n      : @1989 (gas: 12)\n 55738: a2 = u64 [sp]\n 55740: a3 = u64 [sp + 0x8]\n 55743: u64 [s1] = a2\n 55745: u64 [s1 + 0x8] = a3\n 55748: u64 [s1 + 0x10] = a0\n 55751: u64 [s1 + 0x18] = a1\n 55754: sp = s0 + 0xffffffffffffffc0\n 55757: ra = u64 [sp + 0x38]\n 55760: s0 = u64 [sp + 0x30]\n 55763: s1 = u64 [sp + 0x28]\n 55766: sp = sp + 0x40\n 55769: jump [t0]\n      : @1990 (gas: 5)\n 55771: a0 = a0 & 0xff\n 55775: a1 = a0 >u 0\n 55777: a0 = u64 [s1 + 0x120]\n 55781: i32 a0 = a0 + 0x80\n 55785: jump [t0]\n      : @1991 (gas: 4)\n 55787: a2 = a3 + a1\n 55790: a3 = a2 <u a3\n 55793: a3 = a1 if a1 == 0\n 55796: jump [t0]\n      : @1992 (gas: 9)\n 55798: a1 = u64 [sp]\n 55800: a1 = reverse a1\n 55802: a2 = u64 [sp + 0x8]\n 55805: a2 = reverse a2\n 55807: a3 = u64 [sp + 0x10]\n 55810: a3 = reverse a3\n 55812: a4 = u64 [sp + 0x18]\n 55815: a4 = reverse a4\n 55817: jump [t0]\n      : @1993 (gas: 8)\n 55819: a4 = s1 + 0x100\n 55823: u64 [a4 + 0x50] = a1\n 55826: u64 [a4 + 0x48] = a2\n 55829: a0 = a2 | a1\n 55832: u64 [a4 + 0x40] = a3\n 55835: a1 = a3 <u 0x1\n 55838: a1 = 0 if a0 != 0\n 55840: jump [t0]\n      : @1994 (gas: 12)\n 55842: a0 = u64 [s1 + 0xb8]\n 55846: a1 = u64 [s1 + 0xc8]\n 55850: a0 = a0 | a1\n 55853: a2 = u64 [s1 + 0xc0]\n 55857: a1 = u64 [s1 + 0xd0]\n 55861: a1 = a1 | a2\n 55864: a1 = a1 | a0\n 55867: a1 = a1 >> 0x20\n 55870: a0 = a0 | a2\n 55873: a0 = a0 << 0x20\n 55876: a0 = a0 | a1\n 55879: jump [t0]\n      : @1995 (gas: 8)\n 55881: a4 = a2 + a0\n 55884: a4 = a4 + a3\n 55887: a3 = a4 ^ a2\n 55890: u64 [s1 + 0xf0] = a4\n 55894: a2 = a4 <u a2\n 55897: a2 = a0 if a3 == 0\n 55900: a4 = u64 [s1 + 0xe8]\n 55904: jump [t0]\n      : @1996 (gas: 7)\n 55906: a0 = a0 << 0x3b\n 55909: a1 = a0 >> 0x38\n 55912: u64 [s1 + 0x118] = a1\n 55916: a2 = 0x80 - a1\n 55920: a0 = 0xffffffffffffffff\n 55923: a1 = 0xffffffffffffffff\n 55926: jump [t0]\n      : @1997 (gas: 8)\n 55928: a0 = sp + 0xffffffffffffffe0\n 55931: a0 = a0 & 0xffffffffffffffe0\n 55934: u64 [s1 + 0x100] = a0\n 55938: sp = a0\n 55940: a0 = u64 [s1 + 0x158]\n 55944: a0 = i32 [a0]\n 55946: a1 = 0x3f\n 55949: jump [t0]\n      : @1998 (gas: 8)\n 55951: a0 = sp + 0xffffffffffffffe0\n 55954: a0 = a0 & 0xffffffffffffffe0\n 55957: u64 [s1 + 0x130] = a0\n 55961: sp = a0\n 55963: a0 = u64 [s1 + 0x110]\n 55967: a0 = i32 [a0]\n 55969: a1 = 0x3f\n 55972: jump [t0]\n      : @1999 (gas: 8)\n 55974: a1 = u64 [s1 + 0xd8]\n 55978: a1 = t1 <u a1\n 55981: a3 = u64 [s1 + 0xe0]\n 55985: a2 = t2 ^ a3\n 55988: a3 = t2 <u a3\n 55991: a3 = a1 if a2 == 0\n 55994: a1 = u64 [s1 + 0xe8]\n 55998: jump [t0]\n      : @2000 (gas: 10)\n 56000: u64 [s1 + 0xd8] = a0\n 56004: u64 [s1 + 0xe0] = a1\n 56008: a0 = u64 [s1 + 0xd0]\n 56012: a0 = a0 | a1\n 56015: u64 [s1 + 0xd0] = a0\n 56019: a0 = u64 [s1 + 0x118]\n 56023: a2 = a0 + 0xffffffffffffff80\n 56026: a0 = 0xffffffffffffffff\n 56029: a1 = 0xffffffffffffffff\n 56032: jump [t0]\n      : @2001 (gas: 10)\n 56034: a3 = s1 + a0\n 56037: a4 = a3 + 0x200\n 56041: a0 = u64 [a4 + 0x58]\n 56044: a1 = u64 [a4 + 0x60]\n 56047: a2 = u64 [a4 + 0x50]\n 56050: a3 = u64 [a4 + 0x48]\n 56053: a1 = a1 | a2\n 56056: a0 = a0 | a3\n 56059: a0 = a0 | a1\n 56062: jump [t0]\n      : @2002 (gas: 10)\n 56064: u64 [s1 + 264] = 0\n 56068: a0 = 0\n 56070: u64 [s1 + 248] = 0\n 56074: u64 [s1 + 192] = 0\n 56078: u64 [s1 + 272] = 0\n 56082: t1 = 0\n 56084: t2 = 0\n 56086: a4 = 0\n 56088: ra = 0\n 56090: jump [t0]\n      : @2003 (gas: 8)\n 56092: a0 = u64 [a2 + 0x8]\n 56095: a1 = i32 [a2 + 0x10]\n 56098: a2 = u64 [a2]\n 56100: a3 = reverse a0\n 56102: a0 = a3 << 0x20\n 56105: a1 = reverse a1\n 56107: a1 = a1 >> 0x20\n 56110: jump [t0]\n      : @2004 (gas: 6)\n 56112: sp = s0 + 0xffffffffffffffa0\n 56115: ra = u64 [sp + 0x58]\n 56118: s0 = u64 [sp + 0x50]\n 56121: s1 = u64 [sp + 0x48]\n 56124: sp = sp + 0x60\n 56127: jump [t0]\n      : @2005 (gas: 8)\n 56129: a0 = u64 [a4 + 0xb8]\n 56133: a1 = u64 [a4 + 0xc0]\n 56137: a2 = u64 [a4 + 0xb0]\n 56141: a3 = u64 [a4 + 0xa8]\n 56145: a1 = a1 | a2\n 56148: a0 = a0 | a3\n 56151: a0 = a0 | a1\n 56154: jump [t0]\n      : @2006 (gas: 5)\n 56156: a0 = sp + 0xffffffffffffffe0\n 56159: a2 = a0 & 0xffffffffffffffe0\n 56162: u64 [s1 + 0x158] = a2\n 56166: sp = a2\n 56168: jump [t0]\n      : @2007 (gas: 8)\n 56170: a0 = sp + 0xffffffffffffffe0\n 56173: a0 = a0 & 0xffffffffffffffe0\n 56176: u64 [s1 + 0x98] = a0\n 56180: sp = a0\n 56182: a0 = u64 [s1 + 0x100]\n 56186: a0 = i32 [a0]\n 56188: a1 = 0x3f\n 56191: jump [t0]\n      : @2008 (gas: 8)\n 56193: a0 = a0 + a4\n 56196: a3 = a3 + a1\n 56199: a5 = a3 <u a1\n 56202: a0 = a0 + a5\n 56205: ra = u64 [s1 + 0xe0]\n 56209: ra = ra + a3\n 56212: a3 = ra <u a3\n 56215: jump [t0]\n      : @2009 (gas: 9)\n 56217: sp = sp + 0xffffffffffffffc0\n 56220: u64 [sp + 0x38] = ra\n 56223: u64 [sp + 0x30] = s0\n 56226: u64 [sp + 0x28] = s1\n 56229: s0 = sp + 0x40\n 56232: sp = sp & 0xffffffffffffffe0\n 56235: s1 = a0\n 56237: i32 a0 = sp + 0\n 56239: jump [t0]\n      : @2010 (gas: 6)\n 56241: a1 = a3 << 0x3\n 56244: u64 [s1 + 0x118] = a1\n 56248: i32 a2 = 0x80 - a1\n 56252: a0 = 0xffffffffffffffff\n 56255: a1 = 0xffffffffffffffff\n 56258: jump [t0]\n      : @2011 (gas: 4)\n 56260: i32 a0 = a0 + 0xfffffffffffff8d8\n 56264: a3 = s1 + a0\n 56267: a4 = a3 + 0x100\n 56271: jump [t0]\n      : @2012 (gas: 6)\n 56273: a1 = a2 & ~a1\n 56276: a2 = u64 [s1 + 0x108]\n 56280: a2 = a2 & ~a5\n 56283: a3 = u64 [s1 + 0x110]\n 56287: a3 = a3 & ~a4\n 56290: jump [t0]\n      : @2013 (gas: 7)\n 56292: a1 = u64 [s1 + 0xd8]\n 56296: a1 = a2 <u a1\n 56299: a3 = u64 [s1 + 0xe0]\n 56303: a4 = a5 ^ a3\n 56306: a3 = a5 <u a3\n 56309: a3 = a1 if a4 == 0\n 56312: jump [t0]\n      : @2014 (gas: 4)\n 56314: a0 = u64 [s1 + 0x158]\n 56318: a0 = i32 [a0]\n 56320: a1 = 0x23\n 56323: jump [t0]\n      : @2015 (gas: 10)\n 56325: a0 = u64 [a2 + 0x80]\n 56329: a1 = s1 + 0x100\n 56333: u64 [a1 + 0x58] = a0\n 56336: a0 = u64 [a2 + 0x78]\n 56339: u64 [a1 + 0x50] = a0\n 56342: a0 = u64 [a2 + 0x70]\n 56345: u64 [a1 + 0x48] = a0\n 56348: a0 = u64 [a2 + 0x68]\n 56351: u64 [a1 + 0x40] = a0\n 56354: jump [t0]\n      : @2016 (gas: 4)\n 56356: a0 = 0x30d8\n 56360: a3 = s1 + a0\n 56363: a4 = a3 + 0x600\n 56367: jump [t0]\n      : @2017 (gas: 4)\n 56369: a0 = 0x30d8\n 56373: a3 = s1 + a0\n 56376: a4 = a3 + 0x100\n 56380: jump [t0]\n      : @2018 (gas: 7)\n 56382: a1 = a0 | a3\n 56385: a1 = a1 | a2\n 56388: a1 = a1 >> 0x20\n 56391: a2 = a2 | a3\n 56394: a2 = a2 << 0x20\n 56397: a1 = a1 | a2\n 56400: jump [t0]\n      : @2019 (gas: 6)\n 56402: a0 = u64 [a3 + 0x18]\n 56405: a1 = u64 [a3 + 0x10]\n 56408: a2 = u64 [a3 + 0x8]\n 56411: a3 = u64 [a3]\n 56413: a0 = reverse a0\n 56415: jump [t0]\n      : @2020 (gas: 2)\n 56417: a3 = a2 & 0x40\n 56420: jump @2024 if a3 != 0\n      : @2021 (gas: 1)\n 56423: jump @2023 if a2 == 0\n      : @2022 (gas: 6)\n 56426: i32 a3 = 0x40 - a2\n 56429: a3 = a1 << a3\n 56432: a1 = a1 >> a2\n 56435: a0 = a0 >> a2\n 56438: a0 = a0 | a3\n 56441: ret\n      : @2023 (gas: 1)\n 56443: ret\n      : @2024 (gas: 4)\n 56445: a0 = a2 + 0xffffffffffffffc0\n 56448: a0 = a1 >> a0\n 56451: a1 = 0\n 56453: ret\n      : @2025 (gas: 2)\n 56455: a3 = a2 & 0x40\n 56458: jump @2029 if a3 != 0\n      : @2026 (gas: 1)\n 56461: jump @2028 if a2 == 0\n      : @2027 (gas: 6)\n 56464: i32 a3 = 0x40 - a2\n 56467: a3 = a0 >> a3\n 56470: a0 = a0 << a2\n 56473: a1 = a1 << a2\n 56476: a1 = a1 | a3\n 56479: ret\n      : @2028 (gas: 1)\n 56481: ret\n      : @2029 (gas: 4)\n 56483: a1 = a2 + 0xffffffffffffffc0\n 56486: a1 = a0 << a1\n 56489: a0 = 0\n 56491: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","buy(uint256)":"d96a094a","createToken(string,uint256)":"72b3b620","fetchItemsListed()":"45f8fa80","fetchMarketItems()":"0f08efe0","fetchMyNFTs()":"202e3740","getApproved(uint256)":"081812fc","getListingPrice()":"12e85585","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","resellToken(uint256,uint256)":"e219fc75","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","updateListingPrice(uint256)":"ae677aa3"}},"irOptimized":"/// @use-src 1:\"@openzeppelin/contracts/interfaces/IERC4906.sol\", 3:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 4:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 5:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 7:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\", 8:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 13:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 14:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 18:\"contracts/NftMarketplace.sol\"\nobject \"NFTMarketplace_7212\" {\n    code {\n        {\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let size := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            size := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 9)\n            mstore(add(memPtr_1, 32), \"DOT's NFT\")\n            let memPtr_2 := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            size_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let memPtr_3 := mload(64)\n            let newFreePtr_1 := add(memPtr_3, 64)\n            if or(gt(newFreePtr_1, sub(shl(64, 1), 1)), lt(newFreePtr_1, memPtr_3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr_1)\n            memPtr_2 := memPtr_3\n            mstore(memPtr_3, 6)\n            mstore(add(memPtr_3, 32), \"DOTNFT\")\n            let newLen := mload(memPtr_1)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n            }\n            let _1 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            length := shr(1, _1)\n            let outOfPlaceEncoding := and(_1, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _2 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(memPtr_1, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr_1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr_1, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(memPtr_3)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n            }\n            let _3 := sload(1)\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            length_1 := shr(1, _3)\n            let outOfPlaceEncoding_1 := and(_3, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 1)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _4 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _4) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 1)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr_3, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr_3, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(1, add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr_3, srcOffset_1))\n                }\n                sstore(1, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            sstore(9, /** @src 18:335:348  \"0.00025 ether\" */ 0xe35fa931a000)\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            sstore(/** @src 18:942:969  \"owner = payable(msg.sender)\" */ 0x0a, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 18:942:969  \"owner = payable(msg.sender)\" */ 0x0a), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ not(sub(shl(160, 1), 1))), /** @src 18:958:968  \"msg.sender\" */ caller()))\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            let _5 := mload(64)\n            let _6 := datasize(\"NFTMarketplace_7212_deployed\")\n            codecopy(_5, dataoffset(\"NFTMarketplace_7212_deployed\"), _6)\n            return(_5, _6)\n        }\n    }\n    /// @use-src 4:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 7:\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\", 9:\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/Strings.sol\", 13:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 15:\"@openzeppelin/contracts/utils/math/Math.sol\", 18:\"contracts/NftMarketplace.sol\"\n    object \"NFTMarketplace_7212_deployed\" {\n        code {\n            {\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        /// @src 7:1063:1138  \"interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 7:1063:1098  \"interfaceId == ERC4906_INTERFACE_ID\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _2, shl(225, 0x24832483))\n                        /// @src 7:1063:1138  \"interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            /// @src 4:1697:1801  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            let expr_1 := /** @src 4:1697:1737  \"interfaceId == type(IERC721).interfaceId\" */ eq(_2, /** @src 4:1712:1737  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                            /// @src 4:1697:1801  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            if iszero(expr_1)\n                            {\n                                expr_1 := /** @src 4:1753:1801  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_2, /** @src 4:1768:1801  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                            }\n                            /// @src 4:1697:1853  \"interfaceId == type(IERC721).interfaceId ||...\"\n                            let expr_2 := expr_1\n                            if iszero(expr_1)\n                            {\n                                expr_2 := /** @src 13:862:902  \"interfaceId == type(IERC165).interfaceId\" */ eq(_2, /** @src 13:877:902  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                            }\n                            /// @src 7:1063:1138  \"interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId)\"\n                            expr := expr_2\n                        }\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(_1, iszero(iszero(expr)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(0)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr, length)\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(0, 0)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 0x20) }\n                            {\n                                mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 0x20)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(64)\n                        mstore(memPos, 0x20)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, 0x20)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 4:3582:3604  \"_requireOwned(tokenId)\"\n                        pop(fun_requireOwned(value_1))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(0, value_1)\n                        mstore(32, 4)\n                        let cleaned := and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, cleaned)\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_16641()\n                        let value_2 := calldataload(36)\n                        /// @src 4:15017:15039  \"_requireOwned(tokenId)\"\n                        let expr_3 := fun_requireOwned(value_2)\n                        /// @src 4:15167:15202  \"auth != address(0) && owner != auth\"\n                        let expr_4 := /** @src 4:15167:15185  \"auth != address(0)\" */ iszero(iszero(/** @src 10:735:745  \"msg.sender\" */ caller()))\n                        /// @src 4:15167:15202  \"auth != address(0) && owner != auth\"\n                        if expr_4\n                        {\n                            expr_4 := /** @src 4:15189:15202  \"owner != auth\" */ iszero(eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 4:15189:15202  \"owner != auth\" */ expr_3, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 10:735:745  \"msg.sender\" */ caller()))\n                        }\n                        /// @src 4:15167:15236  \"auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)\"\n                        let expr_5 := expr_4\n                        if expr_4\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(0, and(expr_3, sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 4:4038:4056  \"_operatorApprovals\" */ 0x05)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let dataSlot := keccak256(0, 64)\n                            /// @src 4:4038:4073  \"_operatorApprovals[owner][operator]\"\n                            let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 4:4038:4063  \"_operatorApprovals[owner]\" */ dataSlot)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                            /// @src 4:15167:15236  \"auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)\"\n                            expr_5 := /** @src 4:15206:15236  \"!isApprovedForAll(owner, auth)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 4:4038:4073  \"_operatorApprovals[owner][operator]\" */ dataSlot_1), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0xff))\n                        }\n                        /// @src 4:15163:15305  \"if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {...\"\n                        if expr_5\n                        {\n                            /// @src 4:15263:15290  \"ERC721InvalidApprover(auth)\"\n                            mstore(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, /** @src 4:15263:15290  \"ERC721InvalidApprover(auth)\" */ shl(224, 0xa9fbf51f))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(4, /** @src 10:735:745  \"msg.sender\" */ caller())\n                            /// @src 4:15263:15290  \"ERC721InvalidApprover(auth)\"\n                            revert(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 36)\n                        }\n                        /// @src 4:15357:15385  \"Approval(owner, to, tokenId)\"\n                        log4(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 0, /** @src 4:15357:15385  \"Approval(owner, to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 4:15357:15385  \"Approval(owner, to, tokenId)\" */ expr_3, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), and(/** @src 4:15357:15385  \"Approval(owner, to, tokenId)\" */ value0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 4:15357:15385  \"Approval(owner, to, tokenId)\" */ value_2)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(0, value_2)\n                        mstore(0x20, 4)\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(/** @src 4:15420:15444  \"_tokenApprovals[tokenId]\" */ dataSlot_2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 4:15420:15444  \"_tokenApprovals[tokenId]\" */ dataSlot_2), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 4:15420:15449  \"_tokenApprovals[tokenId] = to\" */ value0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))))\n                        return(0, 0)\n                    }\n                    case 0x0f08efe0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _3 := sload(/** @src 18:3470:3479  \"_tokenIds\" */ 0x07)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let diff := sub(_3, sload(/** @src 18:3522:3532  \"_itemsSold\" */ 0x08))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        if gt(diff, _3)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 18:3540:3561  \"uint currentIndex = 0\"\n                        let var_currentIndex := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:3598:3631  \"new MarketItem[](unsoldItemCount)\"\n                        let expr_mpos := allocate_and_zero_memory_array_array_struct_MarketItem_dyn(diff)\n                        /// @src 18:3644:3654  \"uint i = 0\"\n                        let var_i := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:3639:3938  \"for (uint i = 0; i < itemCount; i++) {...\"\n                        for { }\n                        /** @src 18:3656:3669  \"i < itemCount\" */ lt(var_i, _3)\n                        /// @src 18:3644:3654  \"uint i = 0\"\n                        {\n                            /// @src 18:3671:3674  \"i++\"\n                            var_i := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(/** @src 18:3671:3674  \"i++\" */ var_i, /** @src 18:3710:3711  \"1\" */ 0x01)\n                        }\n                        /// @src 18:3671:3674  \"i++\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let sum := add(var_i, /** @src 18:3710:3711  \"1\" */ 0x01)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let _4 := gt(var_i, sum)\n                            if _4\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, sum)\n                            mstore(0x20, /** @src 18:3691:3705  \"idToMarketItem\" */ 0x0b)\n                            /// @src 18:3687:3930  \"if (idToMarketItem[i + 1].owner == address(this)) {...\"\n                            if /** @src 18:3691:3735  \"idToMarketItem[i + 1].owner == address(this)\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 18:3691:3718  \"idToMarketItem[i + 1].owner\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:3691:3718  \"idToMarketItem[i + 1].owner\" */ 2)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 18:3730:3734  \"this\" */ address())\n                            /// @src 18:3687:3930  \"if (idToMarketItem[i + 1].owner == address(this)) {...\"\n                            {\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                _4 := 0\n                                mstore(0, sum)\n                                mstore(0x20, /** @src 18:3691:3705  \"idToMarketItem\" */ 0x0b)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let dataSlot_3 := keccak256(0, 64)\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_16643(memPtr_1)\n                                mstore(memPtr_1, sload(dataSlot_3))\n                                mstore(add(memPtr_1, 0x20), and(sload(add(dataSlot_3, /** @src 18:3710:3711  \"1\" */ 0x01)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(memPtr_1, 64), and(sload(add(dataSlot_3, /** @src 18:3691:3718  \"idToMarketItem[i + 1].owner\" */ 2)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(memPtr_1, 96), sload(add(dataSlot_3, 3)))\n                                mstore(add(memPtr_1, 128), iszero(iszero(and(sload(add(dataSlot_3, 4)), 0xff))))\n                                /// @src 18:3856:3889  \"items[currentIndex] = currentItem\"\n                                mstore(memory_array_index_access_struct_MarketItem_dyn(expr_mpos, var_currentIndex), memPtr_1)\n                                pop(memory_array_index_access_struct_MarketItem_dyn(expr_mpos, var_currentIndex))\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let sum_1 := add(var_currentIndex, /** @src 18:3710:3711  \"1\" */ 0x01)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                if gt(var_currentIndex, sum_1)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 18:3902:3919  \"currentIndex += 1\"\n                                var_currentIndex := sum_1\n                            }\n                        }\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_struct_MarketItem_dyn(memPos_2, expr_mpos), memPos_2))\n                    }\n                    case 0x12e85585 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _5 := sload(/** @src 18:1254:1266  \"listingPrice\" */ 0x09)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _5)\n                        return(memPos_3, 32)\n                    }\n                    case 0x202e3740 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _6 := sload(/** @src 18:4067:4076  \"_tokenIds\" */ 0x07)\n                        /// @src 18:4084:4102  \"uint itemCount = 0\"\n                        let var_itemCount := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4110:4131  \"uint currentIndex = 0\"\n                        let var_currentIndex_1 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4146:4156  \"uint i = 0\"\n                        let var_i_1 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4141:4317  \"for (uint i = 0; i < totalItemCount; i++) {...\"\n                        for { }\n                        /** @src 18:4158:4176  \"i < totalItemCount\" */ lt(var_i_1, _6)\n                        /// @src 18:4146:4156  \"uint i = 0\"\n                        {\n                            /// @src 18:4178:4181  \"i++\"\n                            var_i_1 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(/** @src 18:4178:4181  \"i++\" */ var_i_1, /** @src 18:4248:4249  \"1\" */ 0x01)\n                        }\n                        /// @src 18:4178:4181  \"i++\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let sum_2 := add(var_i_1, /** @src 18:4248:4249  \"1\" */ 0x01)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            if gt(var_i_1, sum_2)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, sum_2)\n                            mstore(0x20, /** @src 18:4229:4243  \"idToMarketItem\" */ 0x0b)\n                            /// @src 18:4225:4309  \"if (idToMarketItem[i + 1].owner == msg.sender) {...\"\n                            if /** @src 18:4229:4270  \"idToMarketItem[i + 1].owner == msg.sender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 18:4229:4256  \"idToMarketItem[i + 1].owner\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:4229:4256  \"idToMarketItem[i + 1].owner\" */ 2)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 18:4260:4270  \"msg.sender\" */ caller())\n                            /// @src 18:4225:4309  \"if (idToMarketItem[i + 1].owner == msg.sender) {...\"\n                            {\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let sum_3 := add(var_itemCount, /** @src 18:4248:4249  \"1\" */ 0x01)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                if gt(var_itemCount, sum_3)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 18:4284:4298  \"itemCount += 1\"\n                                var_itemCount := sum_3\n                            }\n                        }\n                        /// @src 18:4353:4380  \"new MarketItem[](itemCount)\"\n                        let expr_mpos_1 := allocate_and_zero_memory_array_array_struct_MarketItem_dyn(var_itemCount)\n                        /// @src 18:4393:4403  \"uint i = 0\"\n                        let var_i_2 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4388:4685  \"for (uint i = 0; i < totalItemCount; i++) {...\"\n                        for { }\n                        /** @src 18:4405:4423  \"i < totalItemCount\" */ lt(var_i_2, _6)\n                        /// @src 18:4393:4403  \"uint i = 0\"\n                        {\n                            /// @src 18:4425:4428  \"i++\"\n                            var_i_2 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(/** @src 18:4425:4428  \"i++\" */ var_i_2, /** @src 18:4248:4249  \"1\" */ 0x01)\n                        }\n                        /// @src 18:4425:4428  \"i++\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let sum_4 := add(var_i_2, /** @src 18:4248:4249  \"1\" */ 0x01)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let _7 := gt(var_i_2, sum_4)\n                            if _7\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, sum_4)\n                            mstore(0x20, /** @src 18:4229:4243  \"idToMarketItem\" */ 0x0b)\n                            /// @src 18:4441:4677  \"if (idToMarketItem[i + 1].owner == msg.sender) {...\"\n                            if /** @src 18:4445:4486  \"idToMarketItem[i + 1].owner == msg.sender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 18:4445:4472  \"idToMarketItem[i + 1].owner\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:4229:4256  \"idToMarketItem[i + 1].owner\" */ 2)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 18:4260:4270  \"msg.sender\" */ caller())\n                            /// @src 18:4441:4677  \"if (idToMarketItem[i + 1].owner == msg.sender) {...\"\n                            {\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                _7 := 0\n                                mstore(0, sum_4)\n                                mstore(0x20, /** @src 18:4229:4243  \"idToMarketItem\" */ 0x0b)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let dataSlot_4 := keccak256(0, 64)\n                                let memPtr_2 := mload(64)\n                                finalize_allocation_16643(memPtr_2)\n                                mstore(memPtr_2, sload(dataSlot_4))\n                                mstore(add(memPtr_2, 0x20), and(sload(add(dataSlot_4, /** @src 18:4248:4249  \"1\" */ 0x01)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(memPtr_2, 64), and(sload(add(dataSlot_4, /** @src 18:4229:4256  \"idToMarketItem[i + 1].owner\" */ 2)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(memPtr_2, 96), sload(add(dataSlot_4, 3)))\n                                mstore(add(memPtr_2, 128), iszero(iszero(and(sload(add(dataSlot_4, 4)), 0xff))))\n                                /// @src 18:4604:4637  \"items[currentIndex] = currentItem\"\n                                mstore(memory_array_index_access_struct_MarketItem_dyn(expr_mpos_1, var_currentIndex_1), memPtr_2)\n                                pop(memory_array_index_access_struct_MarketItem_dyn(expr_mpos_1, var_currentIndex_1))\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let sum_5 := add(var_currentIndex_1, /** @src 18:4248:4249  \"1\" */ 0x01)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                if gt(var_currentIndex_1, sum_5)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 18:4649:4666  \"currentIndex += 1\"\n                                var_currentIndex_1 := sum_5\n                            }\n                        }\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let memPos_4 := mload(64)\n                        return(memPos_4, sub(abi_encode_array_struct_MarketItem_dyn(memPos_4, expr_mpos_1), memPos_4))\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        fun_transferFrom(param, param_1, param_2)\n                        return(0, 0)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(0, 0) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let size := /** @src -1:-1:-1 */ 0\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let length_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        length_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        size := 0x20\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, 0x20)\n                        mstore(memPtr_3, 0)\n                        /// @src 4:4872:4911  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                        fun_safeTransferFrom(param_3, param_4, param_5, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ memPtr_3)\n                        return(0, 0)\n                    }\n                    case 0x45f8fa80 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _8 := sload(/** @src 18:4817:4826  \"_tokenIds\" */ 0x07)\n                        /// @src 18:4834:4852  \"uint itemCount = 0\"\n                        let var_itemCount_1 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4860:4881  \"uint currentIndex = 0\"\n                        let var_currentIndex_2 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4895:4905  \"uint i = 0\"\n                        let var_i_3 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:4890:5035  \"for (uint i = 0; i < totalItemCount; i++) {...\"\n                        for { }\n                        /** @src 18:4907:4925  \"i < totalItemCount\" */ lt(var_i_3, _8)\n                        /// @src 18:4895:4905  \"uint i = 0\"\n                        {\n                            /// @src 18:4927:4930  \"i++\"\n                            var_i_3 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(/** @src 18:4927:4930  \"i++\" */ var_i_3, /** @src 18:4965:4966  \"1\" */ 0x01)\n                        }\n                        /// @src 18:4927:4930  \"i++\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let sum_6 := add(var_i_3, /** @src 18:4965:4966  \"1\" */ 0x01)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            if gt(var_i_3, sum_6)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, sum_6)\n                            mstore(0x20, /** @src 18:4946:4960  \"idToMarketItem\" */ 0x0b)\n                            /// @src 18:4942:5027  \"if (idToMarketItem[i + 1].seller == msg.sender) {...\"\n                            if /** @src 18:4946:4988  \"idToMarketItem[i + 1].seller == msg.sender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 18:4946:4974  \"idToMarketItem[i + 1].seller\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:4965:4966  \"1\" */ 0x01)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 18:4978:4988  \"msg.sender\" */ caller())\n                            /// @src 18:4942:5027  \"if (idToMarketItem[i + 1].seller == msg.sender) {...\"\n                            {\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let sum_7 := add(var_itemCount_1, /** @src 18:4965:4966  \"1\" */ 0x01)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                if gt(var_itemCount_1, sum_7)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 18:5002:5016  \"itemCount += 1\"\n                                var_itemCount_1 := sum_7\n                            }\n                        }\n                        /// @src 18:5071:5098  \"new MarketItem[](itemCount)\"\n                        let expr_mpos_2 := allocate_and_zero_memory_array_array_struct_MarketItem_dyn(var_itemCount_1)\n                        /// @src 18:5111:5121  \"uint i = 0\"\n                        let var_i_4 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:5106:5403  \"for (uint i = 0; i < totalItemCount; i++) {...\"\n                        for { }\n                        /** @src 18:5123:5141  \"i < totalItemCount\" */ lt(var_i_4, _8)\n                        /// @src 18:5111:5121  \"uint i = 0\"\n                        {\n                            /// @src 18:5143:5146  \"i++\"\n                            var_i_4 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(/** @src 18:5143:5146  \"i++\" */ var_i_4, /** @src 18:4965:4966  \"1\" */ 0x01)\n                        }\n                        /// @src 18:5143:5146  \"i++\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let sum_8 := add(var_i_4, /** @src 18:4965:4966  \"1\" */ 0x01)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let _9 := gt(var_i_4, sum_8)\n                            if _9\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            mstore(0, sum_8)\n                            mstore(0x20, /** @src 18:4946:4960  \"idToMarketItem\" */ 0x0b)\n                            /// @src 18:5158:5395  \"if (idToMarketItem[i + 1].seller == msg.sender) {...\"\n                            if /** @src 18:5162:5204  \"idToMarketItem[i + 1].seller == msg.sender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 18:5162:5190  \"idToMarketItem[i + 1].seller\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:4965:4966  \"1\" */ 0x01)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)), /** @src 18:4978:4988  \"msg.sender\" */ caller())\n                            /// @src 18:5158:5395  \"if (idToMarketItem[i + 1].seller == msg.sender) {...\"\n                            {\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                _9 := 0\n                                mstore(0, sum_8)\n                                mstore(0x20, /** @src 18:4946:4960  \"idToMarketItem\" */ 0x0b)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let dataSlot_5 := keccak256(0, 64)\n                                let memPtr_4 := mload(64)\n                                finalize_allocation_16643(memPtr_4)\n                                mstore(memPtr_4, sload(dataSlot_5))\n                                mstore(add(memPtr_4, 0x20), and(sload(add(dataSlot_5, /** @src 18:4965:4966  \"1\" */ 0x01)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(memPtr_4, 64), and(sload(add(dataSlot_5, 2)), sub(shl(160, 1), 1)))\n                                mstore(add(memPtr_4, 96), sload(add(dataSlot_5, 3)))\n                                mstore(add(memPtr_4, 128), iszero(iszero(and(sload(add(dataSlot_5, 4)), 0xff))))\n                                /// @src 18:5322:5355  \"items[currentIndex] = currentItem\"\n                                mstore(memory_array_index_access_struct_MarketItem_dyn(expr_mpos_2, var_currentIndex_2), memPtr_4)\n                                pop(memory_array_index_access_struct_MarketItem_dyn(expr_mpos_2, var_currentIndex_2))\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                let sum_9 := add(var_currentIndex_2, /** @src 18:4965:4966  \"1\" */ 0x01)\n                                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                                if gt(var_currentIndex_2, sum_9)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                /// @src 18:5367:5384  \"currentIndex += 1\"\n                                var_currentIndex_2 := sum_9\n                            }\n                        }\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_array_struct_MarketItem_dyn(memPos_5, expr_mpos_2), memPos_5))\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 4:2266:2295  \"return _requireOwned(tokenId)\"\n                        let var := /** @src 4:2273:2295  \"_requireOwned(tokenId)\" */ fun_requireOwned(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ calldataload(4))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, and(var, sub(shl(160, 1), 1)))\n                        return(memPos_6, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let _10 := and(abi_decode_address_16641(), sub(shl(160, 1), 1))\n                        /// @src 4:2001:2088  \"if (owner == address(0)) {...\"\n                        if /** @src 4:2005:2024  \"owner == address(0)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _10)\n                        /// @src 4:2001:2088  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 4:2047:2077  \"ERC721InvalidOwner(address(0))\"\n                            mstore(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, /** @src 4:2047:2077  \"ERC721InvalidOwner(address(0))\" */ shl(226, 0x22718ad9))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(4, 0)\n                            /// @src 4:2047:2077  \"ERC721InvalidOwner(address(0))\"\n                            revert(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 36)\n                        }\n                        mstore(0, _10)\n                        mstore(32, /** @src 4:2104:2113  \"_balances\" */ 0x03)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let _11 := sload(keccak256(0, 64))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _11)\n                        return(memPos_7, 32)\n                    }\n                    case 0x72b3b620 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let array := abi_decode_available_length_string(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                        let value_3 := calldataload(36)\n                        /// @src 18:1378:1389  \"_tokenIds++\"\n                        let _12 := increment_uint256(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sload(/** @src 18:1378:1389  \"_tokenIds++\" */ 0x07))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        sstore(/** @src 18:1378:1389  \"_tokenIds++\" */ 0x07, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _12)\n                        /// @src 4:10041:10128  \"if (to == address(0)) {...\"\n                        if /** @src 4:10045:10061  \"to == address(0)\" */ iszero(/** @src 18:1443:1453  \"msg.sender\" */ caller())\n                        /// @src 4:10041:10128  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\"\n                            mstore(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, /** @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(4, 0)\n                            /// @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\"\n                            revert(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 36)\n                        }\n                        /// @src 4:10203:10299  \"if (previousOwner != address(0)) {...\"\n                        if /** @src 4:10207:10234  \"previousOwner != address(0)\" */ iszero(iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 4:10161:10193  \"_update(to, tokenId, address(0))\" */ fun_update(/** @src 18:1443:1453  \"msg.sender\" */ caller(), /** @src 4:10161:10193  \"_update(to, tokenId, address(0))\" */ _12), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 4:10203:10299  \"if (previousOwner != address(0)) {...\"\n                        {\n                            /// @src 4:10257:10288  \"ERC721InvalidSender(address(0))\"\n                            mstore(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, /** @src 4:10257:10288  \"ERC721InvalidSender(address(0))\" */ shl(225, 0x39e35637))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(4, 0)\n                            /// @src 4:10257:10288  \"ERC721InvalidSender(address(0))\"\n                            revert(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 36)\n                        }\n                        mstore(0, _12)\n                        mstore(0x20, /** @src 7:2023:2033  \"_tokenURIs\" */ 0x06)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        let newLen := mload(array)\n                        if gt(newLen, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        let _13 := extract_byte_array_length(sload(dataSlot_6))\n                        if gt(_13, 0x1f)\n                        {\n                            mstore(0, dataSlot_6)\n                            let data := keccak256(0, 0x20)\n                            let deleteStart := add(data, shr(5, add(newLen, 0x1f)))\n                            if lt(newLen, 0x20) { deleteStart := data }\n                            let _14 := add(data, shr(5, add(_13, 0x1f)))\n                            let start := deleteStart\n                            for { } lt(start, _14) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 0x20\n                        switch gt(newLen, 0x1f)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, dataSlot_6)\n                            let dstPtr := keccak256(0, srcOffset)\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd) { i_1 := add(i_1, 0x20) }\n                            {\n                                sstore(dstPtr, mload(add(array, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 0x20)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(array, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(dataSlot_6, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_4 := 0\n                            if newLen\n                            {\n                                value_4 := mload(add(array, srcOffset))\n                            }\n                            sstore(dataSlot_6, or(and(value_4, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        /// @src 7:2069:2092  \"MetadataUpdate(tokenId)\"\n                        let _15 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ mload(64)\n                        mstore(_15, _12)\n                        /// @src 7:2069:2092  \"MetadataUpdate(tokenId)\"\n                        log1(_15, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x20, /** @src 7:2069:2092  \"MetadataUpdate(tokenId)\" */ 0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        if /** @src 18:1673:1682  \"price > 0\" */ iszero(value_3)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 0x20)\n                            mstore(add(memPtr_5, 36), 28)\n                            mstore(add(memPtr_5, 68), \"Price must be at least 1 wei\")\n                            revert(memPtr_5, 100)\n                        }\n                        if iszero(/** @src 18:1732:1757  \"msg.value == listingPrice\" */ eq(/** @src 18:1732:1741  \"msg.value\" */ callvalue(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sload(/** @src 18:1745:1757  \"listingPrice\" */ 0x09)))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 0x20)\n                            mstore(add(memPtr_6, 36), 36)\n                            mstore(add(memPtr_6, 68), \"Price must be equal to listing p\")\n                            mstore(add(memPtr_6, 100), \"rice\")\n                            revert(memPtr_6, 132)\n                        }\n                        let memPtr_7 := mload(64)\n                        finalize_allocation_16643(memPtr_7)\n                        mstore(memPtr_7, _12)\n                        /// @src 18:1835:1961  \"MarketItem(...\"\n                        let _16 := add(memPtr_7, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x20)\n                        mstore(_16, /** @src 18:1443:1453  \"msg.sender\" */ caller())\n                        /// @src 18:1835:1961  \"MarketItem(...\"\n                        let _17 := add(memPtr_7, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 64)\n                        mstore(_17, /** @src 18:1917:1921  \"this\" */ address())\n                        /// @src 18:1835:1961  \"MarketItem(...\"\n                        let _18 := add(memPtr_7, 96)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(_18, value_3)\n                        /// @src 18:1835:1961  \"MarketItem(...\"\n                        let _19 := add(memPtr_7, 128)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(_19, 0)\n                        mstore(0, _12)\n                        mstore(0x20, /** @src 18:1808:1822  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        sstore(dataSlot_7, mload(memPtr_7))\n                        let value_5 := and(mload(_16), sub(shl(160, 1), 1))\n                        let slot := add(dataSlot_7, 1)\n                        sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value_5, sub(shl(160, 1), 1))))\n                        let value_6 := and(mload(_17), sub(shl(160, 1), 1))\n                        let slot_1 := add(dataSlot_7, 2)\n                        sstore(slot_1, or(and(sload(slot_1), shl(160, 0xffffffffffffffffffffffff)), and(value_6, sub(shl(160, 1), 1))))\n                        sstore(add(dataSlot_7, 3), mload(_18))\n                        update_storage_value_offsett_bool_to_bool(add(dataSlot_7, 4), iszero(iszero(mload(_19))))\n                        /// @src 18:2008:2015  \"tokenId\"\n                        fun_transfer(/** @src 18:1443:1453  \"msg.sender\" */ caller(), /** @src 18:1917:1921  \"this\" */ address(), /** @src 18:2008:2015  \"tokenId\" */ _12)\n                        /// @src 18:2029:2144  \"MarketItemCreated(...\"\n                        let _20 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ mload(64)\n                        mstore(_20, /** @src 18:1443:1453  \"msg.sender\" */ caller())\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(add(_20, 0x20), /** @src 18:1917:1921  \"this\" */ address())\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(add(_20, 64), value_3)\n                        mstore(add(_20, /** @src 18:1835:1961  \"MarketItem(...\" */ 96), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0)\n                        /// @src 18:2029:2144  \"MarketItemCreated(...\"\n                        log2(_20, /** @src 18:1835:1961  \"MarketItem(...\" */ 128, /** @src 18:2029:2144  \"MarketItemCreated(...\" */ 0xb640004f1d14576d0c209e240cad0410e0d8c0c33a09375861fbadae2588a98d, _12)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _12)\n                        return(memPos_8, 0x20)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_8 := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(/** @src 4:2596:2603  \"_symbol\" */ 0x01)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let length_2 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr_8, length_2)\n                        switch and(slotValue_1, /** @src 4:2596:2603  \"_symbol\" */ 0x01)\n                        case /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0 {\n                            mstore(add(memPtr_8, 0x20), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_8, shl(5, iszero(iszero(length_2)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 4:2596:2603  \"_symbol\" */ 0x01)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_2 := 0\n                            for { } lt(i_2, length_2) { i_2 := add(i_2, 0x20) }\n                            {\n                                mstore(add(add(memPtr_8, i_2), 0x20), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 4:2596:2603  \"_symbol\" */ 0x01)\n                            }\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            ret_1 := add(add(memPtr_8, i_2), 0x20)\n                        }\n                        finalize_allocation(memPtr_8, sub(ret_1, memPtr_8))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, 0x20)\n                        return(memPos_9, sub(abi_encode_string(memPtr_8, add(memPos_9, 0x20)), memPos_9))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_16641()\n                        let value_7 := calldataload(36)\n                        let _21 := iszero(iszero(value_7))\n                        if iszero(eq(value_7, _21)) { revert(0, 0) }\n                        let _22 := and(/** @src 4:15772:15794  \"operator == address(0)\" */ value0_1, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                        /// @src 4:15768:15859  \"if (operator == address(0)) {...\"\n                        if /** @src 4:15772:15794  \"operator == address(0)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _22)\n                        /// @src 4:15768:15859  \"if (operator == address(0)) {...\"\n                        {\n                            /// @src 4:15817:15848  \"ERC721InvalidOperator(operator)\"\n                            mstore(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, /** @src 4:15817:15848  \"ERC721InvalidOperator(operator)\" */ shl(227, 0x0b611743))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(4, _22)\n                            /// @src 4:15817:15848  \"ERC721InvalidOperator(operator)\"\n                            revert(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 10:735:745  \"msg.sender\" */ caller())\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(32, /** @src 4:15868:15886  \"_operatorApprovals\" */ 0x05)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let dataSlot_8 := keccak256(0, 64)\n                        /// @src 4:15868:15903  \"_operatorApprovals[owner][operator]\"\n                        let dataSlot_9 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _22)\n                        mstore(0x20, /** @src 4:15868:15893  \"_operatorApprovals[owner]\" */ dataSlot_8)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        dataSlot_9 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                        /// @src 4:15868:15914  \"_operatorApprovals[owner][operator] = approved\"\n                        update_storage_value_offsett_bool_to_bool(/** @src 4:15868:15903  \"_operatorApprovals[owner][operator]\" */ dataSlot_9, /** @src 4:15868:15914  \"_operatorApprovals[owner][operator] = approved\" */ value_7)\n                        /// @src 4:15929:15970  \"ApprovalForAll(owner, operator, approved)\"\n                        let _23 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ mload(64)\n                        mstore(_23, _21)\n                        /// @src 4:15929:15970  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_23, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32, /** @src 4:15929:15970  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 4:15929:15970  \"ApprovalForAll(owner, operator, approved)\" */ _22)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        return(0, 0)\n                    }\n                    case 0xae677aa3 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let cleaned_1 := and(sload(/** @src 18:1061:1066  \"owner\" */ 0x0a), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                        if iszero(/** @src 18:1061:1080  \"owner == msg.sender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned_1, /** @src 18:1070:1080  \"msg.sender\" */ caller()))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 48)\n                            mstore(add(memPtr_9, 68), \"Only marketplace owner can updat\")\n                            mstore(add(memPtr_9, 100), \"e listing price.\")\n                            revert(memPtr_9, 132)\n                        }\n                        sstore(/** @src 18:1141:1169  \"listingPrice = _listingPrice\" */ 0x09, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_16641()\n                        let value1 := abi_decode_address()\n                        let offset_1 := calldataload(100)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(0, 0) }\n                        fun_safeTransferFrom(value0_2, value1, calldataload(68), abi_decode_available_length_string(add(offset_1, 36), calldataload(add(4, offset_1)), calldatasize()))\n                        return(0, 0)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret_2 := fun_tokenURI(calldataload(4))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, 32)\n                        return(memPos_10, sub(abi_encode_string(ret_2, add(memPos_10, 32)), memPos_10))\n                    }\n                    case 0xd96a094a {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_8 := calldataload(4)\n                        mstore(0, value_8)\n                        mstore(32, /** @src 18:2770:2784  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let _24 := sload(/** @src 18:2770:2799  \"idToMarketItem[tokenId].price\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:2770:2799  \"idToMarketItem[tokenId].price\" */ 3))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(0, value_8)\n                        mstore(32, /** @src 18:2770:2784  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let cleaned_2 := and(sload(/** @src 18:2832:2862  \"idToMarketItem[tokenId].seller\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), 1)), sub(shl(160, 1), 1))\n                        if iszero(/** @src 18:2878:2896  \"msg.value == price\" */ eq(/** @src 18:2878:2887  \"msg.value\" */ callvalue(), /** @src 18:2878:2896  \"msg.value == price\" */ _24))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 64)\n                            mstore(add(memPtr_10, 68), \"Please submit the asking price i\")\n                            mstore(add(memPtr_10, 100), \"n order to complete the purchase\")\n                            revert(memPtr_10, 132)\n                        }\n                        mstore(0, value_8)\n                        mstore(32, /** @src 18:2770:2784  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:2973:3002  \"idToMarketItem[tokenId].owner\"\n                        let _25 := add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:2973:3002  \"idToMarketItem[tokenId].owner\" */ 2)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        sstore(/** @src 18:2973:3002  \"idToMarketItem[tokenId].owner\" */ _25, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 18:2973:3002  \"idToMarketItem[tokenId].owner\" */ _25), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 18:3013:3023  \"msg.sender\" */ caller(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))))\n                        mstore(0, value_8)\n                        mstore(32, /** @src 18:2770:2784  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:3032:3060  \"idToMarketItem[tokenId].sold\"\n                        let _26 := add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), 4)\n                        sstore(_26, or(and(sload(_26), not(255)), 1))\n                        mstore(0, value_8)\n                        mstore(32, /** @src 18:2770:2784  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:3075:3105  \"idToMarketItem[tokenId].seller\"\n                        let _27 := add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), 1)\n                        sstore(_27, and(sload(_27), shl(160, 0xffffffffffffffffffffffff)))\n                        sstore(/** @src 18:3135:3147  \"_itemsSold++\" */ 0x08, increment_uint256(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sload(/** @src 18:3135:3147  \"_itemsSold++\" */ 0x08)))\n                        /// @src 18:3199:3206  \"tokenId\"\n                        fun_transfer(/** @src 18:3180:3184  \"this\" */ address(), /** @src 18:3013:3023  \"msg.sender\" */ caller(), /** @src 18:3199:3206  \"tokenId\" */ value_8)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let cleaned_3 := and(sload(/** @src 18:3223:3228  \"owner\" */ 0x0a), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                        let _28 := sload(/** @src 18:3239:3251  \"listingPrice\" */ 0x09)\n                        /// @src 18:3215:3252  \"payable(owner).transfer(listingPrice)\"\n                        let _29 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:3215:3252  \"payable(owner).transfer(listingPrice)\"\n                        if iszero(_28) { _29 := 2300 }\n                        if iszero(call(_29, cleaned_3, _28, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 0, 0, 0))\n                        /// @src 18:3215:3252  \"payable(owner).transfer(listingPrice)\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 18:3260:3295  \"payable(seller).transfer(msg.value)\"\n                        let _30 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                        /// @src 18:3260:3295  \"payable(seller).transfer(msg.value)\"\n                        if iszero(/** @src 18:2878:2887  \"msg.value\" */ callvalue())\n                        /// @src 18:3260:3295  \"payable(seller).transfer(msg.value)\"\n                        { _30 := 2300 }\n                        if iszero(call(_30, cleaned_2, /** @src 18:2878:2887  \"msg.value\" */ callvalue(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 0, 0, 0))\n                        /// @src 18:3260:3295  \"payable(seller).transfer(msg.value)\"\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 18:3308:3356  \"NFTPurchased(tokenId, msg.sender, seller, price)\"\n                        let _31 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ mload(64)\n                        mstore(_31, _24)\n                        /// @src 18:3308:3356  \"NFTPurchased(tokenId, msg.sender, seller, price)\"\n                        log4(_31, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32, /** @src 18:3308:3356  \"NFTPurchased(tokenId, msg.sender, seller, price)\" */ 0xef1fb2bd31f5ed737e6054243d9b5eacd3af967f35af45e8fb844ca6dbbe98f9, value_8, /** @src 18:3013:3023  \"msg.sender\" */ caller(), /** @src 18:3308:3356  \"NFTPurchased(tokenId, msg.sender, seller, price)\" */ cleaned_2)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        return(0, 0)\n                    }\n                    case 0xe219fc75 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        let value_10 := calldataload(36)\n                        mstore(0, value_9)\n                        mstore(32, /** @src 18:2242:2256  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let cleaned_4 := and(sload(/** @src 18:2242:2271  \"idToMarketItem[tokenId].owner\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:2242:2271  \"idToMarketItem[tokenId].owner\" */ 2)), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                        if iszero(/** @src 18:2242:2285  \"idToMarketItem[tokenId].owner == msg.sender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned_4, /** @src 18:2275:2285  \"msg.sender\" */ caller()))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 42)\n                            mstore(add(memPtr_11, 68), \"Only item owner can perform this\")\n                            mstore(add(memPtr_11, 100), \" operation\")\n                            revert(memPtr_11, 132)\n                        }\n                        if iszero(/** @src 18:2348:2366  \"msg.value == price\" */ eq(/** @src 18:2348:2357  \"msg.value\" */ callvalue(), /** @src 18:2348:2366  \"msg.value == price\" */ value_10))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, 36), 35)\n                            mstore(add(memPtr_12, 68), \"Price must be equal by sender.va\")\n                            mstore(add(memPtr_12, 100), \"lue\")\n                            revert(memPtr_12, 132)\n                        }\n                        mstore(0, value_9)\n                        mstore(32, /** @src 18:2242:2256  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:2414:2442  \"idToMarketItem[tokenId].sold\"\n                        let _32 := add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), 4)\n                        sstore(_32, and(sload(_32), not(255)))\n                        mstore(0, value_9)\n                        mstore(32, /** @src 18:2242:2256  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        sstore(/** @src 18:2458:2487  \"idToMarketItem[tokenId].price\" */ add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:2458:2487  \"idToMarketItem[tokenId].price\" */ 3), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ value_10)\n                        mstore(0, value_9)\n                        mstore(32, /** @src 18:2242:2256  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:2503:2533  \"idToMarketItem[tokenId].seller\"\n                        let _33 := add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), 1)\n                        sstore(/** @src 18:2503:2533  \"idToMarketItem[tokenId].seller\" */ _33, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 18:2503:2533  \"idToMarketItem[tokenId].seller\" */ _33), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 18:2275:2285  \"msg.sender\" */ caller(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))))\n                        mstore(0, value_9)\n                        mstore(32, /** @src 18:2242:2256  \"idToMarketItem\" */ 0x0b)\n                        /// @src 18:2563:2592  \"idToMarketItem[tokenId].owner\"\n                        let _34 := add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ keccak256(0, 64), /** @src 18:2242:2271  \"idToMarketItem[tokenId].owner\" */ 2)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        sstore(/** @src 18:2563:2592  \"idToMarketItem[tokenId].owner\" */ _34, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 18:2563:2592  \"idToMarketItem[tokenId].owner\" */ _34), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 18:2611:2615  \"this\" */ address(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))))\n                        let _35 := sload(/** @src 18:2625:2637  \"_itemsSold--\" */ 0x08)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        if iszero(_35)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 18:2625:2637  \"_itemsSold--\" */ 0x08, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ add(_35, not(0)))\n                        /// @src 18:2683:2690  \"tokenId\"\n                        fun_transfer(/** @src 18:2275:2285  \"msg.sender\" */ caller(), /** @src 18:2611:2615  \"this\" */ address(), /** @src 18:2683:2690  \"tokenId\" */ value_9)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        return(0, 0)\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_16641()\n                        let value1_1 := abi_decode_address()\n                        mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 4:4038:4056  \"_operatorApprovals\" */ 0x05)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let dataSlot_10 := keccak256(0, 64)\n                        /// @src 4:4038:4073  \"_operatorApprovals[owner][operator]\"\n                        let dataSlot_11 := /** @src -1:-1:-1 */ 0\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 4:4038:4063  \"_operatorApprovals[owner]\" */ dataSlot_10)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        dataSlot_11 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                        let value_11 := and(sload(/** @src 4:4038:4073  \"_operatorApprovals[owner][operator]\" */ dataSlot_11), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0xff)\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, iszero(iszero(value_11)))\n                        return(memPos_11, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_16641() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_struct_MarketItem_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let _1 := mload(srcPtr)\n                    mstore(pos, mload(_1))\n                    mstore(add(pos, 32), and(mload(add(_1, 32)), sub(shl(160, 1), 1)))\n                    mstore(add(pos, 64), and(mload(add(_1, 64)), sub(shl(160, 1), 1)))\n                    mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n                    mstore(add(pos, 0x80), iszero(iszero(mload(add(_1, 0x80)))))\n                    pos := add(pos, 0xa0)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                value0 := value\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_16643(memPtr)\n            {\n                let newFreePtr := add(memPtr, 160)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                let _1 := array_allocation_size_string(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_allocation_size_array_struct_MarketItem_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_array_array_struct_MarketItem_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_MarketItem_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let _2 := add(array_allocation_size_array_struct_MarketItem_dyn(length), not(31))\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    let memPtr_2 := mload(64)\n                    finalize_allocation_16643(memPtr_2)\n                    mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(add(memPtr_2, 32), /** @src -1:-1:-1 */ 0)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(add(memPtr_2, 64), /** @src -1:-1:-1 */ 0)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(add(memPtr_2, 96), /** @src -1:-1:-1 */ 0)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(add(memPtr_2, 128), /** @src -1:-1:-1 */ 0)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(add(add(memPtr_1, i), 32), memPtr_2)\n                }\n            }\n            function memory_array_index_access_struct_MarketItem_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 485 @src 4:4142:4720  \"function transferFrom(address from, address to, uint256 tokenId) public virtual {...\"\n            function fun_transferFrom(var_from, var_to, var_tokenId)\n            {\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let _1 := and(/** @src 4:4236:4252  \"to == address(0)\" */ var_to, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:4232:4319  \"if (to == address(0)) {...\"\n                if /** @src 4:4236:4252  \"to == address(0)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _1)\n                /// @src 4:4232:4319  \"if (to == address(0)) {...\"\n                {\n                    /// @src 4:4275:4308  \"ERC721InvalidReceiver(address(0))\"\n                    mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(/** @src 4:4275:4308  \"ERC721InvalidReceiver(address(0))\" */ 4, /** @src 4:4250:4251  \"0\" */ 0x00)\n                    /// @src 4:4275:4308  \"ERC721InvalidReceiver(address(0))\"\n                    revert(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                }\n                /// @src 4:4561:4595  \"_update(to, tokenId, _msgSender())\"\n                let var := /** @src 4:4250:4251  \"0\" */ 0x00\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:5824:5831  \"_owners\" */ 0x02)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let cleaned := and(sload(keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 4:9058:9076  \"auth != address(0)\"\n                let _2 := iszero(iszero(/** @src 10:735:745  \"msg.sender\" */ caller()))\n                /// @src 4:9054:9140  \"if (auth != address(0)) {...\"\n                if /** @src 4:9058:9076  \"auth != address(0)\" */ _2\n                /// @src 4:9054:9140  \"if (auth != address(0)) {...\"\n                {\n                    /// @src 4:6539:6666  \"spender != address(0) &&...\"\n                    let expr := _2\n                    if _2\n                    {\n                        /// @src 4:6577:6629  \"owner == spender || isApprovedForAll(owner, spender)\"\n                        let expr_1 := /** @src 4:6577:6593  \"owner == spender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned, /** @src 10:735:745  \"msg.sender\" */ caller())\n                        /// @src 4:6577:6629  \"owner == spender || isApprovedForAll(owner, spender)\"\n                        if iszero(expr_1)\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned)\n                            mstore(0x20, /** @src 4:4038:4056  \"_operatorApprovals\" */ 0x05)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            let dataSlot := keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                            /// @src 4:4038:4073  \"_operatorApprovals[owner][operator]\"\n                            let dataSlot_1 := /** @src 4:4250:4251  \"0\" */ 0x00\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 10:735:745  \"msg.sender\" */ caller(), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 4:4038:4063  \"_operatorApprovals[owner]\" */ dataSlot)\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            dataSlot_1 := keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                            /// @src 4:6577:6629  \"owner == spender || isApprovedForAll(owner, spender)\"\n                            expr_1 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(/** @src 4:4038:4073  \"_operatorApprovals[owner][operator]\" */ dataSlot_1), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0xff)\n                        }\n                        /// @src 4:6577:6665  \"owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender\"\n                        let expr_2 := expr_1\n                        if iszero(expr_1)\n                        {\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                            mstore(0x20, /** @src 4:6059:6074  \"_tokenApprovals\" */ 0x04)\n                            /// @src 4:6577:6665  \"owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender\"\n                            expr_2 := /** @src 4:6633:6665  \"_getApproved(tokenId) == spender\" */ eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(sload(keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)), sub(shl(160, 1), 1)), /** @src 10:735:745  \"msg.sender\" */ caller())\n                        }\n                        /// @src 4:6539:6666  \"spender != address(0) &&...\"\n                        expr := expr_2\n                    }\n                    /// @src 4:7212:7467  \"if (!_isAuthorized(owner, spender, tokenId)) {...\"\n                    if /** @src 4:7216:7255  \"!_isAuthorized(owner, spender, tokenId)\" */ iszero(/** @src 4:7217:7255  \"_isAuthorized(owner, spender, tokenId)\" */ expr)\n                    /// @src 4:7212:7467  \"if (!_isAuthorized(owner, spender, tokenId)) {...\"\n                    {\n                        /// @src 4:7271:7457  \"if (owner == address(0)) {...\"\n                        switch /** @src 4:7275:7294  \"owner == address(0)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned)\n                        case /** @src 4:7271:7457  \"if (owner == address(0)) {...\" */ 0 {\n                            /// @src 4:7398:7442  \"ERC721InsufficientApproval(spender, tokenId)\"\n                            mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 4:7398:7442  \"ERC721InsufficientApproval(spender, tokenId)\" */ shl(224, 0x177e802f))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 4:7398:7442  \"ERC721InsufficientApproval(spender, tokenId)\" */ 4, /** @src 10:735:745  \"msg.sender\" */ caller())\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(36, var_tokenId)\n                            /// @src 4:7398:7442  \"ERC721InsufficientApproval(spender, tokenId)\"\n                            revert(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 68)\n                        }\n                        default /// @src 4:7271:7457  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 4:7321:7352  \"ERC721NonexistentToken(tokenId)\"\n                            mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 4:7321:7352  \"ERC721NonexistentToken(tokenId)\" */ shl(224, 0x7e273289))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 4:7321:7352  \"ERC721NonexistentToken(tokenId)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                            /// @src 4:7321:7352  \"ERC721NonexistentToken(tokenId)\"\n                            revert(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                        }\n                    }\n                }\n                /// @src 4:9180:9436  \"if (from != address(0)) {...\"\n                if /** @src 4:9184:9202  \"from != address(0)\" */ iszero(iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned))\n                /// @src 4:9180:9436  \"if (from != address(0)) {...\"\n                {\n                    /// @src 4:9342:9347  \"false\"\n                    fun_approve(var_tokenId)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned)\n                    mstore(0x20, /** @src 4:9391:9400  \"_balances\" */ 0x03)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    let dataSlot_2 := keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                    sstore(dataSlot_2, add(sload(/** @src 4:9391:9411  \"_balances[from] -= 1\" */ dataSlot_2), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ not(0)))\n                }\n                mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _1)\n                mstore(0x20, /** @src 4:9510:9519  \"_balances\" */ 0x03)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let dataSlot_3 := keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                sstore(dataSlot_3, add(sload(/** @src 4:9510:9528  \"_balances[to] += 1\" */ dataSlot_3), /** @src 4:9450:9466  \"to != address(0)\" */ 1))\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:5824:5831  \"_owners\" */ 0x02)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let dataSlot_4 := keccak256(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                sstore(/** @src 4:9563:9579  \"_owners[tokenId]\" */ dataSlot_4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 4:9563:9579  \"_owners[tokenId]\" */ dataSlot_4), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 4:9600:9627  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 4:4250:4251  \"0\" */ 0x00, 0x00, /** @src 4:9600:9627  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, cleaned, _1, var_tokenId)\n                /// @src 4:9638:9649  \"return from\"\n                var := cleaned\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let _3 := and(/** @src 4:4609:4630  \"previousOwner != from\" */ var_from, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:4605:4714  \"if (previousOwner != from) {...\"\n                if /** @src 4:4609:4630  \"previousOwner != from\" */ iszero(eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned, _3))\n                /// @src 4:4605:4714  \"if (previousOwner != from) {...\"\n                {\n                    /// @src 4:4653:4703  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                    mstore(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 4:4653:4703  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ shl(224, 0x64283d7b))\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(/** @src 4:4653:4703  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _3)\n                    mstore(36, var_tokenId)\n                    mstore(68, cleaned)\n                    /// @src 4:4653:4703  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                    revert(/** @src 4:4250:4251  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 100)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            /// @ast-id 533 @src 4:4984:5217  \"function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_mpos)\n            {\n                /// @src 4:5120:5127  \"tokenId\"\n                fun_transferFrom(var_from, var_to, var_tokenId)\n                /// @src 9:1169:1911  \"if (to.code.length > 0) {...\"\n                if /** @src 9:1173:1191  \"to.code.length > 0\" */ iszero(iszero(/** @src 9:1173:1187  \"to.code.length\" */ extcodesize(var_to)))\n                /// @src 9:1169:1911  \"if (to.code.length > 0) {...\"\n                {\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    let _1 := and(/** @src 9:1211:1230  \"IERC721Receiver(to)\" */ var_to, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                    /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                    let _2 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ mload(64)\n                    /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                    mstore(_2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(225, 0x0a85bd01))\n                    mstore(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ add(_2, 4), /** @src 10:735:745  \"msg.sender\" */ caller())\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(add(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ _2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36), and(var_from, sub(shl(160, 1), 1)))\n                    mstore(add(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ _2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ _2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 100), 128)\n                    /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), _1, /** @src 9:1190:1191  \"0\" */ 0x00, /** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ _2, sub(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ abi_encode_string(var_data_mpos, add(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ _2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 132)), /** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ _2), _2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32)\n                    /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                    let expr := /** @src 9:1190:1191  \"0\" */ 0x00\n                    /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _3 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32\n                        /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                        if gt(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32, /** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_2, _3)\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        if slt(sub(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ add(_2, _3), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _2), 32)\n                        {\n                            revert(/** @src 9:1190:1191  \"0\" */ 0x00, 0x00)\n                        }\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        let value := mload(_2)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                        {\n                            revert(/** @src 9:1190:1191  \"0\" */ 0x00, 0x00)\n                        }\n                        /// @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 9:1207:1901  \"try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 9:1321:1503  \"if (retval != IERC721Receiver.onERC721Received.selector) {...\"\n                        if /** @src 9:1325:1376  \"retval != IERC721Receiver.onERC721Received.selector\" */ iszero(eq(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 9:1325:1376  \"retval != IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(224, 0xffffffff)), shl(225, 0x0a85bd01)))\n                        /// @src 9:1321:1503  \"if (retval != IERC721Receiver.onERC721Received.selector) {...\"\n                        {\n                            /// @src 9:1445:1484  \"IERC721Errors.ERC721InvalidReceiver(to)\"\n                            mstore(/** @src 9:1190:1191  \"0\" */ 0x00, /** @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _1)\n                            /// @src 9:1445:1484  \"IERC721Errors.ERC721InvalidReceiver(to)\"\n                            revert(/** @src 9:1190:1191  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                        }\n                    }\n                    default /// @src 9:1207:1901  \"try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 9:1518:1901  \"catch (bytes memory reason) {...\"\n                        let data := /** @src 9:1190:1191  \"0\" */ 0x00\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _4 := returndatasize()\n                            let _5 := array_allocation_size_string(_4)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _5)\n                            mstore(memPtr, _4)\n                            data := memPtr\n                            returndatacopy(add(memPtr, 32), /** @src 9:1190:1191  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ returndatasize())\n                        }\n                        let _6 := mload(/** @src 9:1568:1581  \"reason.length\" */ data)\n                        /// @src 9:1564:1887  \"if (reason.length == 0) {...\"\n                        switch /** @src 9:1568:1586  \"reason.length == 0\" */ iszero(_6)\n                        case /** @src 9:1564:1887  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 9:1758:1869  \"assembly (\\\"memory-safe\\\") {...\"\n                            revert(add(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 32, /** @src 9:1758:1869  \"assembly (\\\"memory-safe\\\") {...\" */ data), _6)\n                        }\n                        default /// @src 9:1564:1887  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 9:1672:1711  \"IERC721Errors.ERC721InvalidReceiver(to)\"\n                            mstore(/** @src 9:1190:1191  \"0\" */ 0x00, /** @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                            mstore(/** @src 9:1211:1278  \"IERC721Receiver(to).onERC721Received(operator, from, tokenId, data)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _1)\n                            /// @src 9:1672:1711  \"IERC721Errors.ERC721InvalidReceiver(to)\"\n                            revert(/** @src 9:1190:1191  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                        }\n                    }\n                }\n            }\n            /// @ast-id 1366 @src 7:1211:1804  \"function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {...\"\n            function fun_tokenURI(var_tokenId) -> var_mpos\n            {\n                /// @src 7:1284:1297  \"string memory\"\n                var_mpos := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 96\n                /// @src 7:1309:1331  \"_requireOwned(tokenId)\"\n                pop(fun_requireOwned(var_tokenId))\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                mstore(0x20, /** @src 7:1368:1378  \"_tokenURIs\" */ 0x06)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)\n                let memPtr := mload(0x40)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let slotValue := sload(dataSlot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ dataSlot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x20)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    for { } lt(i, length) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(memPtr, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, 1)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let length_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                length_1 := /** @src -1:-1:-1 */ 0\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                size := 0x20\n                let memPtr_1 := mload(0x40)\n                finalize_allocation(memPtr_1, 0x20)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 7:1540:1556  \"return _tokenURI\"\n                var_mpos := memPtr\n            }\n            /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            /// @ast-id 1124 @src 4:16212:16453  \"function _requireOwned(uint256 tokenId) internal view returns (address) {...\"\n            function fun_requireOwned(var_tokenId) -> var_\n            {\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:5824:5831  \"_owners\" */ 0x02)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 4:16337:16425  \"if (owner == address(0)) {...\"\n                if /** @src 4:16341:16360  \"owner == address(0)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned)\n                /// @src 4:16337:16425  \"if (owner == address(0)) {...\"\n                {\n                    /// @src 4:16383:16414  \"ERC721NonexistentToken(tokenId)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 4:7321:7352  \"ERC721NonexistentToken(tokenId)\" */ shl(224, 0x7e273289))\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(/** @src 4:16383:16414  \"ERC721NonexistentToken(tokenId)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                    /// @src 4:16383:16414  \"ERC721NonexistentToken(tokenId)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                }\n                /// @src 4:16434:16446  \"return owner\"\n                var_ := cleaned\n            }\n            /// @ast-id 738 @src 4:8861:9656  \"function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {...\"\n            function fun_update(var_to, var_tokenId) -> var\n            {\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 4:5824:5831  \"_owners\" */ 0x02)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let cleaned := and(sload(keccak256(0, 0x40)), sub(shl(160, 1), 1))\n                /// @src 4:9180:9436  \"if (from != address(0)) {...\"\n                if /** @src 4:9184:9202  \"from != address(0)\" */ iszero(iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ cleaned))\n                /// @src 4:9180:9436  \"if (from != address(0)) {...\"\n                {\n                    /// @src 4:9342:9347  \"false\"\n                    fun_approve(var_tokenId)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(0, cleaned)\n                    mstore(0x20, /** @src 4:9391:9400  \"_balances\" */ 0x03)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    let dataSlot := keccak256(0, 0x40)\n                    sstore(dataSlot, add(sload(/** @src 4:9391:9411  \"_balances[from] -= 1\" */ dataSlot), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ not(0)))\n                }\n                let _1 := and(/** @src 4:9450:9466  \"to != address(0)\" */ var_to, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:9446:9553  \"if (to != address(0)) {...\"\n                if /** @src 4:9450:9466  \"to != address(0)\" */ iszero(iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _1))\n                /// @src 4:9446:9553  \"if (to != address(0)) {...\"\n                {\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(0, _1)\n                    mstore(0x20, /** @src 4:9510:9519  \"_balances\" */ 0x03)\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    let dataSlot_1 := keccak256(0, 0x40)\n                    sstore(dataSlot_1, add(sload(/** @src 4:9510:9528  \"_balances[to] += 1\" */ dataSlot_1), /** @src 4:9058:9076  \"auth != address(0)\" */ 1))\n                }\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 4:5824:5831  \"_owners\" */ 0x02)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let dataSlot_2 := keccak256(0, 0x40)\n                sstore(/** @src 4:9563:9579  \"_owners[tokenId]\" */ dataSlot_2, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ or(and(sload(/** @src 4:9563:9579  \"_owners[tokenId]\" */ dataSlot_2), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 4:9600:9627  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0, 0, /** @src 4:9600:9627  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, cleaned, _1, var_tokenId)\n                /// @src 4:9638:9649  \"return from\"\n                var := cleaned\n            }\n            /// @ast-id 926 @src 4:12061:12521  \"function _transfer(address from, address to, uint256 tokenId) internal {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 4:12142:12229  \"if (to == address(0)) {...\"\n                if /** @src 4:12146:12162  \"to == address(0)\" */ iszero(/** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 4:12146:12162  \"to == address(0)\" */ var_to, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1)))\n                /// @src 4:12142:12229  \"if (to == address(0)) {...\"\n                {\n                    /// @src 4:12185:12218  \"ERC721InvalidReceiver(address(0))\"\n                    mstore(/** @src 4:12160:12161  \"0\" */ 0x00, /** @src 4:10084:10117  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(/** @src 4:12185:12218  \"ERC721InvalidReceiver(address(0))\" */ 4, /** @src 4:12160:12161  \"0\" */ 0x00)\n                    /// @src 4:12185:12218  \"ERC721InvalidReceiver(address(0))\"\n                    revert(/** @src 4:12160:12161  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                }\n                /// @src 4:12308:12335  \"previousOwner == address(0)\"\n                let _1 := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ and(/** @src 4:12262:12294  \"_update(to, tokenId, address(0))\" */ fun_update(var_to, var_tokenId), /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                /// @src 4:12304:12515  \"if (previousOwner == address(0)) {...\"\n                switch /** @src 4:12308:12335  \"previousOwner == address(0)\" */ iszero(_1)\n                case /** @src 4:12304:12515  \"if (previousOwner == address(0)) {...\" */ 0 {\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    let _2 := and(/** @src 4:12410:12431  \"previousOwner != from\" */ var_from, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ sub(shl(160, 1), 1))\n                    /// @src 4:12406:12515  \"if (previousOwner != from) {...\"\n                    if /** @src 4:12410:12431  \"previousOwner != from\" */ iszero(eq(_1, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _2))\n                    /// @src 4:12406:12515  \"if (previousOwner != from) {...\"\n                    {\n                        /// @src 4:12454:12504  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                        mstore(/** @src 4:12160:12161  \"0\" */ 0x00, /** @src 4:4653:4703  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ shl(224, 0x64283d7b))\n                        /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                        mstore(/** @src 4:12454:12504  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ _2)\n                        mstore(36, var_tokenId)\n                        mstore(68, _1)\n                        /// @src 4:12454:12504  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                        revert(/** @src 4:12160:12161  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 100)\n                    }\n                }\n                default /// @src 4:12304:12515  \"if (previousOwner == address(0)) {...\"\n                {\n                    /// @src 4:12358:12389  \"ERC721NonexistentToken(tokenId)\"\n                    mstore(/** @src 4:12160:12161  \"0\" */ 0x00, /** @src 4:7321:7352  \"ERC721NonexistentToken(tokenId)\" */ shl(224, 0x7e273289))\n                    /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                    mstore(/** @src 4:12358:12389  \"ERC721NonexistentToken(tokenId)\" */ 4, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ var_tokenId)\n                    /// @src 4:12358:12389  \"ERC721NonexistentToken(tokenId)\"\n                    revert(/** @src 4:12160:12161  \"0\" */ 0x00, /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 36)\n                }\n            }\n            /// @ast-id 1058 @src 4:14794:15456  \"function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {...\"\n            function fun_approve(var_tokenId)\n            {\n                /// @src 4:14954:14985  \"emitEvent || auth != address(0)\"\n                let expr := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                /// @src 4:14954:14985  \"emitEvent || auth != address(0)\"\n                expr := /** @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\" */ 0\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 4:15420:15435  \"_tokenApprovals\" */ 0x04)\n                /// @src 18:197:5438  \"contract NFTMarketplace is ERC721URIStorage {...\"\n                let dataSlot := keccak256(0, 0x40)\n                sstore(dataSlot, and(sload(dataSlot), shl(160, 0xffffffffffffffffffffffff)))\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e65c8a602b54abcfbc9c79c5434505f2ce7704c1d5f71e979cee07327acd3c1f64736f6c634300081a0033\"\n    }\n}\n","hash":"27d7a02e79ad11b78da1862b12002a28c4679e3f810d0978646721378c0d2f1b","factoryDependencies":{}}}}}}